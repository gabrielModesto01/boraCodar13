{"version":3,"file":"imask.js","sources":["../src/core/change-details.js","../src/core/utils.js","../src/core/action-details.js","../src/core/continuous-tail-details.js","../src/core/holder.js","../src/masked/base.js","../src/masked/factory.js","../src/masked/pattern/input-definition.js","../src/masked/pattern/fixed-definition.js","../src/masked/pattern/chunk-tail-details.js","../src/masked/pattern/cursor.js","../src/masked/regexp.js","../src/masked/pattern.js","../src/masked/range.js","../src/masked/date.js","../src/controls/mask-element.js","../src/controls/html-mask-element.js","../src/controls/html-contenteditable-mask-element.js","../src/controls/input.js","../src/masked/enum.js","../src/masked/number.js","../src/masked/function.js","../src/masked/dynamic.js","../src/masked/pipe.js","../src/index.js"],"sourcesContent":["// @flow\n\n\n/**\n  Provides details of changing model value\n  @param {Object} [details]\n  @param {string} [details.inserted] - Inserted symbols\n  @param {boolean} [details.skip] - Can skip chars\n  @param {number} [details.removeCount] - Removed symbols count\n  @param {number} [details.tailShift] - Additional offset if any changes occurred before tail\n*/\nexport default\nclass ChangeDetails {\n  /** Inserted symbols */\n  inserted: string;\n  /** Can skip chars */\n  skip: boolean;\n  /** Additional offset if any changes occurred before tail */\n  tailShift: number;\n  /** Raw inserted is used by dynamic mask */\n  rawInserted: string;\n\n  constructor (details?: {\n    inserted?: $PropertyType<ChangeDetails, 'inserted'>,\n    rawInserted?: $PropertyType<ChangeDetails, 'rawInserted'>,\n    skip?: $PropertyType<ChangeDetails, 'skip'>,\n    tailShift?: $PropertyType<ChangeDetails, 'tailShift'>,\n  }) {\n    Object.assign(this, {\n      inserted: '',\n      rawInserted: '',\n      skip: false,\n      tailShift: 0,\n    }, details);\n  }\n\n  /**\n    Aggregate changes\n    @returns {ChangeDetails} `this`\n  */\n  aggregate (details: ChangeDetails): ChangeDetails {\n    this.rawInserted += details.rawInserted;\n    this.skip = this.skip || details.skip;\n    this.inserted += details.inserted;\n    this.tailShift += details.tailShift;\n    return this;\n  }\n\n  /** Total offset considering all changes */\n  get offset (): number {\n    return this.tailShift + this.inserted.length;\n  }\n}\n","// @flow\nimport ChangeDetails from './change-details.js';\n\n\n/** Checks if value is string */\nexport\nfunction isString (str: mixed): boolean %checks {\n  return typeof str === 'string' || str instanceof String;\n}\n\n/**\n  Direction\n  @prop {string} NONE\n  @prop {string} LEFT\n  @prop {string} FORCE_LEFT\n  @prop {string} RIGHT\n  @prop {string} FORCE_RIGHT\n*/\nexport\nconst DIRECTION = {\n  NONE: 'NONE',\n  LEFT: 'LEFT',\n  FORCE_LEFT: 'FORCE_LEFT',\n  RIGHT: 'RIGHT',\n  FORCE_RIGHT: 'FORCE_RIGHT',\n}\n/**\n  Direction\n  @enum {string}\n*/\nexport\ntype Direction = $Values<typeof DIRECTION>;\n\n/** Returns next char index in direction */\nexport\nfunction indexInDirection (pos: number, direction: Direction): number {\n  if (direction === DIRECTION.LEFT) --pos;\n  return pos;\n}\n\n/** Returns next char position in direction */\nexport\nfunction posInDirection (pos: number, direction: Direction): number {\n  switch (direction) {\n    case DIRECTION.LEFT:\n    case DIRECTION.FORCE_LEFT:\n      return --pos;\n    case DIRECTION.RIGHT:\n    case DIRECTION.FORCE_RIGHT:\n      return ++pos;\n    default:\n      return pos;\n  }\n}\n\n/** */\nexport\nfunction forceDirection (direction: Direction): Direction {\n  switch (direction) {\n    case DIRECTION.LEFT:\n      return DIRECTION.FORCE_LEFT;\n    case DIRECTION.RIGHT:\n      return DIRECTION.FORCE_RIGHT;\n    default:\n      return direction;\n  }\n}\n\n/** Escapes regular expression control chars */\nexport\nfunction escapeRegExp (str: string): string {\n  return str.replace(/([.*+?^=!:${}()|[\\]\\/\\\\])/g, '\\\\$1');\n}\n\nexport\nfunction normalizePrepare (prep: string | [string, ChangeDetails]): [string, ChangeDetails] {\n  return Array.isArray(prep) ? prep : [\n    prep,\n    new ChangeDetails(),\n  ];\n}\n\n// cloned from https://github.com/epoberezkin/fast-deep-equal with small changes\nexport\nfunction objectIncludes (b: any, a: any): boolean {\n  if (a === b) return true;\n\n  var arrA = Array.isArray(a)\n    , arrB = Array.isArray(b)\n    , i;\n\n  if (arrA && arrB) {\n    if (a.length != b.length) return false;\n    for (i = 0; i < a.length; i++)\n      if (!objectIncludes(a[i], b[i])) return false;\n    return true;\n  }\n\n  if (arrA != arrB) return false;\n\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    var dateA = a instanceof Date\n      , dateB = b instanceof Date;\n    if (dateA && dateB) return a.getTime() == b.getTime();\n    if (dateA != dateB) return false;\n\n    var regexpA = a instanceof RegExp\n      , regexpB = b instanceof RegExp;\n    if (regexpA && regexpB) return a.toString() == b.toString();\n    if (regexpA != regexpB) return false;\n\n    var keys = Object.keys(a);\n    // if (keys.length !== Object.keys(b).length) return false;\n\n    for (i = 0; i < keys.length; i++)\n      // $FlowFixMe ... ???\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = 0; i < keys.length; i++)\n      if(!objectIncludes(b[keys[i]], a[keys[i]])) return false;\n\n    return true;\n  } else if (a && b && typeof a === 'function' && typeof b === 'function') {\n      return a.toString() === b.toString()\n  }\n\n  return false;\n}\n\n/** Selection range */\nexport\ntype Selection = {\n  start: number;\n  end: number;\n};\n","// @flow\nimport {type Direction, type Selection, DIRECTION} from './utils.js';\n\n\n/** Provides details of changing input */\nexport default\nclass ActionDetails {\n  /** Current input value */\n  value: string;\n  /** Current cursor position */\n  cursorPos: number;\n  /** Old input value */\n  oldValue: string;\n  /** Old selection */\n  oldSelection: Selection;\n\n  constructor (\n    value: string,\n    cursorPos: number,\n    oldValue: string,\n    oldSelection: Selection\n  ) {\n    this.value = value;\n    this.cursorPos = cursorPos;\n    this.oldValue = oldValue;\n    this.oldSelection = oldSelection;\n\n    // double check if left part was changed (autofilling, other non-standard input triggers)\n    while (this.value.slice(0, this.startChangePos) !== this.oldValue.slice(0, this.startChangePos)) {\n      --this.oldSelection.start;\n    }\n  }\n\n  /**\n    Start changing position\n    @readonly\n  */\n  get startChangePos (): number {\n    return Math.min(this.cursorPos, this.oldSelection.start);\n  }\n\n  /**\n    Inserted symbols count\n    @readonly\n  */\n  get insertedCount (): number {\n    return this.cursorPos - this.startChangePos;\n  }\n\n  /**\n    Inserted symbols\n    @readonly\n  */\n  get inserted (): string {\n    return this.value.substr(this.startChangePos, this.insertedCount);\n  }\n\n  /**\n    Removed symbols count\n    @readonly\n  */\n  get removedCount (): number {\n    // Math.max for opposite operation\n    return Math.max((this.oldSelection.end - this.startChangePos) ||\n      // for Delete\n      this.oldValue.length - this.value.length, 0);\n  }\n\n  /**\n    Removed symbols\n    @readonly\n  */\n  get removed (): string {\n    return this.oldValue.substr(this.startChangePos, this.removedCount);\n  }\n\n  /**\n    Unchanged head symbols\n    @readonly\n  */\n  get head (): string {\n    return this.value.substring(0, this.startChangePos);\n  }\n\n  /**\n    Unchanged tail symbols\n    @readonly\n  */\n  get tail (): string {\n    return this.value.substring(this.startChangePos + this.insertedCount);\n  }\n\n  /**\n    Remove direction\n    @readonly\n  */\n  get removeDirection (): Direction {\n    if (!this.removedCount || this.insertedCount) return DIRECTION.NONE;\n\n    // align right if delete at right\n    return (\n      (this.oldSelection.end === this.cursorPos || this.oldSelection.start === this.cursorPos) &&\n      // if not range removed (event with backspace)\n      this.oldSelection.end === this.oldSelection.start\n    ) ?\n      DIRECTION.RIGHT :\n      DIRECTION.LEFT;\n  }\n}\n","// @flow\nimport type { TailDetails, AppendTail } from './tail-details.js';\nimport type ChangeDetails from './change-details.js';\n\n\ntype ContinuousTailState = {\n  value: $PropertyType<ContinuousTailDetails, 'value'>,\n  from: $PropertyType<ContinuousTailDetails, 'from'>,\n  stop?: $PropertyType<ContinuousTailDetails, 'stop'>,\n};\n\n/** Provides details of continuous extracted tail */\nexport default\nclass ContinuousTailDetails implements TailDetails {\n  /** Tail value as string */\n  value: string;\n  /** Tail start position */\n  from: number;\n  /** Start position */\n  stop: ?number;\n\n  constructor (value?: string='', from?: number=0, stop?: number) {\n    this.value = value;\n    this.from = from;\n    this.stop = stop;\n  }\n\n  toString (): string { return this.value; }\n\n  extend (tail: string | TailDetails): void {\n    this.value += String(tail);\n  }\n\n  appendTo (masked: AppendTail): ChangeDetails {\n    return masked.append(this.toString(), { tail: true })\n      .aggregate(masked._appendPlaceholder());\n  }\n\n  get state (): ContinuousTailState {\n    return {\n      value: this.value,\n      from: this.from,\n      stop: this.stop,\n    };\n  }\n\n  set state (state: ContinuousTailState) {\n    Object.assign(this, state);\n  }\n\n  unshift (beforePos?: number): string {\n    if (!this.value.length || (beforePos != null && this.from >= beforePos)) return '';\n\n    const shiftChar = this.value[0];\n    this.value = this.value.slice(1);\n    return shiftChar;\n  }\n\n  shift (): string {\n    if (!this.value.length) return '';\n\n    const shiftChar = this.value[this.value.length-1];\n    this.value = this.value.slice(0, -1);\n    return shiftChar;\n  }\n}\n","/**\n * Applies mask on element.\n * @constructor\n * @param {HTMLInputElement|HTMLTextAreaElement|MaskElement} el - Element to apply mask\n * @param {Object} opts - Custom mask options\n * @return {InputMask}\n */\nexport default\nfunction IMask (el, opts={}) {\n  // currently available only for input-like elements\n  return new IMask.InputMask(el, opts);\n}\n","// @flow\nimport ChangeDetails from '../core/change-details.js';\nimport ContinuousTailDetails from '../core/continuous-tail-details.js';\nimport { type Direction, DIRECTION, isString, normalizePrepare, forceDirection } from '../core/utils.js';\nimport { type TailDetails } from '../core/tail-details.js';\nimport IMask from '../core/holder.js';\n\n\n/** Supported mask type */\nexport\ntype Mask =\n  string |\n  String |\n  RegExp |\n  Class<Number> |\n  Class<Date> |\n  Array<any> |\n  $PropertyType<Masked<*>, 'validate'> |\n  Masked<*> |\n  Class<Masked<*>>;\n\nexport\ntype MaskedState = {|\n  _value: string,\n|};\n\n/** Append flags */\nexport\ntype AppendFlags = {\n  input?: boolean,\n  tail?: boolean,\n  raw?: boolean,\n  _beforeTailState?: any,  // TODO types...\n};\n\n/** Extract flags */\nexport\ntype ExtractFlags = {\n  raw?: boolean\n};\n\nexport\ntype MaskedOptions<MaskType> = {\n  mask: $PropertyType<Masked<MaskType>, 'mask'>,\n  parent?: $PropertyType<Masked<*>, 'parent'>,\n  prepare?: $PropertyType<Masked<MaskType>, 'prepare'>,\n  validate?: $PropertyType<Masked<MaskType>, 'validate'>,\n  commit?: $PropertyType<Masked<MaskType>, 'commit'>,\n  overwrite?: $PropertyType<Masked<MaskType>, 'overwrite'>,\n  eager?: $PropertyType<Masked<MaskType>, 'eager'>,\n  format?: $PropertyType<Masked<MaskType>, 'format'>,\n  parse?: $PropertyType<Masked<MaskType>, 'parse'>,\n  skipInvalid?: $PropertyType<Masked<MaskType>, 'skipInvalid'>,\n};\n\n\n/** Provides common masking stuff */\nexport default\nclass Masked<MaskType> {\n  static DEFAULTS: any; // $Shape<MaskedOptions>; TODO after fix https://github.com/facebook/flow/issues/4773\n  static EMPTY_VALUES: any;\n\n  /** @type {Mask} */\n  mask: MaskType;\n  /** */ // $FlowFixMe no ideas\n  parent: ?Masked<*>;\n  /** Transforms value before mask processing */\n  prepare: (string, Masked<MaskType>, AppendFlags) => string | [string, ChangeDetails];\n  /** Validates if value is acceptable */\n  validate: (string, Masked<MaskType>, AppendFlags) => boolean;\n  /** Does additional processing in the end of editing */\n  commit: (string, Masked<MaskType>) => void;\n  /** Format typed value to string */\n  format: (any, Masked<MaskType>) => string;\n  /** Parse strgin to get typed value */\n  parse: (string, Masked<MaskType>) => any;\n  /** Enable characters overwriting */\n  overwrite: ?boolean | 'shift';\n  /** */\n  eager: boolean | 'remove' | 'append';\n  /** */\n  skipInvalid: boolean;\n  /** */\n  isInitialized: boolean;\n  _value: string;\n  _refreshing: ?boolean;\n  _isolated: ?boolean;\n\n  constructor (opts: {[string]: any}) {\n    this._value = '';\n    this._update({\n      ...Masked.DEFAULTS,\n      ...opts,\n    });\n    this.isInitialized = true;\n  }\n\n  /** Sets and applies new options */\n  updateOptions (opts: {[string]: any}) {\n    if (!Object.keys(opts).length) return;\n    // $FlowFixMe\n    this.withValueRefresh(this._update.bind(this, opts));\n  }\n\n  /**\n    Sets new options\n    @protected\n  */\n  _update (opts: {[string]: any}) {\n    Object.assign(this, opts);\n  }\n\n  /** Mask state */\n  get state (): any {\n    return {\n      _value: this.value,\n    };\n  }\n\n  set state (state: any) {\n    this._value = state._value;\n  }\n\n  /** Resets value */\n  reset () {\n    this._value = '';\n  }\n\n  /** */\n  get value (): string {\n    return this._value;\n  }\n\n  set value (value: string) {\n    this.resolve(value);\n  }\n\n  /** Resolve new value */\n  resolve (value: string): string {\n    this.reset();\n    this.append(value, {input: true}, '');\n    this.doCommit();\n    return this.value;\n  }\n\n  /** */\n  get unmaskedValue (): string {\n    return this.value;\n  }\n\n  set unmaskedValue (value: string) {\n    this.reset();\n    this.append(value, {}, '');\n    this.doCommit();\n  }\n\n  /** */\n  get typedValue (): any {\n    return this.doParse(this.value);\n  }\n\n  set typedValue (value: any) {\n    this.value = this.doFormat(value);\n  }\n\n  /** Value that includes raw user input */\n  get rawInputValue (): string {\n    return this.extractInput(0, this.value.length, {raw: true});\n  }\n\n  set rawInputValue (value: string) {\n    this.reset();\n    this.append(value, {raw: true}, '');\n    this.doCommit();\n  }\n\n  /** */\n  get isComplete (): boolean {\n    return true;\n  }\n\n  /** */\n  get isFilled (): boolean {\n    return this.isComplete;\n  }\n\n  /** Finds nearest input position in direction */\n  nearestInputPos (cursorPos: number, direction?: Direction): number {\n    return cursorPos;\n  }\n\n  /** Extracts value in range considering flags */\n  extractInput (fromPos?: number=0, toPos?: number=this.value.length, flags?: ExtractFlags): string {\n    return this.value.slice(fromPos, toPos);\n  }\n\n  /** Extracts tail in range */\n  extractTail (fromPos?: number=0, toPos?: number=this.value.length): TailDetails {\n    return new ContinuousTailDetails(this.extractInput(fromPos, toPos), fromPos);\n  }\n\n  /** Appends tail */\n  // $FlowFixMe no ideas\n  appendTail (tail: string | String | TailDetails): ChangeDetails {\n    if (isString(tail)) tail = new ContinuousTailDetails(String(tail));\n\n    return tail.appendTo(this);\n  }\n\n  /** Appends char */\n  _appendCharRaw (ch: string, flags: AppendFlags={}): ChangeDetails {\n    if (!ch) return new ChangeDetails();\n\n    this._value += ch;\n    return new ChangeDetails({\n      inserted: ch,\n      rawInserted: ch,\n    });\n  }\n\n  /** Appends char */\n  _appendChar (ch: string, flags: AppendFlags={}, checkTail?: TailDetails): ChangeDetails {\n    const consistentState: MaskedState = this.state;\n    let details: ChangeDetails;\n    [ch, details] = normalizePrepare(this.doPrepare(ch, flags));\n\n    details = details.aggregate(this._appendCharRaw(ch, flags));\n\n    if (details.inserted) {\n      let consistentTail;\n      let appended = this.doValidate(flags) !== false;\n\n      if (appended && checkTail != null) {\n        // validation ok, check tail\n        const beforeTailState = this.state;\n        if (this.overwrite === true) {\n          consistentTail = checkTail.state;\n          checkTail.unshift(this.value.length - details.tailShift);\n        }\n\n        let tailDetails = this.appendTail(checkTail);\n        appended = tailDetails.rawInserted === checkTail.toString();\n\n        // not ok, try shift\n        if (!(appended && tailDetails.inserted) && this.overwrite === 'shift') {\n          this.state = beforeTailState;\n          consistentTail = checkTail.state;\n          checkTail.shift();\n\n          tailDetails = this.appendTail(checkTail);\n          appended = tailDetails.rawInserted === checkTail.toString();\n        }\n\n        // if ok, rollback state after tail\n        if (appended && tailDetails.inserted) this.state = beforeTailState;\n      }\n\n      // revert all if something went wrong\n      if (!appended) {\n        details = new ChangeDetails();\n        this.state = consistentState;\n        if (checkTail && consistentTail) checkTail.state = consistentTail;\n      }\n    }\n    return details;\n  }\n\n  /** Appends optional placeholder at end */\n  _appendPlaceholder (): ChangeDetails {\n    return new ChangeDetails();\n  }\n\n  /** Appends optional eager placeholder at end */\n  _appendEager (): ChangeDetails {\n    return new ChangeDetails();\n  }\n\n  /** Appends symbols considering flags */\n  // $FlowFixMe no ideas\n  append (str: string, flags?: AppendFlags, tail?: string | String | TailDetails): ChangeDetails {\n    if (!isString(str)) throw new Error('value should be string');\n    const details = new ChangeDetails();\n    const checkTail = isString(tail) ? new ContinuousTailDetails(String(tail)) : tail;\n    if (flags?.tail) flags._beforeTailState = this.state;\n\n    for (let ci=0; ci<str.length; ++ci) {\n      const d = this._appendChar(str[ci], flags, checkTail);\n      if (!d.rawInserted && !this.doSkipInvalid(str[ci], flags, checkTail)) break;\n      details.aggregate(d);\n    }\n\n    // append tail but aggregate only tailShift\n    if (checkTail != null) {\n      details.tailShift += this.appendTail(checkTail).tailShift;\n      // TODO it's a good idea to clear state after appending ends\n      // but it causes bugs when one append calls another (when dynamic dispatch set rawInputValue)\n      // this._resetBeforeTailState();\n    }\n\n    if ((this.eager === true || this.eager === 'append') && flags?.input && str) {\n      details.aggregate(this._appendEager());\n    }\n\n    return details;\n  }\n\n  /** */\n  remove (fromPos?: number=0, toPos?: number=this.value.length): ChangeDetails {\n    this._value = this.value.slice(0, fromPos) + this.value.slice(toPos);\n    return new ChangeDetails();\n  }\n\n  /** Calls function and reapplies current value */\n  withValueRefresh<T>(fn: () => T): T {\n    if (this._refreshing || !this.isInitialized) return fn();\n    this._refreshing = true;\n\n    const rawInput = this.rawInputValue;\n    const value = this.value;\n\n    const ret = fn();\n\n    this.rawInputValue = rawInput;\n    // append lost trailing chars at end\n    if (this.value && this.value !== value && value.indexOf(this.value) === 0) {\n      this.append(value.slice(this.value.length), {}, '');\n    }\n\n    delete this._refreshing;\n    return ret;\n  }\n\n  /** */\n  runIsolated<T>(fn: (masked: any) => T): T {\n    if (this._isolated || !this.isInitialized) return fn(this);\n    this._isolated = true;\n    const state = this.state;\n\n    const ret = fn(this);\n\n    this.state = state;\n    delete this._isolated;\n\n    return ret;\n  }\n\n  /** */\n  doSkipInvalid (ch: string, flags: AppendFlags={}, checkTail?: TailDetails): boolean {\n    return this.skipInvalid;\n  }\n\n  /**\n    Prepares string before mask processing\n    @protected\n  */\n  doPrepare (str: string, flags: AppendFlags={}): string | [string, ChangeDetails] {\n    return this.prepare ?\n      this.prepare(str, this, flags) :\n      str;\n  }\n\n  /**\n    Validates if value is acceptable\n    @protected\n  */\n  doValidate (flags: AppendFlags): boolean {\n    return (!this.validate || this.validate(this.value, this, flags)) &&\n      (!this.parent || this.parent.doValidate(flags));\n  }\n\n  /**\n    Does additional processing in the end of editing\n    @protected\n  */\n  doCommit () {\n    if (this.commit) this.commit(this.value, this);\n  }\n\n  /** */\n  doFormat (value: any): string {\n    return this.format ? this.format(value, this) : value;\n  }\n\n  /** */\n  doParse (str: string): any {\n    return this.parse ? this.parse(str, this) : str;\n  }\n\n  /** */\n  splice (start: number, deleteCount: number, inserted: string, removeDirection: Direction, flags: AppendFlags = { input: true }): ChangeDetails {\n    const tailPos: number = start + deleteCount;\n    const tail: TailDetails = this.extractTail(tailPos);\n\n    const eagerRemove = this.eager === true || this.eager === 'remove';\n\n    let oldRawValue;\n    if (eagerRemove)  {\n      removeDirection = forceDirection(removeDirection);\n      oldRawValue = this.extractInput(0, tailPos, {raw: true});\n    }\n\n    let startChangePos: number = start;\n    const details: ChangeDetails = new ChangeDetails();\n\n    // if it is just deletion without insertion\n    if (removeDirection !== DIRECTION.NONE) {\n      startChangePos = this.nearestInputPos(start,\n        deleteCount > 1 && start !== 0 && !eagerRemove ?\n        DIRECTION.NONE :\n        removeDirection\n      );\n\n      // adjust tailShift if start was aligned\n      details.tailShift = startChangePos - start;\n    }\n\n    details.aggregate(this.remove(startChangePos));\n\n    if (eagerRemove && removeDirection !== DIRECTION.NONE && oldRawValue === this.rawInputValue) {\n      if (removeDirection === DIRECTION.FORCE_LEFT) {\n        let valLength;\n        while (oldRawValue === this.rawInputValue && (valLength = this.value.length)) {\n          details\n            .aggregate(new ChangeDetails({ tailShift: -1 }))\n            .aggregate(this.remove(valLength-1));\n        }\n      } else if (removeDirection === DIRECTION.FORCE_RIGHT) {\n        tail.unshift();\n      }\n    }\n\n    return details.aggregate(this.append(inserted, flags, tail));\n  }\n\n  maskEquals (mask: any): boolean {\n    return this.mask === mask;\n  }\n\n  typedValueEquals (value: any): boolean {\n    const tval = this.typedValue;\n\n    return value === tval ||\n      Masked.EMPTY_VALUES.includes(value) && Masked.EMPTY_VALUES.includes(tval) ||\n      this.doFormat(value) === this.doFormat(this.typedValue);\n  }\n}\nMasked.DEFAULTS = {\n  format: String,\n  parse: v => v,\n  skipInvalid: true,\n};\nMasked.EMPTY_VALUES = [undefined, null, ''];\n\n\nIMask.Masked = Masked;\n","// @flow\nimport { isString } from '../core/utils.js';\nimport type Masked from './base.js';\nimport { type Mask } from './base.js';\nimport IMask from '../core/holder.js';\n\n\n/** Get Masked class by mask type */\nexport\nfunction maskedClass (mask: Mask): Class<Masked<*>> {\n  if (mask == null) {\n    throw new Error('mask property should be defined');\n  }\n\n  // $FlowFixMe\n  if (mask instanceof RegExp) return IMask.MaskedRegExp;\n  // $FlowFixMe\n  if (isString(mask)) return IMask.MaskedPattern;\n  // $FlowFixMe\n  if (mask instanceof Date || mask === Date) return IMask.MaskedDate;\n  // $FlowFixMe\n  if (mask instanceof Number || typeof mask === 'number' || mask === Number) return IMask.MaskedNumber;\n  // $FlowFixMe\n  if (Array.isArray(mask) || mask === Array) return IMask.MaskedDynamic;\n  // $FlowFixMe\n  if (IMask.Masked && mask.prototype instanceof IMask.Masked) return mask;\n  // $FlowFixMe\n  if (mask instanceof IMask.Masked) return mask.constructor;\n  // $FlowFixMe\n  if (mask instanceof Function) return IMask.MaskedFunction;\n\n  console.warn('Mask not found for mask', mask);  // eslint-disable-line no-console\n  // $FlowFixMe\n  return IMask.Masked;\n}\n\n/** Creates new {@link Masked} depending on mask type */\nexport default\nfunction createMask (opts: {mask: Mask} | Masked<*>): Masked<*> {\n  // $FlowFixMe\n  if (IMask.Masked && (opts instanceof IMask.Masked)) return opts;\n\n  opts = {...opts};\n  const mask = opts.mask;\n\n  // $FlowFixMe\n  if (IMask.Masked && (mask instanceof IMask.Masked)) return mask;\n\n  const MaskedClass = maskedClass(mask);\n  if (!MaskedClass) throw new Error('Masked class is not found for provided mask, appropriate module needs to be import manually before creating mask.');\n  return new MaskedClass(opts);\n}\n\n\nIMask.createMask = createMask;\n","// @flow\nimport createMask from '../factory.js';\nimport type Masked from '../base.js';\nimport type MaskedPattern from '../pattern.js';\nimport { type TailDetails } from '../../core/tail-details.js';\nimport { type Mask, type ExtractFlags, type AppendFlags } from '../base.js';\nimport ChangeDetails from '../../core/change-details.js';\nimport { DIRECTION, type Direction } from '../../core/utils.js';\nimport { type PatternBlock } from './block.js';\n\n\nexport\ntype Definitions = {[string]: Mask};\n\n/** */\ntype PatternInputDefinitionOptions = {\n  parent: $PropertyType<PatternInputDefinition, 'parent'>,\n  mask: Mask,\n  isOptional: $PropertyType<PatternInputDefinition, 'isOptional'>,\n  lazy: $PropertyType<PatternInputDefinition, 'lazy'>,\n  eager: $PropertyType<PatternInputDefinition, 'eager'>,\n  placeholderChar: $PropertyType<PatternInputDefinition, 'placeholderChar'>,\n};\n\ntype PatternInputDefinitionState = {\n  masked: *,\n  isFilled: boolean,\n};\n\nexport\nconst DEFAULT_INPUT_DEFINITIONS: { [string]: RegExp } = {\n  '0': /\\d/,\n  'a': /[\\u0041-\\u005A\\u0061-\\u007A\\u00AA\\u00B5\\u00BA\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0\\u08A2-\\u08AC\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097F\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA697\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA80-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/,  // http://stackoverflow.com/a/22075070\n  '*': /./\n};\n\n\n/** */\nexport default\nclass PatternInputDefinition implements PatternBlock {\n  /** */\n  +masked: Masked<*>;\n  /** */\n  parent: Masked<*>;\n  /** */\n  isOptional: boolean;\n  /** */\n  isFilled: boolean;\n  /** */\n  lazy: $PropertyType<MaskedPattern, 'lazy'>;\n  /** */\n  eager: $PropertyType<Masked<string>, 'eager'>;\n  /** */\n  placeholderChar: $PropertyType<MaskedPattern, 'placeholderChar'>;\n\n\n  constructor(opts: PatternInputDefinitionOptions) {\n    const {mask, ...blockOpts} = opts;\n\n    this.masked = createMask({mask});\n    Object.assign(this, blockOpts);\n  }\n\n  reset () {\n    this.isFilled = false;\n    this.masked.reset();\n  }\n\n  remove (fromPos?: number=0, toPos?: number=this.value.length): ChangeDetails {\n    if (fromPos === 0 && toPos >= 1) {\n      this.isFilled = false;\n      return this.masked.remove(fromPos, toPos);\n    }\n\n    return new ChangeDetails();\n  }\n\n  get value (): string {\n    return this.masked.value ||\n      (this.isFilled && !this.isOptional ?\n        this.placeholderChar :\n        '');\n  }\n\n  get unmaskedValue (): string {\n    return this.masked.unmaskedValue;\n  }\n\n  get isComplete (): boolean {\n    return Boolean(this.masked.value) || this.isOptional;\n  }\n\n  _appendChar (ch: string, flags: AppendFlags={}): ChangeDetails {\n    if (this.isFilled) return new ChangeDetails();\n\n    const state = this.masked.state;\n    // simulate input\n    const details = this.masked._appendChar(ch, flags);\n\n    if (details.inserted && this.doValidate(flags) === false) {\n      details.inserted = details.rawInserted = '';\n      this.masked.state = state;\n    }\n\n    if (!details.inserted && !this.isOptional && !this.lazy && !flags.input) {\n      details.inserted = this.placeholderChar;\n    }\n    details.skip = !details.inserted && !this.isOptional;\n    this.isFilled = Boolean(details.inserted);\n\n    return details;\n  }\n\n  append (...args: *): ChangeDetails {\n    // TODO probably should be done via _appendChar\n    return this.masked.append(...args);\n  }\n\n  _appendPlaceholder (): ChangeDetails {\n    const details = new ChangeDetails();\n\n    if (this.isFilled || this.isOptional) return details;\n\n    this.isFilled = true;\n    details.inserted = this.placeholderChar;\n    return details;\n  }\n\n  _appendEager (): ChangeDetails {\n    return new ChangeDetails();\n  }\n\n  extractTail (...args: *): TailDetails {\n    return this.masked.extractTail(...args);\n  }\n\n  appendTail (...args: *): ChangeDetails {\n    return this.masked.appendTail(...args);\n  }\n\n  extractInput (fromPos?: number=0, toPos?: number=this.value.length, flags?: ExtractFlags): string {\n    return this.masked.extractInput(fromPos, toPos, flags);\n  }\n\n  nearestInputPos (cursorPos: number, direction: Direction=DIRECTION.NONE): number {\n    const minPos = 0;\n    const maxPos = this.value.length;\n    const boundPos = Math.min(Math.max(cursorPos, minPos), maxPos);\n\n    switch (direction) {\n      case DIRECTION.LEFT:\n      case DIRECTION.FORCE_LEFT:\n        return this.isComplete ? boundPos : minPos;\n      case DIRECTION.RIGHT:\n      case DIRECTION.FORCE_RIGHT:\n        return this.isComplete ? boundPos : maxPos;\n      case DIRECTION.NONE:\n      default: return boundPos;\n    }\n  }\n\n  doValidate (...args: *): boolean {\n    return this.masked.doValidate(...args) && (\n      !this.parent || this.parent.doValidate(...args));\n  }\n\n  doCommit () {\n    this.masked.doCommit();\n  }\n\n  get state (): PatternInputDefinitionState {\n    return {\n      masked: this.masked.state,\n      isFilled: this.isFilled,\n    };\n  }\n\n  set state (state: PatternInputDefinitionState) {\n    this.masked.state = state.masked;\n    this.isFilled = state.isFilled;\n  }\n}\n","// @flow\nimport ChangeDetails from '../../core/change-details.js';\nimport { DIRECTION, type Direction, isString } from '../../core/utils.js';\nimport { type TailDetails } from '../../core/tail-details.js';\nimport ContinuousTailDetails from '../../core/continuous-tail-details.js';\nimport { type ExtractFlags, type AppendFlags, type MaskedState } from '../base.js';\nimport { type PatternBlock } from './block.js';\n\n\n/** */\ntype PatternFixedDefinitionOptions = {\n  char: $PropertyType<PatternFixedDefinition, 'char'>,\n  isUnmasking?: $PropertyType<PatternFixedDefinition, 'isUnmasking'>,\n};\n\ntype PatternFixedDefinitionState = {|\n  ...MaskedState,\n  _isRawInput: ?boolean,\n|};\n\nexport default\nclass PatternFixedDefinition implements PatternBlock {\n  /** */\n  _value: string;\n  /** */\n  char: string;\n  /** */\n  isUnmasking: ?boolean;\n  /** */\n  eager: boolean | 'remove' | 'append';\n  /** */\n  _isRawInput: ?boolean;\n  /** */\n  isFixed: boolean;\n\n  constructor(opts: PatternFixedDefinitionOptions) {\n    Object.assign(this, opts);\n    this._value = '';\n    this.isFixed = true;\n  }\n\n  get value (): string {\n    return this._value;\n  }\n\n  get unmaskedValue (): string {\n    return this.isUnmasking ? this.value : '';\n  }\n\n  reset () {\n    this._isRawInput = false;\n    this._value = '';\n  }\n\n  remove (fromPos?: number=0, toPos?: number=this._value.length): ChangeDetails {\n    this._value = this._value.slice(0, fromPos) + this._value.slice(toPos);\n    if (!this._value) this._isRawInput = false;\n\n    return new ChangeDetails();\n  }\n\n  nearestInputPos (cursorPos: number, direction: Direction=DIRECTION.NONE): number {\n    const minPos = 0;\n    const maxPos = this._value.length;\n\n    switch (direction) {\n      case DIRECTION.LEFT:\n      case DIRECTION.FORCE_LEFT:\n        return minPos;\n      case DIRECTION.NONE:\n      case DIRECTION.RIGHT:\n      case DIRECTION.FORCE_RIGHT:\n      default:\n        return maxPos;\n    }\n  }\n\n  extractInput (fromPos?: number=0, toPos?: number=this._value.length, flags?: ExtractFlags={}): string {\n    return flags.raw && this._isRawInput && this._value.slice(fromPos, toPos) || '';\n  }\n\n  get isComplete (): boolean {\n    return true;\n  }\n\n  get isFilled (): boolean {\n    return Boolean(this._value);\n  }\n\n  _appendChar (ch: string, flags?: AppendFlags={}): ChangeDetails {\n    const details = new ChangeDetails();\n\n    if (this._value) return details;\n    const appendEager = this.eager === true || this.eager === 'append';\n\n    const appended = this.char === ch;\n    const isResolved = appended && (this.isUnmasking || flags.input || flags.raw) && (!flags.raw || !appendEager) && !flags.tail;\n    if (isResolved) details.rawInserted = this.char;\n    this._value = details.inserted = this.char;\n    this._isRawInput = isResolved && (flags.raw || flags.input);\n\n    return details;\n  }\n\n  _appendEager (): ChangeDetails {\n    return this._appendChar(this.char, { tail: true });\n  }\n\n  _appendPlaceholder (): ChangeDetails {\n    const details = new ChangeDetails();\n    if (this._value) return details;\n\n    this._value = details.inserted = this.char;\n    return details;\n  }\n\n  extractTail (fromPos?: number=0, toPos?: number=this.value.length): TailDetails {\n    return new ContinuousTailDetails('');\n  }\n\n  // $FlowFixMe no ideas\n  appendTail (tail: string | String | TailDetails): ChangeDetails {\n    if (isString(tail)) tail = new ContinuousTailDetails(String(tail));\n\n    return tail.appendTo(this);\n  }\n\n  append (str: string, flags?: AppendFlags, tail?: TailDetails): ChangeDetails {\n    const details = this._appendChar(str[0], flags);\n\n    if (tail != null) {\n      details.tailShift += this.appendTail(tail).tailShift;\n    }\n\n    return details;\n  }\n\n  doCommit () {}\n\n  get state (): PatternFixedDefinitionState {\n    return {\n      _value: this._value,\n      _isRawInput: this._isRawInput,\n    };\n  }\n\n  set state (state: PatternFixedDefinitionState) {\n    Object.assign(this, state);\n  }\n}\n","// @flow\nimport type { TailDetails, AppendTail } from '../../core/tail-details.js';\nimport ChangeDetails from '../../core/change-details.js';\nimport { isString } from '../../core/utils.js';\nimport ContinuousTailDetails from '../../core/continuous-tail-details.js';\nimport IMask from '../../core/holder.js';\n\n\ntype ChunksTailState = {\n  chunks: $PropertyType<ChunksTailDetails, 'chunks'>,\n  from: $PropertyType<ChunksTailDetails, 'from'>,\n  stop?: $PropertyType<ChunksTailDetails, 'stop'>,\n  blockIndex?: $PropertyType<ChunksTailDetails, 'blockIndex'>,\n};\n\nexport default\nclass ChunksTailDetails implements TailDetails {\n  chunks: Array<TailDetails>;\n  from: number;\n  stop: ?number;\n  /** */\n  blockIndex: ?number;\n\n  constructor (chunks?: Array<TailDetails>=[], from?: number=0) {\n    this.chunks = chunks;\n    this.from = from;\n  }\n\n  toString (): string {\n    return this.chunks.map(String).join('');\n  }\n\n  // $FlowFixMe no ideas\n  extend (tailChunk: string | String | TailDetails): void {\n    if (!String(tailChunk)) return;\n    if (isString(tailChunk)) tailChunk = new ContinuousTailDetails(String(tailChunk));\n\n    const lastChunk = this.chunks[this.chunks.length-1];\n    const extendLast = lastChunk &&\n      // if stops are same or tail has no stop\n      (lastChunk.stop === tailChunk.stop || tailChunk.stop == null) &&\n      // if tail chunk goes just after last chunk\n      tailChunk.from === (lastChunk.from + lastChunk.toString().length);\n\n    if (tailChunk instanceof ContinuousTailDetails) {\n      // check the ability to extend previous chunk\n      if (extendLast) {\n        // extend previous chunk\n        lastChunk.extend(tailChunk.toString());\n      } else {\n        // append new chunk\n        this.chunks.push(tailChunk);\n      }\n    } else if (tailChunk instanceof ChunksTailDetails) {\n      if (tailChunk.stop == null) {\n        // unwrap floating chunks to parent, keeping `from` pos\n        let firstTailChunk;\n        while (tailChunk.chunks.length && tailChunk.chunks[0].stop == null) {\n          firstTailChunk = tailChunk.chunks.shift();\n          firstTailChunk.from += tailChunk.from;\n          this.extend(firstTailChunk);\n        }\n      }\n\n      // if tail chunk still has value\n      if (tailChunk.toString()) {\n        // if chunks contains stops, then popup stop to container\n        tailChunk.stop = tailChunk.blockIndex;\n        this.chunks.push(tailChunk);\n      }\n    }\n  }\n\n  appendTo (masked: AppendTail): ChangeDetails {\n    // $FlowFixMe\n    if (!(masked instanceof IMask.MaskedPattern)) {\n      const tail = new ContinuousTailDetails(this.toString());\n      return tail.appendTo(masked);\n    }\n\n    const details = new ChangeDetails();\n\n    for (let ci=0; ci < this.chunks.length && !details.skip; ++ci) {\n      const chunk = this.chunks[ci];\n\n      const lastBlockIter = masked._mapPosToBlock(masked.value.length);\n      const stop = chunk.stop;\n      let chunkBlock;\n      if (stop != null &&\n        // if block not found or stop is behind lastBlock\n        (!lastBlockIter || lastBlockIter.index <= stop)\n      ) {\n        if (\n          chunk instanceof ChunksTailDetails ||\n          // for continuous block also check if stop is exist\n          masked._stops.indexOf(stop) >= 0\n        ) {\n          details.aggregate(masked._appendPlaceholder(stop));\n        }\n        chunkBlock = chunk instanceof ChunksTailDetails && masked._blocks[stop];\n      }\n\n      if (chunkBlock) {\n        const tailDetails = chunkBlock.appendTail(chunk);\n        tailDetails.skip = false; // always ignore skip, it will be set on last\n        details.aggregate(tailDetails);\n        masked._value += tailDetails.inserted;\n\n        // get not inserted chars\n        const remainChars = chunk.toString().slice(tailDetails.rawInserted.length);\n        if (remainChars) details.aggregate(masked.append(remainChars, { tail: true }));\n      } else {\n        details.aggregate(masked.append(chunk.toString(), { tail: true }));\n      }\n    };\n\n    return details;\n  }\n\n  get state (): ChunksTailState {\n    return {\n      chunks: this.chunks.map(c => c.state),\n      from: this.from,\n      stop: this.stop,\n      blockIndex: this.blockIndex,\n    };\n  }\n\n  set state (state: ChunksTailState) {\n    const { chunks, ...props } = state;\n    Object.assign(this, props);\n    this.chunks = chunks.map(cstate => {\n      const chunk = \"chunks\" in cstate ?\n        new ChunksTailDetails() :\n        new ContinuousTailDetails();\n      // $FlowFixMe already checked above\n      chunk.state = cstate;\n      return chunk;\n    });\n  }\n\n  unshift (beforePos?: number): string {\n    if (!this.chunks.length || (beforePos != null && this.from >= beforePos)) return '';\n\n    const chunkShiftPos = beforePos != null ? beforePos - this.from : beforePos;\n    let ci=0;\n    while (ci < this.chunks.length) {\n      const chunk = this.chunks[ci];\n      const shiftChar = chunk.unshift(chunkShiftPos);\n\n      if (chunk.toString()) {\n        // chunk still contains value\n        // but not shifted - means no more available chars to shift\n        if (!shiftChar) break;\n        ++ci;\n      } else {\n        // clean if chunk has no value\n        this.chunks.splice(ci, 1);\n      }\n\n      if (shiftChar) return shiftChar;\n    }\n\n    return '';\n  }\n\n  shift (): string {\n    if (!this.chunks.length) return '';\n\n    let ci=this.chunks.length-1;\n    while (0 <= ci) {\n      const chunk = this.chunks[ci];\n      const shiftChar = chunk.shift();\n\n      if (chunk.toString()) {\n        // chunk still contains value\n        // but not shifted - means no more available chars to shift\n        if (!shiftChar) break;\n        --ci;\n      } else {\n        // clean if chunk has no value\n        this.chunks.splice(ci, 1);\n      }\n\n      if (shiftChar) return shiftChar;\n    }\n\n    return '';\n  }\n}\n","// @flow\nimport { DIRECTION } from '../../core/utils.js';\nimport type MaskedPattern from '../pattern.js';\nimport { type PatternBlock } from './block.js';\n\n\ntype PatternCursorState = { offset: number, index: number, ok: boolean };\n\nexport default\nclass PatternCursor {\n  masked: MaskedPattern;\n  offset: number;\n  index: number;\n  ok: boolean;\n  _log: PatternCursorState[];\n\n  constructor (masked: MaskedPattern, pos: number) {\n    this.masked = masked;\n    this._log = [];\n\n    const { offset, index } = masked._mapPosToBlock(pos) || (\n      pos < 0 ?\n        // first\n        { index: 0, offset: 0 } :\n        // last\n        { index: this.masked._blocks.length, offset: 0 }\n    );\n    this.offset = offset;\n    this.index = index;\n    this.ok = false;\n  }\n\n  get block (): PatternBlock {\n    return this.masked._blocks[this.index];\n  }\n\n  get pos (): number {\n    return this.masked._blockStartPos(this.index) + this.offset;\n  }\n\n  get state (): PatternCursorState {\n    return { index: this.index, offset: this.offset, ok: this.ok };\n  }\n\n  set state (s: PatternCursorState) {\n    Object.assign(this, s);\n  }\n\n  pushState () {\n    this._log.push(this.state);\n  }\n\n  popState (): PatternCursorState {\n    const s = this._log.pop();\n    this.state = s;\n    return s;\n  }\n\n  bindBlock () {\n    if (this.block) return;\n    if (this.index < 0) {\n      this.index = 0;\n      this.offset = 0;\n    }\n    if (this.index >= this.masked._blocks.length) {\n      this.index = this.masked._blocks.length - 1;\n      this.offset = this.block.value.length;\n    }\n  }\n\n  _pushLeft(fn: () => ?boolean): boolean {\n    this.pushState();\n    for (this.bindBlock(); 0<=this.index; --this.index, this.offset=this.block?.value.length || 0) {\n      if (fn()) return this.ok = true;\n    }\n\n    return this.ok = false;\n  }\n\n  _pushRight (fn: () => ?boolean): boolean {\n    this.pushState();\n    for (this.bindBlock(); this.index<this.masked._blocks.length; ++this.index, this.offset=0) {\n      if (fn()) return this.ok = true;\n    }\n\n    return this.ok = false;\n  }\n\n  pushLeftBeforeFilled (): boolean {\n    return this._pushLeft(() => {\n      if (this.block.isFixed || !this.block.value) return;\n\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.FORCE_LEFT);\n      if (this.offset !== 0) return true;\n    });\n  }\n\n  pushLeftBeforeInput (): boolean {\n    // cases:\n    // filled input: 00|\n    // optional empty input: 00[]|\n    // nested block: XX<[]>|\n    return this._pushLeft(() => {\n      if (this.block.isFixed) return;\n\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.LEFT);\n      return true;\n    });\n  }\n\n  pushLeftBeforeRequired (): boolean {\n    return this._pushLeft(() => {\n      if (this.block.isFixed || this.block.isOptional && !this.block.value) return;\n\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.LEFT);\n      return true;\n    });\n  }\n\n  pushRightBeforeFilled (): boolean {\n    return this._pushRight(() => {\n      if (this.block.isFixed || !this.block.value) return;\n\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.FORCE_RIGHT);\n      if (this.offset !== this.block.value.length) return true;\n    });\n  }\n\n  pushRightBeforeInput (): boolean {\n    return this._pushRight(() => {\n      if (this.block.isFixed) return;\n\n      // const o = this.offset;\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.NONE);\n      // HACK cases like (STILL DOES NOT WORK FOR NESTED)\n      // aa|X\n      // aa<X|[]>X_    - this will not work\n      // if (o && o === this.offset && this.block instanceof PatternInputDefinition) continue;\n      return true;\n    });\n  }\n\n  pushRightBeforeRequired (): boolean {\n    return this._pushRight(() => {\n      if (this.block.isFixed || this.block.isOptional && !this.block.value) return;\n\n      // TODO check |[*]XX_\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.NONE);\n      return true;\n    });\n  }\n}\n","// @flow\nimport Masked, { type MaskedOptions } from './base.js';\nimport IMask from '../core/holder.js';\n\n\n/** Masking by RegExp */\nexport default\nclass MaskedRegExp extends Masked<RegExp> {\n  /**\n    @override\n    @param {Object} opts\n  */\n  _update (opts: $Shape<MaskedOptions<RegExp>>) {\n    if (opts.mask) opts.validate = (value) => value.search(opts.mask) >= 0;\n    super._update(opts);\n  }\n}\n\n\nIMask.MaskedRegExp = MaskedRegExp;\n","// @flow\nimport {DIRECTION, type Direction, forceDirection} from '../core/utils.js';\nimport ChangeDetails from '../core/change-details.js';\nimport Masked, { type AppendFlags, type ExtractFlags, type MaskedOptions, type MaskedState } from './base.js';\nimport PatternInputDefinition, { DEFAULT_INPUT_DEFINITIONS, type Definitions } from './pattern/input-definition.js';\nimport PatternFixedDefinition from './pattern/fixed-definition.js';\nimport { type TailDetails } from '../core/tail-details.js';\nimport ChunksTailDetails from './pattern/chunk-tail-details.js';\nimport ContinuousTailDetails from '../core/continuous-tail-details.js';\nimport { type PatternBlock } from './pattern/block.js';\nimport PatternCursor from './pattern/cursor.js';\nimport createMask from './factory.js';\nimport IMask from '../core/holder.js';\nimport './regexp.js';  // support for default definitions which are regexp's\n\n\ntype MaskedPatternOptions = {\n  ...MaskedOptions<string>,\n  definitions?: $PropertyType<MaskedPattern, 'definitions'>,\n  blocks?: $PropertyType<MaskedPattern, 'blocks'>,\n  placeholderChar?: $PropertyType<MaskedPattern, 'placeholderChar'>,\n  lazy?: $PropertyType<MaskedPattern, 'lazy'>,\n};\n\ntype MaskedPatternState = {|\n  ...MaskedState,\n  _blocks: Array<*>,\n|};\n\ntype BlockPosData = {\n  index: number,\n  offset: number,\n};\n\n/**\n  Pattern mask\n  @param {Object} opts\n  @param {Object} opts.blocks\n  @param {Object} opts.definitions\n  @param {string} opts.placeholderChar\n  @param {boolean} opts.lazy\n*/\nexport default\nclass MaskedPattern extends Masked<string> {\n  static DEFAULTS: any;\n  static STOP_CHAR: string;\n  static ESCAPE_CHAR: string;\n  static InputDefinition: Class<PatternInputDefinition>;\n  static FixedDefinition: Class<PatternFixedDefinition>;\n\n  /** */\n  blocks: {[string]: MaskedOptions<any>};\n  /** */\n  definitions: Definitions;\n  /** Single char for empty input */\n  placeholderChar: string;\n  /** Show placeholder only when needed */\n  lazy: boolean;\n  _blocks: Array<PatternBlock>;\n  _maskedBlocks: {[string]: Array<number>};\n  _stops: Array<number>;\n\n  constructor (opts: any={}) {  // TODO type $Shape<MaskedPatternOptions>={} does not work\n    opts.definitions = Object.assign({}, DEFAULT_INPUT_DEFINITIONS, opts.definitions);\n    super({\n      ...MaskedPattern.DEFAULTS,\n      ...opts,\n    });\n  }\n\n  /**\n    @override\n    @param {Object} opts\n  */\n  _update (opts: $Shape<MaskedPatternOptions>={}) {\n    opts.definitions = Object.assign({}, this.definitions, opts.definitions);\n    super._update(opts);\n    this._rebuildMask();\n  }\n\n  /** */\n  _rebuildMask () {\n    const defs = this.definitions;\n    this._blocks = [];\n    this._stops = [];\n    this._maskedBlocks = {};\n\n    let pattern = this.mask;\n    if (!pattern || !defs) return;\n\n    let unmaskingBlock = false;\n    let optionalBlock = false;\n\n    for (let i=0; i<pattern.length; ++i) {\n      if (this.blocks) {\n        const p = pattern.slice(i);\n        const bNames = Object.keys(this.blocks).filter(bName => p.indexOf(bName) === 0);\n        // order by key length\n        bNames.sort((a, b) => b.length - a.length);\n        // use block name with max length\n        const bName = bNames[0];\n        if (bName) {\n          // $FlowFixMe no ideas\n          const maskedBlock = createMask({\n            parent: this,\n            lazy: this.lazy,\n            eager: this.eager,\n            placeholderChar: this.placeholderChar,\n            overwrite: this.overwrite,\n            ...this.blocks[bName],\n          });\n\n          if (maskedBlock) {\n            this._blocks.push(maskedBlock);\n\n            // store block index\n            if (!this._maskedBlocks[bName]) this._maskedBlocks[bName] = [];\n            this._maskedBlocks[bName].push(this._blocks.length - 1);\n          }\n\n          i += bName.length - 1;\n          continue;\n        }\n      }\n\n      let char = pattern[i];\n      let isInput = char in defs;\n\n      if (char === MaskedPattern.STOP_CHAR) {\n        this._stops.push(this._blocks.length);\n        continue;\n      }\n\n      if (char === '{' || char === '}') {\n        unmaskingBlock = !unmaskingBlock;\n        continue;\n      }\n\n      if (char === '[' || char === ']') {\n        optionalBlock = !optionalBlock;\n        continue;\n      }\n\n      if (char === MaskedPattern.ESCAPE_CHAR) {\n        ++i;\n        char = pattern[i];\n        if (!char) break;\n        isInput = false;\n      }\n\n      const def = isInput ?\n        new PatternInputDefinition({\n          parent: this,\n          lazy: this.lazy,\n          eager: this.eager,\n          placeholderChar: this.placeholderChar,\n          mask: defs[char],\n          isOptional: optionalBlock,\n        }) :\n        new PatternFixedDefinition({\n          char,\n          eager: this.eager,\n          isUnmasking: unmaskingBlock,\n        });\n\n      this._blocks.push(def);\n    }\n  }\n\n  /**\n    @override\n  */\n  get state (): MaskedPatternState {\n    return {\n      ...super.state,\n      _blocks: this._blocks.map(b => b.state),\n    };\n  }\n\n  set state (state: MaskedPatternState) {\n    const {_blocks, ...maskedState} = state;\n    this._blocks.forEach((b, bi) => b.state = _blocks[bi]);\n    super.state = maskedState;\n  }\n\n  /**\n    @override\n  */\n  reset () {\n    super.reset();\n    this._blocks.forEach(b => b.reset());\n  }\n\n  /**\n    @override\n  */\n  get isComplete (): boolean {\n    return this._blocks.every(b => b.isComplete);\n  }\n\n  /**\n    @override\n  */\n  get isFilled (): boolean {\n    return this._blocks.every(b => b.isFilled);\n  }\n\n  get isFixed (): boolean {\n    return this._blocks.every(b => b.isFixed);\n  }\n\n  get isOptional (): boolean {\n    return this._blocks.every(b => b.isOptional);\n  }\n\n  /**\n    @override\n  */\n  doCommit () {\n    this._blocks.forEach(b => b.doCommit());\n    super.doCommit();\n  }\n\n  /**\n    @override\n  */\n  get unmaskedValue (): string {\n    return this._blocks.reduce((str, b) => str += b.unmaskedValue, '');\n  }\n\n  set unmaskedValue (unmaskedValue: string) {\n    super.unmaskedValue = unmaskedValue;\n  }\n\n  /**\n    @override\n  */\n  get value (): string {\n    // TODO return _value when not in change?\n    return this._blocks.reduce((str, b) => str += b.value, '');\n  }\n\n  set value (value: string) {\n    super.value = value;\n  }\n\n  /**\n    @override\n  */\n  appendTail (tail: string | String | TailDetails): ChangeDetails {\n    return super.appendTail(tail).aggregate(this._appendPlaceholder());\n  }\n\n  /**\n    @override\n  */\n  _appendEager (): ChangeDetails {\n    const details = new ChangeDetails();\n\n    let startBlockIndex = this._mapPosToBlock(this.value.length)?.index;\n    if (startBlockIndex == null) return details;\n\n    // TODO test if it works for nested pattern masks\n    if (this._blocks[startBlockIndex].isFilled) ++startBlockIndex;\n\n    for (let bi=startBlockIndex; bi<this._blocks.length; ++bi) {\n      const d = this._blocks[bi]._appendEager();\n      if (!d.inserted) break;\n\n      details.aggregate(d);\n    }\n\n    return details;\n  }\n\n  /**\n    @override\n  */\n  _appendCharRaw (ch: string, flags: AppendFlags={}): ChangeDetails {\n    const blockIter = this._mapPosToBlock(this.value.length);\n    const details = new ChangeDetails();\n    if (!blockIter) return details;\n\n    for (let bi=blockIter.index; ; ++bi) {\n      const block = this._blocks[bi];\n      if (!block) break;\n\n      const blockDetails = block._appendChar(ch, { ...flags, _beforeTailState: flags._beforeTailState?._blocks?.[bi] });\n\n      const skip = blockDetails.skip;\n      details.aggregate(blockDetails);\n\n      if (skip || blockDetails.rawInserted) break; // go next char\n    }\n\n    return details;\n  }\n\n  /**\n    @override\n  */\n  extractTail (fromPos?: number=0, toPos?: number=this.value.length): ChunksTailDetails {\n    const chunkTail = new ChunksTailDetails();\n    if (fromPos === toPos) return chunkTail;\n\n    this._forEachBlocksInRange(fromPos, toPos, (b, bi, bFromPos, bToPos) => {\n      const blockChunk = b.extractTail(bFromPos, bToPos);\n      blockChunk.stop = this._findStopBefore(bi);\n      blockChunk.from = this._blockStartPos(bi);\n      if (blockChunk instanceof ChunksTailDetails) blockChunk.blockIndex = bi;\n\n      chunkTail.extend(blockChunk);\n    });\n\n    return chunkTail;\n  }\n\n  /**\n    @override\n  */\n  extractInput (fromPos?: number=0, toPos?: number=this.value.length, flags: ExtractFlags={}): string {\n    if (fromPos === toPos) return '';\n\n    let input = '';\n\n    this._forEachBlocksInRange(fromPos, toPos, (b, _, fromPos, toPos) => {\n      input += b.extractInput(fromPos, toPos, flags);\n    });\n\n    return input;\n  }\n\n  _findStopBefore (blockIndex: number): ?number {\n    let stopBefore;\n    for (let si=0; si<this._stops.length; ++si) {\n      const stop = this._stops[si];\n      if (stop <= blockIndex) stopBefore = stop;\n      else break;\n    }\n    return stopBefore;\n  }\n\n  /** Appends placeholder depending on laziness */\n  _appendPlaceholder (toBlockIndex: ?number): ChangeDetails {\n    const details = new ChangeDetails();\n    if (this.lazy && toBlockIndex == null) return details;\n\n    const startBlockIter = this._mapPosToBlock(this.value.length);\n    if (!startBlockIter) return details;\n\n    const startBlockIndex = startBlockIter.index;\n    const endBlockIndex = toBlockIndex != null ? toBlockIndex : this._blocks.length;\n\n    this._blocks.slice(startBlockIndex, endBlockIndex)\n      .forEach(b => {\n        if (!b.lazy || toBlockIndex != null) {\n          // $FlowFixMe `_blocks` may not be present\n          const args = b._blocks != null ? [b._blocks.length] : [];\n          const bDetails = b._appendPlaceholder(...args);\n          this._value += bDetails.inserted;\n          details.aggregate(bDetails);\n        }\n      });\n\n    return details;\n  }\n\n  /** Finds block in pos */\n  _mapPosToBlock (pos: number): ?BlockPosData {\n    let accVal = '';\n    for (let bi=0; bi<this._blocks.length; ++bi) {\n      const block = this._blocks[bi];\n      const blockStartPos = accVal.length;\n\n      accVal += block.value;\n\n      if (pos <= accVal.length) {\n        return {\n          index: bi,\n          offset: pos - blockStartPos,\n        };\n      }\n    }\n  }\n\n  /** */\n  _blockStartPos (blockIndex: number): number {\n    return this._blocks\n      .slice(0, blockIndex)\n      .reduce((pos, b) => pos += b.value.length, 0);\n  }\n\n  /** */\n  _forEachBlocksInRange (fromPos: number, toPos: number=this.value.length, fn: (block: PatternBlock, blockIndex: number, fromPos: number, toPos: number) => void) {\n    const fromBlockIter = this._mapPosToBlock(fromPos);\n\n    if (fromBlockIter) {\n      const toBlockIter = this._mapPosToBlock(toPos);\n      // process first block\n      const isSameBlock = toBlockIter && fromBlockIter.index === toBlockIter.index;\n      const fromBlockStartPos = fromBlockIter.offset;\n      const fromBlockEndPos = toBlockIter && isSameBlock ?\n        toBlockIter.offset :\n        this._blocks[fromBlockIter.index].value.length;\n      fn(this._blocks[fromBlockIter.index], fromBlockIter.index, fromBlockStartPos, fromBlockEndPos);\n\n      if (toBlockIter && !isSameBlock) {\n        // process intermediate blocks\n        for (let bi=fromBlockIter.index+1; bi<toBlockIter.index; ++bi) {\n          fn(this._blocks[bi], bi, 0, this._blocks[bi].value.length);\n        }\n\n        // process last block\n        fn(this._blocks[toBlockIter.index], toBlockIter.index, 0, toBlockIter.offset);\n      }\n    }\n  }\n\n  /**\n    @override\n  */\n  remove (fromPos: number=0, toPos: number=this.value.length): ChangeDetails {\n    const removeDetails = super.remove(fromPos, toPos);\n    this._forEachBlocksInRange(fromPos, toPos, (b, _, bFromPos, bToPos) => {\n      removeDetails.aggregate(b.remove(bFromPos, bToPos));\n    });\n    return removeDetails;\n  }\n\n  /**\n    @override\n  */\n  nearestInputPos (cursorPos: number, direction: Direction=DIRECTION.NONE): number {\n    if (!this._blocks.length) return 0;\n    const cursor = new PatternCursor(this, cursorPos);\n\n    if (direction === DIRECTION.NONE) {\n      // -------------------------------------------------\n      // NONE should only go out from fixed to the right!\n      // -------------------------------------------------\n      if (cursor.pushRightBeforeInput()) return cursor.pos;\n      cursor.popState();\n      if (cursor.pushLeftBeforeInput()) return cursor.pos;\n      return this.value.length;\n    }\n\n    // FORCE is only about a|* otherwise is 0\n    if (direction === DIRECTION.LEFT || direction === DIRECTION.FORCE_LEFT) {\n      // try to break fast when *|a\n      if (direction === DIRECTION.LEFT) {\n        cursor.pushRightBeforeFilled();\n        if (cursor.ok && cursor.pos === cursorPos) return cursorPos;\n        cursor.popState();\n      }\n\n      // forward flow\n      cursor.pushLeftBeforeInput();\n      cursor.pushLeftBeforeRequired();\n      cursor.pushLeftBeforeFilled();\n\n      // backward flow\n      if (direction === DIRECTION.LEFT) {\n        cursor.pushRightBeforeInput();\n        cursor.pushRightBeforeRequired();\n        if (cursor.ok && cursor.pos <= cursorPos) return cursor.pos;\n        cursor.popState();\n        if (cursor.ok && cursor.pos <= cursorPos) return cursor.pos;\n        cursor.popState();\n      }\n      if (cursor.ok) return cursor.pos;\n      if (direction === DIRECTION.FORCE_LEFT) return 0;\n\n      cursor.popState();\n      if (cursor.ok) return cursor.pos;\n\n      cursor.popState();\n      if (cursor.ok) return cursor.pos;\n\n      // cursor.popState();\n      // if (\n      //   cursor.pushRightBeforeInput() &&\n      //   // TODO HACK for lazy if has aligned left inside fixed and has came to the start - use start position\n      //   (!this.lazy || this.extractInput())\n      // ) return cursor.pos;\n\n      return 0;\n    }\n\n    if (direction === DIRECTION.RIGHT || direction === DIRECTION.FORCE_RIGHT) {\n      // forward flow\n      cursor.pushRightBeforeInput();\n      cursor.pushRightBeforeRequired();\n\n      if (cursor.pushRightBeforeFilled()) return cursor.pos;\n      if (direction === DIRECTION.FORCE_RIGHT) return this.value.length;\n\n      // backward flow\n      cursor.popState();\n      if (cursor.ok) return cursor.pos;\n\n      cursor.popState();\n      if (cursor.ok) return cursor.pos;\n\n      return this.nearestInputPos(cursorPos, DIRECTION.LEFT);\n    }\n\n    return cursorPos;\n  }\n\n  /** Get block by name */\n  maskedBlock (name: string): ?PatternBlock {\n    return this.maskedBlocks(name)[0];\n  }\n\n  /** Get all blocks by name */\n  maskedBlocks (name: string): Array<PatternBlock> {\n    const indices = this._maskedBlocks[name];\n    if (!indices) return [];\n    return indices.map(gi => this._blocks[gi]);\n  }\n}\nMaskedPattern.DEFAULTS = {\n  lazy: true,\n  placeholderChar: '_'\n};\nMaskedPattern.STOP_CHAR = '`';\nMaskedPattern.ESCAPE_CHAR = '\\\\';\nMaskedPattern.InputDefinition = PatternInputDefinition;\nMaskedPattern.FixedDefinition = PatternFixedDefinition;\n\n\nIMask.MaskedPattern = MaskedPattern;\n","// @flow\nimport MaskedPattern from './pattern.js';\nimport ChangeDetails from '../core/change-details.js';\nimport { normalizePrepare } from '../core/utils.js';\nimport { type AppendFlags } from './base.js';\nimport IMask from '../core/holder.js';\n\n\n/** Pattern which accepts ranges */\nexport default\nclass MaskedRange extends MaskedPattern {\n  /**\n    Optionally sets max length of pattern.\n    Used when pattern length is longer then `to` param length. Pads zeros at start in this case.\n  */\n  maxLength: number;\n  /** Min bound */\n  from: number;\n  /** Max bound */\n  to: number;\n  /** */\n  autofix: boolean | 'pad';\n\n  get _matchFrom (): number {\n    return this.maxLength - String(this.from).length;\n  }\n\n  /**\n    @override\n  */\n  _update (opts: any) {  // TODO type\n    opts = {\n      to: this.to || 0,\n      from: this.from || 0,\n      maxLength: this.maxLength || 0,\n      ...opts,\n    };\n\n    let maxLength = String(opts.to).length;\n    if (opts.maxLength != null) maxLength = Math.max(maxLength, opts.maxLength);\n    opts.maxLength = maxLength;\n\n    const fromStr = String(opts.from).padStart(maxLength, '0');\n    const toStr = String(opts.to).padStart(maxLength, '0');\n    let sameCharsCount = 0;\n    while (sameCharsCount < toStr.length && toStr[sameCharsCount] === fromStr[sameCharsCount]) ++sameCharsCount;\n    opts.mask = toStr.slice(0, sameCharsCount).replace(/0/g, '\\\\0') + '0'.repeat(maxLength - sameCharsCount);\n\n    super._update(opts);\n  }\n\n  /**\n    @override\n  */\n  get isComplete (): boolean {\n    return super.isComplete && Boolean(this.value);\n  }\n\n  boundaries (str: string): [string, string] {\n    let minstr = '';\n    let maxstr = '';\n\n    const [, placeholder, num] = str.match(/^(\\D*)(\\d*)(\\D*)/) || [];\n    if (num) {\n      minstr = '0'.repeat(placeholder.length) + num;\n      maxstr = '9'.repeat(placeholder.length) + num;\n    }\n    minstr = minstr.padEnd(this.maxLength, '0');\n    maxstr = maxstr.padEnd(this.maxLength, '9');\n\n    return [minstr, maxstr];\n  }\n\n  // TODO str is a single char everytime\n  /**\n    @override\n  */ \n  doPrepare (ch: string, flags: AppendFlags={}): string | [string, ChangeDetails] {\n    let details: ChangeDetails;\n    [ch, details] = normalizePrepare(super.doPrepare(ch.replace(/\\D/g, ''), flags));\n\n    if (!this.autofix || !ch) return ch;\n\n    const fromStr = String(this.from).padStart(this.maxLength, '0');\n    const toStr = String(this.to).padStart(this.maxLength, '0');\n\n    let nextVal = this.value + ch;\n    if (nextVal.length > this.maxLength) return '';\n\n    const [minstr, maxstr] = this.boundaries(nextVal);\n\n    if (Number(maxstr) < this.from) return fromStr[nextVal.length - 1];\n\n    if (Number(minstr) > this.to) {\n      if (this.autofix === 'pad' && nextVal.length < this.maxLength) {\n        return ['', details.aggregate(this.append(fromStr[nextVal.length - 1]+ch, flags))];\n      }\n      return toStr[nextVal.length - 1];\n    }\n\n    return ch;\n  }\n\n  /**\n    @override\n  */\n  doValidate (...args: *): boolean {\n    const str = this.value;\n\n    const firstNonZero = str.search(/[^0]/);\n    if (firstNonZero === -1 && str.length <= this._matchFrom) return true;\n\n    const [minstr, maxstr] = this.boundaries(str);\n\n    return this.from <= Number(maxstr) && Number(minstr) <= this.to &&\n      super.doValidate(...args);\n  }\n}\n\n\nIMask.MaskedRange = MaskedRange;\n","// @flow\nimport MaskedPattern from './pattern.js';\nimport MaskedRange from './range.js';\nimport IMask from '../core/holder.js';\n\n\n/** Date mask */\nexport default\nclass MaskedDate extends MaskedPattern {\n  static GET_DEFAULT_BLOCKS: () => {[string]: any};\n  static DEFAULTS: any;\n\n  /** Pattern mask for date according to {@link MaskedDate#format} */\n  pattern: string;\n  /** Start date */\n  min: ?Date;\n  /** End date */\n  max: ?Date;\n  /** */\n  autofix: boolean | 'pad';\n\n  /**\n    @param {Object} opts\n  */\n  constructor (opts: any) {\n    super({\n      ...MaskedDate.DEFAULTS,\n      ...opts\n    });\n  }\n\n  /**\n    @override\n  */\n  _update (opts: any) {\n    if (opts.mask === Date) delete opts.mask;\n    if (opts.pattern) opts.mask = opts.pattern;\n\n    const blocks = opts.blocks;\n    opts.blocks = Object.assign({}, MaskedDate.GET_DEFAULT_BLOCKS());\n    // adjust year block\n    if (opts.min) opts.blocks.Y.from = opts.min.getFullYear();\n    if (opts.max) opts.blocks.Y.to = opts.max.getFullYear();\n    if (opts.min && opts.max && opts.blocks.Y.from === opts.blocks.Y.to\n    ) {\n      opts.blocks.m.from = opts.min.getMonth() + 1;\n      opts.blocks.m.to = opts.max.getMonth() + 1;\n\n      if (opts.blocks.m.from === opts.blocks.m.to) {\n        opts.blocks.d.from = opts.min.getDate();\n        opts.blocks.d.to = opts.max.getDate();\n      }\n    }\n    Object.assign(opts.blocks, this.blocks, blocks);\n\n    // add autofix\n    Object.keys(opts.blocks).forEach(bk => {\n      const b = opts.blocks[bk];\n      if (!('autofix' in b) && 'autofix' in opts) b.autofix = opts.autofix;\n    });\n\n    super._update(opts);\n  }\n\n  /**\n    @override\n  */\n  doValidate (...args: *): boolean {\n    const date = this.date;\n\n    return super.doValidate(...args) &&\n      (!this.isComplete ||\n        this.isDateExist(this.value) && date != null &&\n        (this.min == null || this.min <= date) &&\n        (this.max == null || date <= this.max));\n  }\n\n  /** Checks if date is exists */\n  isDateExist (str: string): boolean {\n    return this.format(this.parse(str, this), this).indexOf(str) >= 0;\n  }\n\n  /** Parsed Date */\n  get date (): ?Date {\n    return this.typedValue;\n  }\n  set date (date: Date) {\n    this.typedValue = date;\n  }\n\n  /**\n    @override\n  */\n  get typedValue (): ?Date {\n    return this.isComplete ? super.typedValue : null;\n  }\n  set typedValue (value: Date) {\n    super.typedValue = value;\n  }\n\n  /**\n    @override\n  */\n  maskEquals (mask: any): boolean {\n    return mask === Date || super.maskEquals(mask);\n  }\n}\nMaskedDate.DEFAULTS = {\n  pattern: 'd{.}`m{.}`Y',\n  format: date => {\n    if (!date) return '';\n\n    const day = String(date.getDate()).padStart(2, '0');\n    const month = String(date.getMonth() + 1).padStart(2, '0');\n    const year = date.getFullYear();\n\n    return [day, month, year].join('.');\n  },\n  parse: str => {\n    const [day, month, year] = str.split('.');\n    return new Date(year, month - 1, day);\n  },\n};\nMaskedDate.GET_DEFAULT_BLOCKS = () => ({\n  d: {\n    mask: MaskedRange,\n    from: 1,\n    to: 31,\n    maxLength: 2,\n  },\n  m: {\n    mask: MaskedRange,\n    from: 1,\n    to: 12,\n    maxLength: 2,\n  },\n  Y: {\n    mask: MaskedRange,\n    from: 1900,\n    to: 9999,\n  }\n});\n\n\nIMask.MaskedDate = MaskedDate;\n","// @flow\nimport IMask from '../core/holder.js';\n\n\nexport\ntype ElementEvent =\n  'selectionChange' |\n  'input' |\n  'drop' |\n  'click' |\n  'focus' |\n  'commit';\n\n/**\n  Generic element API to use with mask\n  @interface\n*/\nexport default\nclass MaskElement {\n  /** */\n  +_unsafeSelectionStart: number;\n  /** */\n  +_unsafeSelectionEnd: number;\n  /** */\n  value: string;\n\n  /** Safely returns selection start */\n  get selectionStart (): number {\n    let start;\n    try {\n      start = this._unsafeSelectionStart;\n    } catch (e) {}\n\n    return start != null ?\n      start :\n      this.value.length;\n  }\n\n  /** Safely returns selection end */\n  get selectionEnd (): number {\n    let end;\n    try {\n      end = this._unsafeSelectionEnd;\n    } catch (e) {}\n\n    return end != null ?\n      end :\n      this.value.length;\n  }\n\n  /** Safely sets element selection */\n  select (start: number, end: number) {\n    if (start == null || end == null ||\n      start === this.selectionStart && end === this.selectionEnd) return;\n\n    try {\n      this._unsafeSelect(start, end);\n    } catch (e) {}\n  }\n\n  /** Should be overriden in subclasses */\n  _unsafeSelect (start: number, end: number): void {}\n  /** Should be overriden in subclasses */\n  get isActive (): boolean { return false; }\n  /** Should be overriden in subclasses */\n  bindEvents (handlers: {[ElementEvent]: Function}) {}\n  /** Should be overriden in subclasses */\n  unbindEvents (): void {}\n}\n\n\nIMask.MaskElement = MaskElement;\n","// @flow\nimport MaskElement, {type ElementEvent} from './mask-element.js';\nimport IMask from '../core/holder.js';\n\n\n/** Bridge between HTMLElement and {@link Masked} */\nexport default\nclass HTMLMaskElement extends MaskElement {\n  /** Mapping between HTMLElement events and mask internal events */\n  static EVENTS_MAP: {[ElementEvent]: string};\n  /** HTMLElement to use mask on */\n  input: HTMLTextAreaElement | HTMLInputElement;\n  _handlers: {[string]: Function};\n\n  /**\n    @param {HTMLInputElement|HTMLTextAreaElement} input\n  */\n  constructor (input: HTMLTextAreaElement | HTMLInputElement) {\n    super();\n    this.input = input;\n    this._handlers = {};\n  }\n\n  /** */\n  // $FlowFixMe https://github.com/facebook/flow/issues/2839\n  get rootElement (): HTMLDocument {\n    return this.input.getRootNode?.() ?? document;\n  }\n\n  /**\n    Is element in focus\n    @readonly\n  */\n  get isActive (): boolean {\n    //$FlowFixMe\n    return this.input === this.rootElement.activeElement;\n  }\n\n  /**\n    Returns HTMLElement selection start\n    @override\n  */\n  get _unsafeSelectionStart (): number {\n    return this.input.selectionStart;\n  }\n\n  /**\n    Returns HTMLElement selection end\n    @override\n  */\n  get _unsafeSelectionEnd (): number {\n    return this.input.selectionEnd;\n  }\n\n  /**\n    Sets HTMLElement selection\n    @override\n  */\n  _unsafeSelect (start: number, end: number) {\n    this.input.setSelectionRange(start, end);\n  }\n\n  /**\n    HTMLElement value\n    @override\n  */\n  get value (): string {\n    return this.input.value;\n  }\n  set value (value: string) {\n    this.input.value = value;\n  }\n\n  /**\n    Binds HTMLElement events to mask internal events\n    @override\n  */\n  bindEvents (handlers: {[ElementEvent]: Function}) {\n    Object.keys(handlers)\n      .forEach(event => this._toggleEventHandler(HTMLMaskElement.EVENTS_MAP[event], handlers[event]));\n  }\n\n  /**\n    Unbinds HTMLElement events to mask internal events\n    @override\n  */\n  unbindEvents () {\n    Object.keys(this._handlers)\n      .forEach(event => this._toggleEventHandler(event));\n  }\n\n  /** */\n  _toggleEventHandler (event: string, handler?: Function): void {\n    if (this._handlers[event]) {\n      this.input.removeEventListener(event, this._handlers[event]);\n      delete this._handlers[event];\n    }\n\n    if (handler) {\n      this.input.addEventListener(event, handler);\n      this._handlers[event] = handler;\n    }\n  }\n}\nHTMLMaskElement.EVENTS_MAP = {\n  selectionChange: 'keydown',\n  input: 'input',\n  drop: 'drop',\n  click: 'click',\n  focus: 'focus',\n  commit: 'blur',\n};\n\n\nIMask.HTMLMaskElement = HTMLMaskElement;\n","// @flow\nimport HTMLMaskElement from './html-mask-element.js';\nimport IMask from '../core/holder.js';\n\n\nexport default\nclass HTMLContenteditableMaskElement extends HTMLMaskElement {\n  /**\n    Returns HTMLElement selection start\n    @override\n  */\n  get _unsafeSelectionStart (): number {\n    const root = this.rootElement;\n    const selection = root.getSelection && root.getSelection();\n    const anchorOffset = selection && selection.anchorOffset;\n    const focusOffset = selection && selection.focusOffset;\n    if (focusOffset == null || anchorOffset == null || anchorOffset < focusOffset) {\n      return anchorOffset;\n    }\n    return focusOffset;\n  }\n\n  /**\n    Returns HTMLElement selection end\n    @override\n  */\n  get _unsafeSelectionEnd (): number {\n    const root = this.rootElement;\n    const selection = root.getSelection && root.getSelection();\n    const anchorOffset = selection && selection.anchorOffset;\n    const focusOffset = selection && selection.focusOffset;\n    if (focusOffset == null || anchorOffset == null || anchorOffset > focusOffset) {\n      return anchorOffset;\n    }\n    return focusOffset;\n  }\n\n  /**\n    Sets HTMLElement selection\n    @override\n  */\n  _unsafeSelect (start: number, end: number) {\n    if (!this.rootElement.createRange) return;\n\n    const range = this.rootElement.createRange();\n    range.setStart(this.input.firstChild || this.input, start);\n    range.setEnd(this.input.lastChild || this.input, end);\n    const root = this.rootElement;\n    const selection = root.getSelection && root.getSelection();\n    if (selection) {\n      selection.removeAllRanges();\n      selection.addRange(range);\n    }\n  }\n\n  /**\n    HTMLElement value\n    @override\n  */\n  get value (): string {\n    // $FlowFixMe\n    return this.input.textContent;\n  }\n  set value (value: string) {\n    this.input.textContent = value;\n  }\n}\n\n\nIMask.HTMLContenteditableMaskElement = HTMLContenteditableMaskElement;\n","// @flow\nimport {objectIncludes, DIRECTION, type Selection} from '../core/utils.js';\nimport ActionDetails from '../core/action-details.js';\nimport MaskedDate from '../masked/date.js';\nimport createMask, {maskedClass} from '../masked/factory.js';\nimport type Masked from '../masked/base.js';\nimport {type Mask} from '../masked/base.js';\nimport MaskElement from './mask-element.js';\nimport HTMLMaskElement from './html-mask-element.js';\nimport HTMLContenteditableMaskElement from './html-contenteditable-mask-element.js';\nimport IMask from '../core/holder.js';\n\n\n/** Listens to element events and controls changes between element and {@link Masked} */\nexport default\nclass InputMask {\n  /**\n    View element\n    @readonly\n  */\n  el: MaskElement;\n\n  /**\n    Internal {@link Masked} model\n    @readonly\n  */\n  masked: Masked<*>;\n  alignCursor: () => void;\n  alignCursorFriendly: () => void;\n\n  _listeners: {[string]: Array<Function>};\n  _value: string;\n  _changingCursorPos: number;\n  _unmaskedValue: string;\n  _saveSelection: (?Event) => void;\n  _selection: Selection;\n  _onInput: () => void;\n  _onChange: () => void;\n  _onDrop: (Event) => void;\n  _onFocus: (Event) => void;\n  _onClick: (Event) => void;\n  _cursorChanging: ?TimeoutID;\n  _inputEvent: ?InputEvent;\n\n  /**\n    @param {MaskElement|HTMLInputElement|HTMLTextAreaElement} el\n    @param {Object} opts\n  */\n  constructor (el: MaskElement | HTMLTextAreaElement | HTMLInputElement, opts: {[string]: any} | Masked<*>) {\n    this.el =\n      (el instanceof MaskElement) ? el :\n      (el.isContentEditable && el.tagName !== 'INPUT' && el.tagName !== 'TEXTAREA') ? new HTMLContenteditableMaskElement(el) :\n      new HTMLMaskElement(el);\n    this.masked = createMask(opts);\n\n    this._listeners = {};\n    this._value = '';\n    this._unmaskedValue = '';\n\n    this._saveSelection = this._saveSelection.bind(this);\n    this._onInput = this._onInput.bind(this);\n    this._onChange = this._onChange.bind(this);\n    this._onDrop = this._onDrop.bind(this);\n    this._onFocus = this._onFocus.bind(this);\n    this._onClick = this._onClick.bind(this);\n    this.alignCursor = this.alignCursor.bind(this);\n    this.alignCursorFriendly = this.alignCursorFriendly.bind(this);\n\n    this._bindEvents();\n\n    // refresh\n    this.updateValue();\n    this._onChange();\n  }\n\n  /** Read or update mask */\n  get mask (): Mask {\n    return this.masked.mask;\n  }\n\n  maskEquals (mask: Mask): boolean {\n    return mask == null || this.masked?.maskEquals(mask);\n  }\n\n  set mask (mask: Mask) {\n    if (this.maskEquals(mask)) return;\n\n    // $FlowFixMe No ideas ... after update\n    if (!(mask instanceof IMask.Masked) && this.masked.constructor === maskedClass(mask)) {\n      this.masked.updateOptions({mask});\n      return;\n    }\n\n    const masked = createMask({mask});\n    masked.unmaskedValue = this.masked.unmaskedValue;\n    this.masked = masked;\n  }\n\n  /** Raw value */\n  get value (): string {\n    return this._value;\n  }\n\n  set value (str: string) {\n    if (this.value === str) return;\n\n    this.masked.value = str;\n    this.updateControl();\n    this.alignCursor();\n  }\n\n  /** Unmasked value */\n  get unmaskedValue (): string {\n    return this._unmaskedValue;\n  }\n\n  set unmaskedValue (str: string) {\n    if (this.unmaskedValue === str) return;\n\n    this.masked.unmaskedValue = str;\n    this.updateControl();\n    this.alignCursor();\n  }\n\n  /** Typed unmasked value */\n  get typedValue (): any {\n    return this.masked.typedValue;\n  }\n\n  set typedValue (val: any) {\n    if (this.masked.typedValueEquals(val)) return;\n\n    this.masked.typedValue = val;\n    this.updateControl();\n    this.alignCursor();\n  }\n\n  /**\n    Starts listening to element events\n    @protected\n  */\n  _bindEvents () {\n    this.el.bindEvents({\n      selectionChange: this._saveSelection,\n      input: this._onInput,\n      drop: this._onDrop,\n      click: this._onClick,\n      focus: this._onFocus,\n      commit: this._onChange,\n    });\n  }\n\n  /**\n    Stops listening to element events\n    @protected\n   */\n  _unbindEvents () {\n    if (this.el) this.el.unbindEvents();\n  }\n\n  /**\n    Fires custom event\n    @protected\n   */\n  _fireEvent (ev: string, ...args: *) {\n    const listeners = this._listeners[ev];\n    if (!listeners) return;\n\n    listeners.forEach(l => l(...args));\n  }\n\n  /**\n    Current selection start\n    @readonly\n  */\n  get selectionStart (): number {\n    return this._cursorChanging ?\n      this._changingCursorPos :\n\n      this.el.selectionStart;\n  }\n\n  /** Current cursor position */\n  get cursorPos (): number {\n    return this._cursorChanging ?\n      this._changingCursorPos :\n\n      this.el.selectionEnd;\n  }\n  set cursorPos (pos: number) {\n    if (!this.el || !this.el.isActive) return;\n\n    this.el.select(pos, pos);\n    this._saveSelection();\n  }\n\n  /**\n    Stores current selection\n    @protected\n  */\n  _saveSelection (/* ev */) {\n    if (this.value !== this.el.value) {\n      console.warn('Element value was changed outside of mask. Syncronize mask using `mask.updateValue()` to work properly.'); // eslint-disable-line no-console\n    }\n    this._selection = {\n      start: this.selectionStart,\n      end: this.cursorPos\n    };\n  }\n\n  /** Syncronizes model value from view */\n  updateValue () {\n    this.masked.value = this.el.value;\n    this._value = this.masked.value;\n  }\n\n  /** Syncronizes view from model value, fires change events */\n  updateControl () {\n    const newUnmaskedValue = this.masked.unmaskedValue;\n    const newValue = this.masked.value;\n    const isChanged = (this.unmaskedValue !== newUnmaskedValue ||\n      this.value !== newValue);\n\n    this._unmaskedValue = newUnmaskedValue;\n    this._value = newValue;\n\n    if (this.el.value !== newValue) this.el.value = newValue;\n    if (isChanged) this._fireChangeEvents();\n  }\n\n  /** Updates options with deep equal check, recreates @{link Masked} model if mask type changes */\n  updateOptions (opts: {[string]: any}) {\n    const { mask, ...restOpts } = opts;\n\n    const updateMask = !this.maskEquals(mask);\n    const updateOpts = !objectIncludes(this.masked, restOpts);\n\n    if (updateMask) this.mask = mask;\n    if (updateOpts) this.masked.updateOptions(restOpts);\n\n    if (updateMask || updateOpts) this.updateControl();\n  }\n\n  /** Updates cursor */\n  updateCursor (cursorPos: number) {\n    if (cursorPos == null) return;\n    this.cursorPos = cursorPos;\n\n    // also queue change cursor for mobile browsers\n    this._delayUpdateCursor(cursorPos);\n  }\n\n  /**\n    Delays cursor update to support mobile browsers\n    @private\n  */\n  _delayUpdateCursor (cursorPos: number) {\n    this._abortUpdateCursor();\n    this._changingCursorPos = cursorPos;\n    this._cursorChanging = setTimeout(() => {\n      if (!this.el) return; // if was destroyed\n      this.cursorPos = this._changingCursorPos;\n      this._abortUpdateCursor();\n    }, 10);\n  }\n\n  /**\n    Fires custom events\n    @protected\n  */\n  _fireChangeEvents () {\n    this._fireEvent('accept', this._inputEvent);\n    if (this.masked.isComplete) this._fireEvent('complete', this._inputEvent);\n  }\n\n  /**\n    Aborts delayed cursor update\n    @private\n  */\n  _abortUpdateCursor () {\n    if (this._cursorChanging) {\n      clearTimeout(this._cursorChanging);\n      delete this._cursorChanging;\n    }\n  }\n\n  /** Aligns cursor to nearest available position */\n  alignCursor () {\n    this.cursorPos = this.masked.nearestInputPos(this.masked.nearestInputPos(this.cursorPos, DIRECTION.LEFT));\n  }\n\n  /** Aligns cursor only if selection is empty */\n  alignCursorFriendly () {\n    if (this.selectionStart !== this.cursorPos) return;  // skip if range is selected\n    this.alignCursor();\n  }\n\n  /** Adds listener on custom event */\n  on (ev: string, handler: Function): this {\n    if (!this._listeners[ev]) this._listeners[ev] = [];\n    this._listeners[ev].push(handler);\n    return this;\n  }\n\n  /** Removes custom event listener */\n  off (ev: string, handler: Function): this {\n    if (!this._listeners[ev]) return this;\n    if (!handler) {\n      delete this._listeners[ev];\n      return this;\n    }\n    const hIndex = this._listeners[ev].indexOf(handler);\n    if (hIndex >= 0) this._listeners[ev].splice(hIndex, 1);\n    return this;\n  }\n\n  /** Handles view input event */\n  _onInput (e: InputEvent): void {\n    this._inputEvent = e;\n    this._abortUpdateCursor();\n\n    // fix strange IE behavior\n    if (!this._selection) return this.updateValue();\n\n    const details = new ActionDetails(\n      // new state\n      this.el.value, this.cursorPos,\n      // old state\n      this.value, this._selection,\n    );\n\n    const oldRawValue = this.masked.rawInputValue;\n\n    const offset = this.masked.splice(\n      details.startChangePos,\n      details.removed.length,\n      details.inserted,\n      details.removeDirection,\n      { input: true, raw: true },\n    ).offset;\n\n    // force align in remove direction only if no input chars were removed\n    // otherwise we still need to align with NONE (to get out from fixed symbols for instance)\n    const removeDirection = oldRawValue === this.masked.rawInputValue ?\n      details.removeDirection :\n      DIRECTION.NONE;\n\n    let cursorPos = this.masked.nearestInputPos(\n      details.startChangePos + offset,\n      removeDirection,\n    );\n    if (removeDirection !== DIRECTION.NONE) cursorPos = this.masked.nearestInputPos(cursorPos, DIRECTION.NONE);\n\n    this.updateControl();\n    this.updateCursor(cursorPos);\n    delete this._inputEvent;\n  }\n\n  /** Handles view change event and commits model value */\n  _onChange () {\n    if (this.value !== this.el.value) {\n      this.updateValue();\n    }\n    this.masked.doCommit();\n    this.updateControl();\n    this._saveSelection();\n  }\n\n  /** Handles view drop event, prevents by default */\n  _onDrop (ev: Event) {\n    ev.preventDefault();\n    ev.stopPropagation();\n  }\n\n  /** Restore last selection on focus */\n  _onFocus (ev: Event) {\n    this.alignCursorFriendly();\n  }\n\n  /** Restore last selection on focus */\n  _onClick (ev: Event) {\n    this.alignCursorFriendly();\n  }\n\n  /** Unbind view events and removes element reference */\n  destroy () {\n    this._unbindEvents();\n    // $FlowFixMe why not do so?\n    this._listeners.length = 0;\n    // $FlowFixMe\n    delete this.el;\n  }\n}\n\n\nIMask.InputMask = InputMask;\n","// @flow\nimport MaskedPattern from './pattern.js';\nimport IMask from '../core/holder.js';\n\n\n/** Pattern which validates enum values */\nexport default\nclass MaskedEnum extends MaskedPattern {\n  enum: Array<string>;\n\n  /**\n    @override\n    @param {Object} opts\n  */\n  _update (opts: any) {  // TODO type\n    if (opts.enum) opts.mask = '*'.repeat(opts.enum[0].length);\n\n    super._update(opts);\n  }\n\n  /**\n    @override\n  */\n  doValidate (...args: *): boolean {\n    return this.enum.some(e => e.indexOf(this.unmaskedValue) >= 0) &&\n      super.doValidate(...args);\n  }\n}\n\n\nIMask.MaskedEnum = MaskedEnum;\n","// @flow\nimport { escapeRegExp, indexInDirection, posInDirection, type Direction, DIRECTION, normalizePrepare } from '../core/utils.js';\nimport ChangeDetails from '../core/change-details.js';\nimport { type TailDetails } from '../core/tail-details.js';\n\nimport Masked, { type MaskedOptions, type ExtractFlags, type AppendFlags } from './base.js';\nimport IMask from '../core/holder.js';\n\n\ntype MaskedNumberOptions = {\n  ...MaskedOptions<Class<Number>>,\n  radix: $PropertyType<MaskedNumber, 'radix'>,\n  thousandsSeparator: $PropertyType<MaskedNumber, 'thousandsSeparator'>,\n  mapToRadix: $PropertyType<MaskedNumber, 'mapToRadix'>,\n  scale: $PropertyType<MaskedNumber, 'scale'>,\n  signed: $PropertyType<MaskedNumber, 'signed'>,\n  normalizeZeros: $PropertyType<MaskedNumber, 'normalizeZeros'>,\n  padFractionalZeros: $PropertyType<MaskedNumber, 'padFractionalZeros'>,\n};\n\n/**\n  Number mask\n  @param {Object} opts\n  @param {string} opts.radix - Single char\n  @param {string} opts.thousandsSeparator - Single char\n  @param {Array<string>} opts.mapToRadix - Array of single chars\n  @param {number} opts.min\n  @param {number} opts.max\n  @param {number} opts.scale - Digits after point\n  @param {boolean} opts.signed - Allow negative\n  @param {boolean} opts.normalizeZeros - Flag to remove leading and trailing zeros in the end of editing\n  @param {boolean} opts.padFractionalZeros - Flag to pad trailing zeros after point in the end of editing\n*/\nexport default\nclass MaskedNumber extends Masked<Class<Number>> {\n  static DEFAULTS: $Shape<MaskedNumberOptions>;\n  static UNMASKED_RADIX: string;\n\n  /** Single char */\n  radix: string;\n  /** Single char */\n  thousandsSeparator: string;\n  /** Array of single chars */\n  mapToRadix: Array<string>;\n  /** */\n  min: number;\n  /** */\n  max: number;\n  /** Digits after point */\n  scale: number;\n  /** */\n  signed: boolean;\n  /** Flag to remove leading and trailing zeros in the end of editing */\n  normalizeZeros: boolean;\n  /** Flag to pad trailing zeros after point in the end of editing */\n  padFractionalZeros: boolean;\n\n  _numberRegExp: RegExp;\n  _thousandsSeparatorRegExp: RegExp;\n  _mapToRadixRegExp: RegExp;\n  _separatorsProcessed: boolean;\n\n  constructor (opts: $Shape<MaskedNumberOptions>) {\n    super({\n      ...MaskedNumber.DEFAULTS,\n      ...opts\n    });\n  }\n\n  /**\n    @override\n  */\n  _update (opts: MaskedNumberOptions) {\n    super._update(opts);\n    this._updateRegExps();\n  }\n\n  /** */\n  _updateRegExps () {\n    let start = '^' + (this.allowNegative ? '[+|\\\\-]?' : '');\n    let mid = '\\\\d*';\n    let end = (this.scale ?\n      `(${escapeRegExp(this.radix)}\\\\d{0,${this.scale}})?` :\n      '') + '$';\n\n    this._numberRegExp = new RegExp(start + mid + end);\n    this._mapToRadixRegExp = new RegExp(`[${this.mapToRadix.map(escapeRegExp).join('')}]`, 'g');\n    this._thousandsSeparatorRegExp = new RegExp(escapeRegExp(this.thousandsSeparator), 'g');\n  }\n\n  /** */\n  _removeThousandsSeparators (value: string): string {\n    return value.replace(this._thousandsSeparatorRegExp, '');\n  }\n\n  /** */\n  _insertThousandsSeparators (value: string): string {\n    // https://stackoverflow.com/questions/2901102/how-to-print-a-number-with-commas-as-thousands-separators-in-javascript\n    const parts = value.split(this.radix);\n    parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, this.thousandsSeparator);\n    return parts.join(this.radix);\n  }\n\n  /**\n    @override\n  */\n  doPrepare (ch: string, flags: AppendFlags={}): string | [string, ChangeDetails] {\n    ch = this._removeThousandsSeparators(\n      this.scale && this.mapToRadix.length && (\n        /*\n          radix should be mapped when\n          1) input is done from keyboard = flags.input && flags.raw\n          2) unmasked value is set = !flags.input && !flags.raw\n          and should not be mapped when\n          1) value is set = flags.input && !flags.raw\n          2) raw value is set = !flags.input && flags.raw\n        */\n        flags.input && flags.raw ||\n        !flags.input && !flags.raw\n      ) ? ch.replace(this._mapToRadixRegExp, this.radix) : ch\n    );\n    const [prepCh, details] = normalizePrepare(super.doPrepare(ch, flags));\n    if (ch && !prepCh) details.skip = true;\n    return [prepCh, details];\n  }\n\n  /** */\n  _separatorsCount (to: number, extendOnSeparators: boolean=false): number {\n    let count = 0;\n\n    for (let pos = 0; pos < to; ++pos) {\n      if (this._value.indexOf(this.thousandsSeparator, pos) === pos) {\n        ++count;\n        if (extendOnSeparators) to += this.thousandsSeparator.length;\n      }\n    }\n\n    return count;\n  }\n\n  /** */\n  _separatorsCountFromSlice (slice: string=this._value): number {\n    return this._separatorsCount(this._removeThousandsSeparators(slice).length, true);\n  }\n\n  /**\n    @override\n  */\n  extractInput (fromPos?: number=0, toPos?: number=this.value.length, flags?: ExtractFlags): string {\n    [fromPos, toPos] = this._adjustRangeWithSeparators(fromPos, toPos);\n\n    return this._removeThousandsSeparators(super.extractInput(fromPos, toPos, flags));\n  }\n\n  /**\n    @override\n  */\n  _appendCharRaw (ch: string, flags: AppendFlags={}): ChangeDetails {\n    if (!this.thousandsSeparator) return super._appendCharRaw(ch, flags);\n\n    const prevBeforeTailValue = flags.tail && flags._beforeTailState ?\n      flags._beforeTailState._value :\n      this._value;\n    const prevBeforeTailSeparatorsCount = this._separatorsCountFromSlice(prevBeforeTailValue);\n    this._value = this._removeThousandsSeparators(this.value);\n\n    const appendDetails = super._appendCharRaw(ch, flags);\n\n    this._value = this._insertThousandsSeparators(this._value);\n    const beforeTailValue = flags.tail && flags._beforeTailState ?\n      flags._beforeTailState._value :\n      this._value;\n    const beforeTailSeparatorsCount = this._separatorsCountFromSlice(beforeTailValue);\n\n    appendDetails.tailShift += (beforeTailSeparatorsCount - prevBeforeTailSeparatorsCount) * this.thousandsSeparator.length;\n    appendDetails.skip = !appendDetails.rawInserted && ch === this.thousandsSeparator;\n    return appendDetails;\n  }\n\n  /** */\n  _findSeparatorAround (pos: number): number {\n    if (this.thousandsSeparator) {\n      const searchFrom = pos - this.thousandsSeparator.length + 1;\n      const separatorPos = this.value.indexOf(this.thousandsSeparator, searchFrom);\n      if (separatorPos <= pos) return separatorPos;\n    }\n\n    return -1;\n  }\n\n  _adjustRangeWithSeparators (from: number, to: number): [number, number] {\n    const separatorAroundFromPos = this._findSeparatorAround(from);\n    if (separatorAroundFromPos >= 0) from = separatorAroundFromPos;\n\n    const separatorAroundToPos = this._findSeparatorAround(to);\n    if (separatorAroundToPos >= 0) to = separatorAroundToPos + this.thousandsSeparator.length;\n    return [from, to];\n  }\n\n  /**\n    @override\n  */\n  remove (fromPos?: number=0, toPos?: number=this.value.length): ChangeDetails {\n    [fromPos, toPos] = this._adjustRangeWithSeparators(fromPos, toPos);\n\n    const valueBeforePos = this.value.slice(0, fromPos);\n    const valueAfterPos = this.value.slice(toPos);\n\n    const prevBeforeTailSeparatorsCount = this._separatorsCount(valueBeforePos.length);\n    this._value = this._insertThousandsSeparators(this._removeThousandsSeparators(valueBeforePos + valueAfterPos));\n    const beforeTailSeparatorsCount = this._separatorsCountFromSlice(valueBeforePos);\n\n    return new ChangeDetails({\n      tailShift: (beforeTailSeparatorsCount - prevBeforeTailSeparatorsCount) * this.thousandsSeparator.length,\n    });\n  }\n\n  /**\n    @override\n  */\n  nearestInputPos (cursorPos: number, direction?: Direction): number {\n    if (!this.thousandsSeparator) return cursorPos;\n\n    switch (direction) {\n      case DIRECTION.NONE:\n      case DIRECTION.LEFT:\n      case DIRECTION.FORCE_LEFT: {\n        const separatorAtLeftPos = this._findSeparatorAround(cursorPos - 1);\n        if (separatorAtLeftPos >= 0) {\n          const separatorAtLeftEndPos = separatorAtLeftPos + this.thousandsSeparator.length;\n          if (cursorPos < separatorAtLeftEndPos ||\n            this.value.length <= separatorAtLeftEndPos ||\n            direction === DIRECTION.FORCE_LEFT\n          ) {\n            return separatorAtLeftPos;\n          }\n        }\n        break;\n      }\n      case DIRECTION.RIGHT:\n      case DIRECTION.FORCE_RIGHT: {\n        const separatorAtRightPos = this._findSeparatorAround(cursorPos);\n        if (separatorAtRightPos >= 0) {\n          return separatorAtRightPos + this.thousandsSeparator.length;\n        }\n      }\n    }\n\n    return cursorPos;\n  }\n\n  /**\n    @override\n  */\n  doValidate (flags: AppendFlags): boolean {\n    // validate as string\n    let valid = Boolean(this._removeThousandsSeparators(this.value).match(this._numberRegExp));\n\n    if (valid) {\n      // validate as number\n      const number = this.number;\n      valid = valid && !isNaN(number) &&\n        // check min bound for negative values\n        (this.min == null || this.min >= 0 || this.min <= this.number) &&\n        // check max bound for positive values\n        (this.max == null || this.max <= 0 || this.number <= this.max);\n    }\n\n    return valid && super.doValidate(flags);\n  }\n\n  /**\n    @override\n  */\n  doCommit () {\n    if (this.value) {\n      const number = this.number;\n      let validnum = number;\n\n      // check bounds\n      if (this.min != null) validnum = Math.max(validnum, this.min);\n      if (this.max != null) validnum = Math.min(validnum, this.max);\n\n      if (validnum !== number) this.unmaskedValue = this.doFormat(validnum);\n\n      let formatted = this.value;\n\n      if (this.normalizeZeros) formatted = this._normalizeZeros(formatted);\n      if (this.padFractionalZeros && this.scale > 0) formatted = this._padFractionalZeros(formatted);\n\n      this._value = formatted;\n    }\n\n    super.doCommit();\n  }\n\n  /** */\n  _normalizeZeros (value: string): string {\n    const parts = this._removeThousandsSeparators(value).split(this.radix);\n\n    // remove leading zeros\n    parts[0] = parts[0].replace(/^(\\D*)(0*)(\\d*)/, (match, sign, zeros, num) => sign + num);\n    // add leading zero\n    if (value.length && !/\\d$/.test(parts[0])) parts[0] = parts[0] + '0';\n\n    if (parts.length > 1) {\n      parts[1] = parts[1].replace(/0*$/, '');  // remove trailing zeros\n      if (!parts[1].length) parts.length = 1;  // remove fractional\n    }\n\n    return this._insertThousandsSeparators(parts.join(this.radix));\n  }\n\n  /** */\n  _padFractionalZeros (value: string): string {\n    if (!value) return value;\n\n    const parts = value.split(this.radix);\n    if (parts.length < 2) parts.push('');\n    parts[1] = parts[1].padEnd(this.scale, '0');\n    return parts.join(this.radix);\n  }\n\n  /** */\n  doSkipInvalid (ch: string, flags: AppendFlags={}, checkTail?: TailDetails): boolean {\n    const dropFractional = this.scale === 0 && ch !== this.thousandsSeparator && (\n      ch === this.radix ||\n      ch === MaskedNumber.UNMASKED_RADIX ||\n      this.mapToRadix.includes(ch)\n    )\n    return super.doSkipInvalid(ch, flags, checkTail) && !dropFractional;\n  }\n\n  /**\n    @override\n  */\n  get unmaskedValue (): string {\n    return this._removeThousandsSeparators(\n      this._normalizeZeros(\n        this.value))\n      .replace(this.radix, MaskedNumber.UNMASKED_RADIX);\n  }\n\n  set unmaskedValue (unmaskedValue: string) {\n    super.unmaskedValue = unmaskedValue;\n  }\n\n  /**\n    @override\n  */\n  get typedValue (): number {\n    return this.doParse(this.unmaskedValue);\n  }\n\n  set typedValue (n: number) {\n    this.rawInputValue = this.doFormat(n).replace(MaskedNumber.UNMASKED_RADIX, this.radix);\n  }\n\n  /** Parsed Number */\n  get number (): number {\n    return this.typedValue;\n  }\n\n  set number (number: number) {\n    this.typedValue = number;\n  }\n\n  /**\n    Is negative allowed\n    @readonly\n  */\n  get allowNegative (): boolean {\n    return this.signed ||\n      (this.min != null && this.min < 0) ||\n      (this.max != null && this.max < 0);\n  }\n\n  /**\n    @override\n  */\n  typedValueEquals (value: any): boolean {\n    // handle  0 -> '' case (typed = 0 even if value = '')\n    // for details see https://github.com/uNmAnNeR/imaskjs/issues/134\n    return (\n      super.typedValueEquals(value) ||\n      MaskedNumber.EMPTY_VALUES.includes(value) && MaskedNumber.EMPTY_VALUES.includes(this.typedValue)\n    ) && !(value === 0 && this.value === '');\n  }\n}\n\nMaskedNumber.UNMASKED_RADIX = '.';\nMaskedNumber.DEFAULTS = {\n  radix: ',',\n  thousandsSeparator: '',\n  mapToRadix: [MaskedNumber.UNMASKED_RADIX],\n  scale: 2,\n  signed: false,\n  normalizeZeros: true,\n  padFractionalZeros: false,\n  parse: Number,\n  format: n => n.toLocaleString('en-US', { useGrouping: false, maximumFractionDigits: 20 }),\n};\nMaskedNumber.EMPTY_VALUES = [...Masked.EMPTY_VALUES, 0];\n\nIMask.MaskedNumber = MaskedNumber;\n","// @flow\nimport Masked, { type MaskedOptions } from './base.js';\nimport IMask from '../core/holder.js';\n\n\n/** Masking by custom Function */\nexport default\nclass MaskedFunction extends Masked<Function> {\n  /**\n    @override\n    @param {Object} opts\n  */\n  _update (opts: MaskedOptions<Function>) {\n    if (opts.mask) opts.validate = opts.mask;\n    super._update(opts);\n  }\n}\n\n\nIMask.MaskedFunction = MaskedFunction;\n","// @flow\nimport { objectIncludes } from '../core/utils.js';\nimport ChangeDetails from '../core/change-details.js';\nimport createMask from './factory.js';\nimport Masked, { type AppendFlags, type MaskedState } from './base.js';\nimport { normalizePrepare } from '../core/utils.js';\nimport { type TailDetails } from '../core/tail-details.js';\nimport IMask from '../core/holder.js';\n\n\ntype MaskedDynamicState = {|\n  ...MaskedState,\n  _rawInputValue: string,\n  compiledMasks: Array<*>,\n  currentMaskRef: ?Masked<*>,\n  currentMask: *,\n|};\n\ntype DynamicMaskType = Array<{[string]: any}>;\n/** Dynamic mask for choosing apropriate mask in run-time */\nexport default\nclass MaskedDynamic extends Masked<DynamicMaskType> {\n  /** Currently chosen mask */\n  currentMask: ?Masked<*>;\n  /** Compliled {@link Masked} options */\n  compiledMasks: Array<Masked<*>>;\n  /** Chooses {@link Masked} depending on input value */\n  dispatch: (string, Masked<*>, AppendFlags) => Masked<*>;\n\n  /**\n    @param {Object} opts\n  */\n  constructor (opts: any) {\n    super({\n      ...MaskedDynamic.DEFAULTS,\n      ...opts\n    });\n\n    this.currentMask = null;\n  }\n\n  /**\n    @override\n  */\n  _update (opts: any) {\n    super._update(opts);\n    if ('mask' in opts) {\n      // mask could be totally dynamic with only `dispatch` option\n      this.compiledMasks = Array.isArray(opts.mask) ?\n        opts.mask.map(m => createMask(m)) :\n        [];\n\n      // this.currentMask = this.doDispatch(''); // probably not needed but lets see\n    }\n  }\n\n  /**\n    @override\n  */\n  _appendCharRaw (ch: string, flags: AppendFlags={}): ChangeDetails {\n    const details = this._applyDispatch(ch, flags);\n\n    if (this.currentMask) {\n      details.aggregate(this.currentMask._appendChar(ch, this.currentMaskFlags(flags)));\n    }\n\n    return details;\n  }\n\n  _applyDispatch (appended: string='', flags: AppendFlags={}): ChangeDetails {\n    const prevValueBeforeTail = flags.tail && flags._beforeTailState != null ?\n      flags._beforeTailState._value :\n      this.value;\n    const inputValue = this.rawInputValue;\n    const insertValue = flags.tail && flags._beforeTailState != null ?\n      // $FlowFixMe - tired to fight with type system\n      flags._beforeTailState._rawInputValue :\n      inputValue;\n    const tailValue = inputValue.slice(insertValue.length);\n    const prevMask = this.currentMask;\n    const details = new ChangeDetails();\n\n    const prevMaskState = prevMask?.state;\n\n    // clone flags to prevent overwriting `_beforeTailState`\n    this.currentMask = this.doDispatch(appended, { ...flags });\n\n    // restore state after dispatch\n    if (this.currentMask) {\n      if (this.currentMask !== prevMask) {\n        // if mask changed reapply input\n        this.currentMask.reset();\n\n        if (insertValue) {\n          // $FlowFixMe - it's ok, we don't change current mask above\n          const d = this.currentMask.append(insertValue, {raw: true});\n          details.tailShift = d.inserted.length - prevValueBeforeTail.length;\n        }\n\n        if (tailValue) {\n          // $FlowFixMe - it's ok, we don't change current mask above\n          details.tailShift += this.currentMask.append(tailValue, {raw: true, tail: true}).tailShift;\n        }\n      } else {\n        // Dispatch can do something bad with state, so\n        // restore prev mask state\n        this.currentMask.state = prevMaskState;\n      }\n    }\n\n    return details;\n  }\n\n  _appendPlaceholder (...args: *): ChangeDetails {\n    const details = this._applyDispatch(...args);\n\n    if (this.currentMask) {\n      details.aggregate(this.currentMask._appendPlaceholder());\n    }\n\n    return details;\n  }\n\n   /**\n    @override\n  */\n  _appendEager (...args: *): ChangeDetails {\n    const details = this._applyDispatch(...args);\n\n    if (this.currentMask) {\n      details.aggregate(this.currentMask._appendEager());\n    }\n\n    return details;\n  }\n\n  currentMaskFlags (flags: AppendFlags): AppendFlags {\n    return {\n      ...flags,\n      _beforeTailState: flags._beforeTailState?.currentMaskRef === this.currentMask && flags._beforeTailState?.currentMask ||\n        flags._beforeTailState,\n    };\n  }\n\n  /**\n    @override\n  */\n  doDispatch(appended: string, flags: AppendFlags={}): ?Masked<*> {\n    return this.dispatch(appended, this, flags);\n  }\n\n  /**\n    @override\n  */\n  doValidate (flags: AppendFlags): boolean {\n    return super.doValidate(flags) && (\n      !this.currentMask || this.currentMask.doValidate(this.currentMaskFlags(flags))\n    );\n  }\n\n  /**\n    @override\n  */\n  doPrepare (str: string, flags: AppendFlags={}): string | [string, ChangeDetails] {\n    let [s, details] = normalizePrepare(super.doPrepare(str, flags));\n\n    if (this.currentMask) {\n      let currentDetails;\n      ([s, currentDetails] = normalizePrepare(super.doPrepare(s, this.currentMaskFlags(flags))));\n      details = details.aggregate(currentDetails);\n    }\n\n    return [s, details];\n  }\n\n  /**\n    @override\n  */\n  reset () {\n    this.currentMask?.reset();\n    this.compiledMasks.forEach(m => m.reset());\n  }\n\n  /**\n    @override\n  */\n  get value (): string {\n    return this.currentMask ? this.currentMask.value : '';\n  }\n\n  set value (value: string) {\n    super.value = value;\n  }\n\n  /**\n    @override\n  */\n  get unmaskedValue (): string {\n    return this.currentMask ? this.currentMask.unmaskedValue : '';\n  }\n\n  set unmaskedValue (unmaskedValue: string) {\n    super.unmaskedValue = unmaskedValue;\n  }\n\n  /**\n    @override\n  */\n  get typedValue (): any {\n    return this.currentMask ? this.currentMask.typedValue : '';\n  }\n\n  // probably typedValue should not be used with dynamic\n  set typedValue (value: any) {\n    let unmaskedValue = String(value);\n\n    // double check it\n    if (this.currentMask) {\n      this.currentMask.typedValue = value;\n      unmaskedValue = this.currentMask.unmaskedValue;\n    }\n    this.unmaskedValue = unmaskedValue;\n  }\n\n  /**\n    @override\n  */\n  get isComplete (): boolean {\n    return Boolean(this.currentMask?.isComplete);\n  }\n\n  /**\n    @override\n  */\n  get isFilled (): boolean {\n    return Boolean(this.currentMask?.isFilled);\n  }\n\n  /**\n    @override\n  */\n  remove (...args: *): ChangeDetails {\n    const details: ChangeDetails = new ChangeDetails();\n    if (this.currentMask) {\n      details.aggregate(this.currentMask.remove(...args))\n        // update with dispatch\n        .aggregate(this._applyDispatch());\n    }\n\n    return details;\n  }\n\n  /**\n    @override\n  */\n  get state (): MaskedDynamicState {\n    return {\n      ...super.state,\n      _rawInputValue: this.rawInputValue,\n      compiledMasks: this.compiledMasks.map(m => m.state),\n      currentMaskRef: this.currentMask,\n      currentMask: this.currentMask?.state,\n    };\n  }\n\n  set state (state: MaskedDynamicState) {\n    const {compiledMasks, currentMaskRef, currentMask, ...maskedState} = state;\n    this.compiledMasks.forEach((m, mi) => m.state = compiledMasks[mi]);\n    if (currentMaskRef != null) {\n      this.currentMask = currentMaskRef;\n      this.currentMask.state = currentMask;\n    }\n    super.state = maskedState;\n  }\n\n  /**\n    @override\n  */\n  extractInput (...args: *): string {\n    return this.currentMask ?\n      this.currentMask.extractInput(...args) :\n      '';\n  }\n\n  /**\n    @override\n  */\n  extractTail (...args: *): TailDetails {\n    return this.currentMask ?\n      this.currentMask.extractTail(...args) :\n      super.extractTail(...args);\n  }\n\n  /**\n    @override\n  */\n  doCommit () {\n    if (this.currentMask) this.currentMask.doCommit();\n    super.doCommit();\n  }\n\n  /**\n    @override\n  */\n  nearestInputPos(...args: *): number {\n    return this.currentMask ?\n      this.currentMask.nearestInputPos(...args) :\n      super.nearestInputPos(...args);\n  }\n\n  get overwrite (): ?boolean | 'shift' {\n    return this.currentMask ?\n      this.currentMask.overwrite :\n      super.overwrite;\n  }\n\n  set overwrite (overwrite: *) {\n    console.warn('\"overwrite\" option is not available in dynamic mask, use this option in siblings');\n  }\n\n  get eager (): boolean | 'remove' | 'append' {\n    return this.currentMask ?\n      this.currentMask.eager :\n      super.eager;\n  }\n\n  set eager (eager: *) {\n    console.warn('\"eager\" option is not available in dynamic mask, use this option in siblings');\n  }\n\n  get skipInvalid (): boolean {\n    return this.currentMask ?\n      this.currentMask.skipInvalid :\n      super.skipInvalid;\n  }\n\n  set skipInvalid (skipInvalid: *) {\n    console.warn('\"skipInvalid\" option is not available in dynamic mask, use this option in siblings');\n  }\n\n  /**\n    @override\n  */\n  maskEquals (mask: any): boolean {\n    return Array.isArray(mask) &&\n      this.compiledMasks.every((m, mi) => {\n        if (!mask[mi]) return;\n\n        const { mask: oldMask, ...restOpts } = mask[mi];\n        return objectIncludes(m, restOpts) && m.maskEquals(oldMask);\n      });\n  }\n\n  /**\n    @override\n  */\n  typedValueEquals (value: any): boolean {\n    return Boolean(this.currentMask?.typedValueEquals(value));\n  }\n}\n\nMaskedDynamic.DEFAULTS = {\n  dispatch: (appended, masked, flags) => {\n    if (!masked.compiledMasks.length) return;\n\n    const inputValue = masked.rawInputValue;\n\n    // simulate input\n    const inputs = masked.compiledMasks.map((m, index) => {\n      m.reset();\n      m.append(inputValue, { raw: true });\n      m.append(appended, masked.currentMaskFlags(flags));\n      const weight = m.rawInputValue.length;\n\n      return {weight, index};\n    });\n\n    // pop masks with longer values first\n    inputs.sort((i1, i2) => i2.weight - i1.weight);\n\n    return masked.compiledMasks[inputs[0].index];\n  }\n};\n\n\nIMask.MaskedDynamic = MaskedDynamic;\n","import createMask from './factory';\nimport IMask from '../core/holder.js';\n\n\n/** Mask pipe source and destination types */\nexport\nconst PIPE_TYPE = {\n  MASKED: 'value',\n  UNMASKED: 'unmaskedValue',\n  TYPED: 'typedValue',\n};\n\n/** Creates new pipe function depending on mask type, source and destination options */\nexport\nfunction createPipe (mask, from=PIPE_TYPE.MASKED, to=PIPE_TYPE.MASKED) {\n  const masked = createMask(mask);\n  return (value) => masked.runIsolated(m => {\n    m[from] = value;\n    return m[to];\n  });\n}\n\n/** Pipes value through mask depending on mask type, source and destination options */\nexport\nfunction pipe (value, ...pipeArgs) {\n  return createPipe(...pipeArgs)(value);\n}\n\n\nIMask.PIPE_TYPE = PIPE_TYPE;\nIMask.createPipe = createPipe;\nIMask.pipe = pipe;\n","import IMask from './imask.js';\nexport { default as InputMask } from './controls/input.js';\n\nexport { default as Masked } from './masked/base.js';\nexport { default as MaskedPattern } from './masked/pattern.js';\nexport { default as MaskedEnum } from './masked/enum.js';\nexport { default as MaskedRange } from './masked/range.js';\nexport { default as MaskedNumber } from './masked/number.js';\nexport { default as MaskedDate } from './masked/date.js';\nexport { default as MaskedRegExp } from './masked/regexp.js';\nexport { default as MaskedFunction } from './masked/function.js';\nexport { default as MaskedDynamic } from './masked/dynamic.js';\nexport { default as createMask } from './masked/factory.js';\nexport { default as MaskElement } from './controls/mask-element.js';\nexport { default as HTMLMaskElement } from './controls/html-mask-element.js';\nexport { default as HTMLContenteditableMaskElement } from './controls/html-contenteditable-mask-element.js';\nexport { createPipe, pipe, PIPE_TYPE } from './masked/pipe.js';\n\nexport { default as ChangeDetails } from './core/change-details.js';\n\n\ntry {\n  globalThis.IMask = IMask;\n} catch(e) {}\nexport default IMask;\n"],"names":["ChangeDetails","constructor","details","Object","assign","inserted","rawInserted","skip","tailShift","aggregate","offset","length","isString","str","String","DIRECTION","NONE","LEFT","FORCE_LEFT","RIGHT","FORCE_RIGHT","forceDirection","direction","escapeRegExp","replace","normalizePrepare","prep","Array","isArray","objectIncludes","b","a","arrA","arrB","i","dateA","Date","dateB","getTime","regexpA","RegExp","regexpB","toString","keys","prototype","hasOwnProperty","call","ActionDetails","value","cursorPos","oldValue","oldSelection","slice","startChangePos","start","Math","min","insertedCount","substr","removedCount","max","end","removed","head","substring","tail","removeDirection","ContinuousTailDetails","arguments","undefined","from","stop","extend","appendTo","masked","append","_appendPlaceholder","state","unshift","beforePos","shiftChar","shift","IMask","el","opts","InputMask","Masked","_value","_update","DEFAULTS","isInitialized","updateOptions","withValueRefresh","bind","reset","resolve","input","doCommit","unmaskedValue","typedValue","doParse","doFormat","rawInputValue","extractInput","raw","isComplete","isFilled","nearestInputPos","fromPos","toPos","extractTail","appendTail","_appendCharRaw","ch","_appendChar","flags","checkTail","consistentState","doPrepare","consistentTail","appended","doValidate","beforeTailState","overwrite","tailDetails","_appendEager","Error","_beforeTailState","ci","d","doSkipInvalid","eager","remove","fn","_refreshing","rawInput","ret","indexOf","runIsolated","_isolated","skipInvalid","prepare","validate","parent","commit","format","parse","splice","deleteCount","tailPos","eagerRemove","oldRawValue","valLength","maskEquals","mask","typedValueEquals","tval","EMPTY_VALUES","includes","v","maskedClass","MaskedRegExp","MaskedPattern","MaskedDate","Number","MaskedNumber","MaskedDynamic","Function","MaskedFunction","console","warn","createMask","MaskedClass","DEFAULT_INPUT_DEFINITIONS","PatternInputDefinition","blockOpts","_objectWithoutPropertiesLoose","_excluded","isOptional","placeholderChar","Boolean","lazy","minPos","maxPos","boundPos","PatternFixedDefinition","isFixed","isUnmasking","_isRawInput","appendEager","char","isResolved","ChunksTailDetails","chunks","map","join","tailChunk","lastChunk","extendLast","push","firstTailChunk","blockIndex","chunk","lastBlockIter","_mapPosToBlock","chunkBlock","index","_stops","_blocks","remainChars","c","props","cstate","chunkShiftPos","PatternCursor","pos","_log","ok","block","_blockStartPos","s","pushState","popState","pop","bindBlock","_pushLeft","_this$block","_pushRight","pushLeftBeforeFilled","pushLeftBeforeInput","pushLeftBeforeRequired","pushRightBeforeFilled","pushRightBeforeInput","pushRightBeforeRequired","search","definitions","_rebuildMask","defs","_maskedBlocks","pattern","unmaskingBlock","optionalBlock","blocks","p","bNames","filter","bName","sort","maskedBlock","isInput","STOP_CHAR","ESCAPE_CHAR","def","maskedState","forEach","bi","every","reduce","_this$_mapPosToBlock","startBlockIndex","blockIter","_flags$_beforeTailSta","_flags$_beforeTailSta2","blockDetails","chunkTail","_forEachBlocksInRange","bFromPos","bToPos","blockChunk","_findStopBefore","_","stopBefore","si","toBlockIndex","startBlockIter","endBlockIndex","args","bDetails","accVal","blockStartPos","fromBlockIter","toBlockIter","isSameBlock","fromBlockStartPos","fromBlockEndPos","removeDetails","cursor","name","maskedBlocks","indices","gi","InputDefinition","FixedDefinition","MaskedRange","_matchFrom","maxLength","to","fromStr","padStart","toStr","sameCharsCount","repeat","boundaries","minstr","maxstr","placeholder","num","match","padEnd","autofix","nextVal","firstNonZero","GET_DEFAULT_BLOCKS","Y","getFullYear","m","getMonth","getDate","bk","date","isDateExist","day","month","year","split","MaskElement","selectionStart","_unsafeSelectionStart","e","selectionEnd","_unsafeSelectionEnd","select","_unsafeSelect","isActive","bindEvents","handlers","unbindEvents","HTMLMaskElement","_handlers","rootElement","_this$input$getRootNo","_this$input$getRootNo2","_this$input","getRootNode","document","activeElement","setSelectionRange","event","_toggleEventHandler","EVENTS_MAP","handler","removeEventListener","addEventListener","selectionChange","drop","click","focus","HTMLContenteditableMaskElement","root","selection","getSelection","anchorOffset","focusOffset","createRange","range","setStart","firstChild","setEnd","lastChild","removeAllRanges","addRange","textContent","isContentEditable","tagName","_listeners","_unmaskedValue","_saveSelection","_onInput","_onChange","_onDrop","_onFocus","_onClick","alignCursor","alignCursorFriendly","_bindEvents","updateValue","_this$masked","updateControl","val","_unbindEvents","_fireEvent","ev","_len","_key","listeners","l","_cursorChanging","_changingCursorPos","_selection","newUnmaskedValue","newValue","isChanged","_fireChangeEvents","restOpts","updateMask","updateOpts","updateCursor","_delayUpdateCursor","_abortUpdateCursor","setTimeout","_inputEvent","clearTimeout","on","off","hIndex","preventDefault","stopPropagation","destroy","MaskedEnum","enum","some","_updateRegExps","allowNegative","mid","scale","concat","radix","_numberRegExp","_mapToRadixRegExp","mapToRadix","_thousandsSeparatorRegExp","thousandsSeparator","_removeThousandsSeparators","_insertThousandsSeparators","parts","prepCh","_separatorsCount","extendOnSeparators","count","_separatorsCountFromSlice","_adjustRangeWithSeparators","prevBeforeTailValue","prevBeforeTailSeparatorsCount","appendDetails","beforeTailValue","beforeTailSeparatorsCount","_findSeparatorAround","searchFrom","separatorPos","separatorAroundFromPos","separatorAroundToPos","valueBeforePos","valueAfterPos","separatorAtLeftPos","separatorAtLeftEndPos","separatorAtRightPos","valid","number","isNaN","validnum","formatted","normalizeZeros","_normalizeZeros","padFractionalZeros","_padFractionalZeros","sign","zeros","test","dropFractional","UNMASKED_RADIX","n","signed","toLocaleString","useGrouping","maximumFractionDigits","currentMask","compiledMasks","_applyDispatch","currentMaskFlags","prevValueBeforeTail","inputValue","insertValue","_rawInputValue","tailValue","prevMask","prevMaskState","doDispatch","currentMaskRef","dispatch","currentDetails","_this$currentMask","_this$currentMask2","_this$currentMask3","_this$currentMask4","mi","_mask$mi","oldMask","_excluded2","_this$currentMask5","inputs","weight","i1","i2","PIPE_TYPE","MASKED","UNMASKED","TYPED","createPipe","pipe","pipeArgs","globalThis"],"mappings":"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"}