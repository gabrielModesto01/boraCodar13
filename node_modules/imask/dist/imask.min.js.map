{"version":3,"file":"imask.min.js","sources":["../src/core/change-details.js","../src/core/utils.js","../src/core/action-details.js","../src/core/continuous-tail-details.js","../src/core/holder.js","../src/masked/base.js","../src/masked/factory.js","../src/masked/pattern/input-definition.js","../src/masked/pattern/fixed-definition.js","../src/masked/pattern/chunk-tail-details.js","../src/masked/pattern/cursor.js","../src/masked/regexp.js","../src/masked/pattern.js","../src/masked/range.js","../src/masked/date.js","../src/controls/mask-element.js","../src/controls/html-mask-element.js","../src/controls/html-contenteditable-mask-element.js","../src/controls/input.js","../src/masked/enum.js","../src/masked/number.js","../src/masked/function.js","../src/masked/dynamic.js","../src/masked/pipe.js","../src/index.js"],"sourcesContent":["// @flow\n\n\n/**\n  Provides details of changing model value\n  @param {Object} [details]\n  @param {string} [details.inserted] - Inserted symbols\n  @param {boolean} [details.skip] - Can skip chars\n  @param {number} [details.removeCount] - Removed symbols count\n  @param {number} [details.tailShift] - Additional offset if any changes occurred before tail\n*/\nexport default\nclass ChangeDetails {\n  /** Inserted symbols */\n  inserted: string;\n  /** Can skip chars */\n  skip: boolean;\n  /** Additional offset if any changes occurred before tail */\n  tailShift: number;\n  /** Raw inserted is used by dynamic mask */\n  rawInserted: string;\n\n  constructor (details?: {\n    inserted?: $PropertyType<ChangeDetails, 'inserted'>,\n    rawInserted?: $PropertyType<ChangeDetails, 'rawInserted'>,\n    skip?: $PropertyType<ChangeDetails, 'skip'>,\n    tailShift?: $PropertyType<ChangeDetails, 'tailShift'>,\n  }) {\n    Object.assign(this, {\n      inserted: '',\n      rawInserted: '',\n      skip: false,\n      tailShift: 0,\n    }, details);\n  }\n\n  /**\n    Aggregate changes\n    @returns {ChangeDetails} `this`\n  */\n  aggregate (details: ChangeDetails): ChangeDetails {\n    this.rawInserted += details.rawInserted;\n    this.skip = this.skip || details.skip;\n    this.inserted += details.inserted;\n    this.tailShift += details.tailShift;\n    return this;\n  }\n\n  /** Total offset considering all changes */\n  get offset (): number {\n    return this.tailShift + this.inserted.length;\n  }\n}\n","// @flow\nimport ChangeDetails from './change-details.js';\n\n\n/** Checks if value is string */\nexport\nfunction isString (str: mixed): boolean %checks {\n  return typeof str === 'string' || str instanceof String;\n}\n\n/**\n  Direction\n  @prop {string} NONE\n  @prop {string} LEFT\n  @prop {string} FORCE_LEFT\n  @prop {string} RIGHT\n  @prop {string} FORCE_RIGHT\n*/\nexport\nconst DIRECTION = {\n  NONE: 'NONE',\n  LEFT: 'LEFT',\n  FORCE_LEFT: 'FORCE_LEFT',\n  RIGHT: 'RIGHT',\n  FORCE_RIGHT: 'FORCE_RIGHT',\n}\n/**\n  Direction\n  @enum {string}\n*/\nexport\ntype Direction = $Values<typeof DIRECTION>;\n\n/** Returns next char index in direction */\nexport\nfunction indexInDirection (pos: number, direction: Direction): number {\n  if (direction === DIRECTION.LEFT) --pos;\n  return pos;\n}\n\n/** Returns next char position in direction */\nexport\nfunction posInDirection (pos: number, direction: Direction): number {\n  switch (direction) {\n    case DIRECTION.LEFT:\n    case DIRECTION.FORCE_LEFT:\n      return --pos;\n    case DIRECTION.RIGHT:\n    case DIRECTION.FORCE_RIGHT:\n      return ++pos;\n    default:\n      return pos;\n  }\n}\n\n/** */\nexport\nfunction forceDirection (direction: Direction): Direction {\n  switch (direction) {\n    case DIRECTION.LEFT:\n      return DIRECTION.FORCE_LEFT;\n    case DIRECTION.RIGHT:\n      return DIRECTION.FORCE_RIGHT;\n    default:\n      return direction;\n  }\n}\n\n/** Escapes regular expression control chars */\nexport\nfunction escapeRegExp (str: string): string {\n  return str.replace(/([.*+?^=!:${}()|[\\]\\/\\\\])/g, '\\\\$1');\n}\n\nexport\nfunction normalizePrepare (prep: string | [string, ChangeDetails]): [string, ChangeDetails] {\n  return Array.isArray(prep) ? prep : [\n    prep,\n    new ChangeDetails(),\n  ];\n}\n\n// cloned from https://github.com/epoberezkin/fast-deep-equal with small changes\nexport\nfunction objectIncludes (b: any, a: any): boolean {\n  if (a === b) return true;\n\n  var arrA = Array.isArray(a)\n    , arrB = Array.isArray(b)\n    , i;\n\n  if (arrA && arrB) {\n    if (a.length != b.length) return false;\n    for (i = 0; i < a.length; i++)\n      if (!objectIncludes(a[i], b[i])) return false;\n    return true;\n  }\n\n  if (arrA != arrB) return false;\n\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    var dateA = a instanceof Date\n      , dateB = b instanceof Date;\n    if (dateA && dateB) return a.getTime() == b.getTime();\n    if (dateA != dateB) return false;\n\n    var regexpA = a instanceof RegExp\n      , regexpB = b instanceof RegExp;\n    if (regexpA && regexpB) return a.toString() == b.toString();\n    if (regexpA != regexpB) return false;\n\n    var keys = Object.keys(a);\n    // if (keys.length !== Object.keys(b).length) return false;\n\n    for (i = 0; i < keys.length; i++)\n      // $FlowFixMe ... ???\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = 0; i < keys.length; i++)\n      if(!objectIncludes(b[keys[i]], a[keys[i]])) return false;\n\n    return true;\n  } else if (a && b && typeof a === 'function' && typeof b === 'function') {\n      return a.toString() === b.toString()\n  }\n\n  return false;\n}\n\n/** Selection range */\nexport\ntype Selection = {\n  start: number;\n  end: number;\n};\n","// @flow\nimport {type Direction, type Selection, DIRECTION} from './utils.js';\n\n\n/** Provides details of changing input */\nexport default\nclass ActionDetails {\n  /** Current input value */\n  value: string;\n  /** Current cursor position */\n  cursorPos: number;\n  /** Old input value */\n  oldValue: string;\n  /** Old selection */\n  oldSelection: Selection;\n\n  constructor (\n    value: string,\n    cursorPos: number,\n    oldValue: string,\n    oldSelection: Selection\n  ) {\n    this.value = value;\n    this.cursorPos = cursorPos;\n    this.oldValue = oldValue;\n    this.oldSelection = oldSelection;\n\n    // double check if left part was changed (autofilling, other non-standard input triggers)\n    while (this.value.slice(0, this.startChangePos) !== this.oldValue.slice(0, this.startChangePos)) {\n      --this.oldSelection.start;\n    }\n  }\n\n  /**\n    Start changing position\n    @readonly\n  */\n  get startChangePos (): number {\n    return Math.min(this.cursorPos, this.oldSelection.start);\n  }\n\n  /**\n    Inserted symbols count\n    @readonly\n  */\n  get insertedCount (): number {\n    return this.cursorPos - this.startChangePos;\n  }\n\n  /**\n    Inserted symbols\n    @readonly\n  */\n  get inserted (): string {\n    return this.value.substr(this.startChangePos, this.insertedCount);\n  }\n\n  /**\n    Removed symbols count\n    @readonly\n  */\n  get removedCount (): number {\n    // Math.max for opposite operation\n    return Math.max((this.oldSelection.end - this.startChangePos) ||\n      // for Delete\n      this.oldValue.length - this.value.length, 0);\n  }\n\n  /**\n    Removed symbols\n    @readonly\n  */\n  get removed (): string {\n    return this.oldValue.substr(this.startChangePos, this.removedCount);\n  }\n\n  /**\n    Unchanged head symbols\n    @readonly\n  */\n  get head (): string {\n    return this.value.substring(0, this.startChangePos);\n  }\n\n  /**\n    Unchanged tail symbols\n    @readonly\n  */\n  get tail (): string {\n    return this.value.substring(this.startChangePos + this.insertedCount);\n  }\n\n  /**\n    Remove direction\n    @readonly\n  */\n  get removeDirection (): Direction {\n    if (!this.removedCount || this.insertedCount) return DIRECTION.NONE;\n\n    // align right if delete at right\n    return (\n      (this.oldSelection.end === this.cursorPos || this.oldSelection.start === this.cursorPos) &&\n      // if not range removed (event with backspace)\n      this.oldSelection.end === this.oldSelection.start\n    ) ?\n      DIRECTION.RIGHT :\n      DIRECTION.LEFT;\n  }\n}\n","// @flow\nimport type { TailDetails, AppendTail } from './tail-details.js';\nimport type ChangeDetails from './change-details.js';\n\n\ntype ContinuousTailState = {\n  value: $PropertyType<ContinuousTailDetails, 'value'>,\n  from: $PropertyType<ContinuousTailDetails, 'from'>,\n  stop?: $PropertyType<ContinuousTailDetails, 'stop'>,\n};\n\n/** Provides details of continuous extracted tail */\nexport default\nclass ContinuousTailDetails implements TailDetails {\n  /** Tail value as string */\n  value: string;\n  /** Tail start position */\n  from: number;\n  /** Start position */\n  stop: ?number;\n\n  constructor (value?: string='', from?: number=0, stop?: number) {\n    this.value = value;\n    this.from = from;\n    this.stop = stop;\n  }\n\n  toString (): string { return this.value; }\n\n  extend (tail: string | TailDetails): void {\n    this.value += String(tail);\n  }\n\n  appendTo (masked: AppendTail): ChangeDetails {\n    return masked.append(this.toString(), { tail: true })\n      .aggregate(masked._appendPlaceholder());\n  }\n\n  get state (): ContinuousTailState {\n    return {\n      value: this.value,\n      from: this.from,\n      stop: this.stop,\n    };\n  }\n\n  set state (state: ContinuousTailState) {\n    Object.assign(this, state);\n  }\n\n  unshift (beforePos?: number): string {\n    if (!this.value.length || (beforePos != null && this.from >= beforePos)) return '';\n\n    const shiftChar = this.value[0];\n    this.value = this.value.slice(1);\n    return shiftChar;\n  }\n\n  shift (): string {\n    if (!this.value.length) return '';\n\n    const shiftChar = this.value[this.value.length-1];\n    this.value = this.value.slice(0, -1);\n    return shiftChar;\n  }\n}\n","/**\n * Applies mask on element.\n * @constructor\n * @param {HTMLInputElement|HTMLTextAreaElement|MaskElement} el - Element to apply mask\n * @param {Object} opts - Custom mask options\n * @return {InputMask}\n */\nexport default\nfunction IMask (el, opts={}) {\n  // currently available only for input-like elements\n  return new IMask.InputMask(el, opts);\n}\n","// @flow\nimport ChangeDetails from '../core/change-details.js';\nimport ContinuousTailDetails from '../core/continuous-tail-details.js';\nimport { type Direction, DIRECTION, isString, normalizePrepare, forceDirection } from '../core/utils.js';\nimport { type TailDetails } from '../core/tail-details.js';\nimport IMask from '../core/holder.js';\n\n\n/** Supported mask type */\nexport\ntype Mask =\n  string |\n  String |\n  RegExp |\n  Class<Number> |\n  Class<Date> |\n  Array<any> |\n  $PropertyType<Masked<*>, 'validate'> |\n  Masked<*> |\n  Class<Masked<*>>;\n\nexport\ntype MaskedState = {|\n  _value: string,\n|};\n\n/** Append flags */\nexport\ntype AppendFlags = {\n  input?: boolean,\n  tail?: boolean,\n  raw?: boolean,\n  _beforeTailState?: any,  // TODO types...\n};\n\n/** Extract flags */\nexport\ntype ExtractFlags = {\n  raw?: boolean\n};\n\nexport\ntype MaskedOptions<MaskType> = {\n  mask: $PropertyType<Masked<MaskType>, 'mask'>,\n  parent?: $PropertyType<Masked<*>, 'parent'>,\n  prepare?: $PropertyType<Masked<MaskType>, 'prepare'>,\n  validate?: $PropertyType<Masked<MaskType>, 'validate'>,\n  commit?: $PropertyType<Masked<MaskType>, 'commit'>,\n  overwrite?: $PropertyType<Masked<MaskType>, 'overwrite'>,\n  eager?: $PropertyType<Masked<MaskType>, 'eager'>,\n  format?: $PropertyType<Masked<MaskType>, 'format'>,\n  parse?: $PropertyType<Masked<MaskType>, 'parse'>,\n  skipInvalid?: $PropertyType<Masked<MaskType>, 'skipInvalid'>,\n};\n\n\n/** Provides common masking stuff */\nexport default\nclass Masked<MaskType> {\n  static DEFAULTS: any; // $Shape<MaskedOptions>; TODO after fix https://github.com/facebook/flow/issues/4773\n  static EMPTY_VALUES: any;\n\n  /** @type {Mask} */\n  mask: MaskType;\n  /** */ // $FlowFixMe no ideas\n  parent: ?Masked<*>;\n  /** Transforms value before mask processing */\n  prepare: (string, Masked<MaskType>, AppendFlags) => string | [string, ChangeDetails];\n  /** Validates if value is acceptable */\n  validate: (string, Masked<MaskType>, AppendFlags) => boolean;\n  /** Does additional processing in the end of editing */\n  commit: (string, Masked<MaskType>) => void;\n  /** Format typed value to string */\n  format: (any, Masked<MaskType>) => string;\n  /** Parse strgin to get typed value */\n  parse: (string, Masked<MaskType>) => any;\n  /** Enable characters overwriting */\n  overwrite: ?boolean | 'shift';\n  /** */\n  eager: boolean | 'remove' | 'append';\n  /** */\n  skipInvalid: boolean;\n  /** */\n  isInitialized: boolean;\n  _value: string;\n  _refreshing: ?boolean;\n  _isolated: ?boolean;\n\n  constructor (opts: {[string]: any}) {\n    this._value = '';\n    this._update({\n      ...Masked.DEFAULTS,\n      ...opts,\n    });\n    this.isInitialized = true;\n  }\n\n  /** Sets and applies new options */\n  updateOptions (opts: {[string]: any}) {\n    if (!Object.keys(opts).length) return;\n    // $FlowFixMe\n    this.withValueRefresh(this._update.bind(this, opts));\n  }\n\n  /**\n    Sets new options\n    @protected\n  */\n  _update (opts: {[string]: any}) {\n    Object.assign(this, opts);\n  }\n\n  /** Mask state */\n  get state (): any {\n    return {\n      _value: this.value,\n    };\n  }\n\n  set state (state: any) {\n    this._value = state._value;\n  }\n\n  /** Resets value */\n  reset () {\n    this._value = '';\n  }\n\n  /** */\n  get value (): string {\n    return this._value;\n  }\n\n  set value (value: string) {\n    this.resolve(value);\n  }\n\n  /** Resolve new value */\n  resolve (value: string): string {\n    this.reset();\n    this.append(value, {input: true}, '');\n    this.doCommit();\n    return this.value;\n  }\n\n  /** */\n  get unmaskedValue (): string {\n    return this.value;\n  }\n\n  set unmaskedValue (value: string) {\n    this.reset();\n    this.append(value, {}, '');\n    this.doCommit();\n  }\n\n  /** */\n  get typedValue (): any {\n    return this.doParse(this.value);\n  }\n\n  set typedValue (value: any) {\n    this.value = this.doFormat(value);\n  }\n\n  /** Value that includes raw user input */\n  get rawInputValue (): string {\n    return this.extractInput(0, this.value.length, {raw: true});\n  }\n\n  set rawInputValue (value: string) {\n    this.reset();\n    this.append(value, {raw: true}, '');\n    this.doCommit();\n  }\n\n  /** */\n  get isComplete (): boolean {\n    return true;\n  }\n\n  /** */\n  get isFilled (): boolean {\n    return this.isComplete;\n  }\n\n  /** Finds nearest input position in direction */\n  nearestInputPos (cursorPos: number, direction?: Direction): number {\n    return cursorPos;\n  }\n\n  /** Extracts value in range considering flags */\n  extractInput (fromPos?: number=0, toPos?: number=this.value.length, flags?: ExtractFlags): string {\n    return this.value.slice(fromPos, toPos);\n  }\n\n  /** Extracts tail in range */\n  extractTail (fromPos?: number=0, toPos?: number=this.value.length): TailDetails {\n    return new ContinuousTailDetails(this.extractInput(fromPos, toPos), fromPos);\n  }\n\n  /** Appends tail */\n  // $FlowFixMe no ideas\n  appendTail (tail: string | String | TailDetails): ChangeDetails {\n    if (isString(tail)) tail = new ContinuousTailDetails(String(tail));\n\n    return tail.appendTo(this);\n  }\n\n  /** Appends char */\n  _appendCharRaw (ch: string, flags: AppendFlags={}): ChangeDetails {\n    if (!ch) return new ChangeDetails();\n\n    this._value += ch;\n    return new ChangeDetails({\n      inserted: ch,\n      rawInserted: ch,\n    });\n  }\n\n  /** Appends char */\n  _appendChar (ch: string, flags: AppendFlags={}, checkTail?: TailDetails): ChangeDetails {\n    const consistentState: MaskedState = this.state;\n    let details: ChangeDetails;\n    [ch, details] = normalizePrepare(this.doPrepare(ch, flags));\n\n    details = details.aggregate(this._appendCharRaw(ch, flags));\n\n    if (details.inserted) {\n      let consistentTail;\n      let appended = this.doValidate(flags) !== false;\n\n      if (appended && checkTail != null) {\n        // validation ok, check tail\n        const beforeTailState = this.state;\n        if (this.overwrite === true) {\n          consistentTail = checkTail.state;\n          checkTail.unshift(this.value.length - details.tailShift);\n        }\n\n        let tailDetails = this.appendTail(checkTail);\n        appended = tailDetails.rawInserted === checkTail.toString();\n\n        // not ok, try shift\n        if (!(appended && tailDetails.inserted) && this.overwrite === 'shift') {\n          this.state = beforeTailState;\n          consistentTail = checkTail.state;\n          checkTail.shift();\n\n          tailDetails = this.appendTail(checkTail);\n          appended = tailDetails.rawInserted === checkTail.toString();\n        }\n\n        // if ok, rollback state after tail\n        if (appended && tailDetails.inserted) this.state = beforeTailState;\n      }\n\n      // revert all if something went wrong\n      if (!appended) {\n        details = new ChangeDetails();\n        this.state = consistentState;\n        if (checkTail && consistentTail) checkTail.state = consistentTail;\n      }\n    }\n    return details;\n  }\n\n  /** Appends optional placeholder at end */\n  _appendPlaceholder (): ChangeDetails {\n    return new ChangeDetails();\n  }\n\n  /** Appends optional eager placeholder at end */\n  _appendEager (): ChangeDetails {\n    return new ChangeDetails();\n  }\n\n  /** Appends symbols considering flags */\n  // $FlowFixMe no ideas\n  append (str: string, flags?: AppendFlags, tail?: string | String | TailDetails): ChangeDetails {\n    if (!isString(str)) throw new Error('value should be string');\n    const details = new ChangeDetails();\n    const checkTail = isString(tail) ? new ContinuousTailDetails(String(tail)) : tail;\n    if (flags?.tail) flags._beforeTailState = this.state;\n\n    for (let ci=0; ci<str.length; ++ci) {\n      const d = this._appendChar(str[ci], flags, checkTail);\n      if (!d.rawInserted && !this.doSkipInvalid(str[ci], flags, checkTail)) break;\n      details.aggregate(d);\n    }\n\n    // append tail but aggregate only tailShift\n    if (checkTail != null) {\n      details.tailShift += this.appendTail(checkTail).tailShift;\n      // TODO it's a good idea to clear state after appending ends\n      // but it causes bugs when one append calls another (when dynamic dispatch set rawInputValue)\n      // this._resetBeforeTailState();\n    }\n\n    if ((this.eager === true || this.eager === 'append') && flags?.input && str) {\n      details.aggregate(this._appendEager());\n    }\n\n    return details;\n  }\n\n  /** */\n  remove (fromPos?: number=0, toPos?: number=this.value.length): ChangeDetails {\n    this._value = this.value.slice(0, fromPos) + this.value.slice(toPos);\n    return new ChangeDetails();\n  }\n\n  /** Calls function and reapplies current value */\n  withValueRefresh<T>(fn: () => T): T {\n    if (this._refreshing || !this.isInitialized) return fn();\n    this._refreshing = true;\n\n    const rawInput = this.rawInputValue;\n    const value = this.value;\n\n    const ret = fn();\n\n    this.rawInputValue = rawInput;\n    // append lost trailing chars at end\n    if (this.value && this.value !== value && value.indexOf(this.value) === 0) {\n      this.append(value.slice(this.value.length), {}, '');\n    }\n\n    delete this._refreshing;\n    return ret;\n  }\n\n  /** */\n  runIsolated<T>(fn: (masked: any) => T): T {\n    if (this._isolated || !this.isInitialized) return fn(this);\n    this._isolated = true;\n    const state = this.state;\n\n    const ret = fn(this);\n\n    this.state = state;\n    delete this._isolated;\n\n    return ret;\n  }\n\n  /** */\n  doSkipInvalid (ch: string, flags: AppendFlags={}, checkTail?: TailDetails): boolean {\n    return this.skipInvalid;\n  }\n\n  /**\n    Prepares string before mask processing\n    @protected\n  */\n  doPrepare (str: string, flags: AppendFlags={}): string | [string, ChangeDetails] {\n    return this.prepare ?\n      this.prepare(str, this, flags) :\n      str;\n  }\n\n  /**\n    Validates if value is acceptable\n    @protected\n  */\n  doValidate (flags: AppendFlags): boolean {\n    return (!this.validate || this.validate(this.value, this, flags)) &&\n      (!this.parent || this.parent.doValidate(flags));\n  }\n\n  /**\n    Does additional processing in the end of editing\n    @protected\n  */\n  doCommit () {\n    if (this.commit) this.commit(this.value, this);\n  }\n\n  /** */\n  doFormat (value: any): string {\n    return this.format ? this.format(value, this) : value;\n  }\n\n  /** */\n  doParse (str: string): any {\n    return this.parse ? this.parse(str, this) : str;\n  }\n\n  /** */\n  splice (start: number, deleteCount: number, inserted: string, removeDirection: Direction, flags: AppendFlags = { input: true }): ChangeDetails {\n    const tailPos: number = start + deleteCount;\n    const tail: TailDetails = this.extractTail(tailPos);\n\n    const eagerRemove = this.eager === true || this.eager === 'remove';\n\n    let oldRawValue;\n    if (eagerRemove)  {\n      removeDirection = forceDirection(removeDirection);\n      oldRawValue = this.extractInput(0, tailPos, {raw: true});\n    }\n\n    let startChangePos: number = start;\n    const details: ChangeDetails = new ChangeDetails();\n\n    // if it is just deletion without insertion\n    if (removeDirection !== DIRECTION.NONE) {\n      startChangePos = this.nearestInputPos(start,\n        deleteCount > 1 && start !== 0 && !eagerRemove ?\n        DIRECTION.NONE :\n        removeDirection\n      );\n\n      // adjust tailShift if start was aligned\n      details.tailShift = startChangePos - start;\n    }\n\n    details.aggregate(this.remove(startChangePos));\n\n    if (eagerRemove && removeDirection !== DIRECTION.NONE && oldRawValue === this.rawInputValue) {\n      if (removeDirection === DIRECTION.FORCE_LEFT) {\n        let valLength;\n        while (oldRawValue === this.rawInputValue && (valLength = this.value.length)) {\n          details\n            .aggregate(new ChangeDetails({ tailShift: -1 }))\n            .aggregate(this.remove(valLength-1));\n        }\n      } else if (removeDirection === DIRECTION.FORCE_RIGHT) {\n        tail.unshift();\n      }\n    }\n\n    return details.aggregate(this.append(inserted, flags, tail));\n  }\n\n  maskEquals (mask: any): boolean {\n    return this.mask === mask;\n  }\n\n  typedValueEquals (value: any): boolean {\n    const tval = this.typedValue;\n\n    return value === tval ||\n      Masked.EMPTY_VALUES.includes(value) && Masked.EMPTY_VALUES.includes(tval) ||\n      this.doFormat(value) === this.doFormat(this.typedValue);\n  }\n}\nMasked.DEFAULTS = {\n  format: String,\n  parse: v => v,\n  skipInvalid: true,\n};\nMasked.EMPTY_VALUES = [undefined, null, ''];\n\n\nIMask.Masked = Masked;\n","// @flow\nimport { isString } from '../core/utils.js';\nimport type Masked from './base.js';\nimport { type Mask } from './base.js';\nimport IMask from '../core/holder.js';\n\n\n/** Get Masked class by mask type */\nexport\nfunction maskedClass (mask: Mask): Class<Masked<*>> {\n  if (mask == null) {\n    throw new Error('mask property should be defined');\n  }\n\n  // $FlowFixMe\n  if (mask instanceof RegExp) return IMask.MaskedRegExp;\n  // $FlowFixMe\n  if (isString(mask)) return IMask.MaskedPattern;\n  // $FlowFixMe\n  if (mask instanceof Date || mask === Date) return IMask.MaskedDate;\n  // $FlowFixMe\n  if (mask instanceof Number || typeof mask === 'number' || mask === Number) return IMask.MaskedNumber;\n  // $FlowFixMe\n  if (Array.isArray(mask) || mask === Array) return IMask.MaskedDynamic;\n  // $FlowFixMe\n  if (IMask.Masked && mask.prototype instanceof IMask.Masked) return mask;\n  // $FlowFixMe\n  if (mask instanceof IMask.Masked) return mask.constructor;\n  // $FlowFixMe\n  if (mask instanceof Function) return IMask.MaskedFunction;\n\n  console.warn('Mask not found for mask', mask);  // eslint-disable-line no-console\n  // $FlowFixMe\n  return IMask.Masked;\n}\n\n/** Creates new {@link Masked} depending on mask type */\nexport default\nfunction createMask (opts: {mask: Mask} | Masked<*>): Masked<*> {\n  // $FlowFixMe\n  if (IMask.Masked && (opts instanceof IMask.Masked)) return opts;\n\n  opts = {...opts};\n  const mask = opts.mask;\n\n  // $FlowFixMe\n  if (IMask.Masked && (mask instanceof IMask.Masked)) return mask;\n\n  const MaskedClass = maskedClass(mask);\n  if (!MaskedClass) throw new Error('Masked class is not found for provided mask, appropriate module needs to be import manually before creating mask.');\n  return new MaskedClass(opts);\n}\n\n\nIMask.createMask = createMask;\n","// @flow\nimport createMask from '../factory.js';\nimport type Masked from '../base.js';\nimport type MaskedPattern from '../pattern.js';\nimport { type TailDetails } from '../../core/tail-details.js';\nimport { type Mask, type ExtractFlags, type AppendFlags } from '../base.js';\nimport ChangeDetails from '../../core/change-details.js';\nimport { DIRECTION, type Direction } from '../../core/utils.js';\nimport { type PatternBlock } from './block.js';\n\n\nexport\ntype Definitions = {[string]: Mask};\n\n/** */\ntype PatternInputDefinitionOptions = {\n  parent: $PropertyType<PatternInputDefinition, 'parent'>,\n  mask: Mask,\n  isOptional: $PropertyType<PatternInputDefinition, 'isOptional'>,\n  lazy: $PropertyType<PatternInputDefinition, 'lazy'>,\n  eager: $PropertyType<PatternInputDefinition, 'eager'>,\n  placeholderChar: $PropertyType<PatternInputDefinition, 'placeholderChar'>,\n};\n\ntype PatternInputDefinitionState = {\n  masked: *,\n  isFilled: boolean,\n};\n\nexport\nconst DEFAULT_INPUT_DEFINITIONS: { [string]: RegExp } = {\n  '0': /\\d/,\n  'a': /[\\u0041-\\u005A\\u0061-\\u007A\\u00AA\\u00B5\\u00BA\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0\\u08A2-\\u08AC\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097F\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA697\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA80-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/,  // http://stackoverflow.com/a/22075070\n  '*': /./\n};\n\n\n/** */\nexport default\nclass PatternInputDefinition implements PatternBlock {\n  /** */\n  +masked: Masked<*>;\n  /** */\n  parent: Masked<*>;\n  /** */\n  isOptional: boolean;\n  /** */\n  isFilled: boolean;\n  /** */\n  lazy: $PropertyType<MaskedPattern, 'lazy'>;\n  /** */\n  eager: $PropertyType<Masked<string>, 'eager'>;\n  /** */\n  placeholderChar: $PropertyType<MaskedPattern, 'placeholderChar'>;\n\n\n  constructor(opts: PatternInputDefinitionOptions) {\n    const {mask, ...blockOpts} = opts;\n\n    this.masked = createMask({mask});\n    Object.assign(this, blockOpts);\n  }\n\n  reset () {\n    this.isFilled = false;\n    this.masked.reset();\n  }\n\n  remove (fromPos?: number=0, toPos?: number=this.value.length): ChangeDetails {\n    if (fromPos === 0 && toPos >= 1) {\n      this.isFilled = false;\n      return this.masked.remove(fromPos, toPos);\n    }\n\n    return new ChangeDetails();\n  }\n\n  get value (): string {\n    return this.masked.value ||\n      (this.isFilled && !this.isOptional ?\n        this.placeholderChar :\n        '');\n  }\n\n  get unmaskedValue (): string {\n    return this.masked.unmaskedValue;\n  }\n\n  get isComplete (): boolean {\n    return Boolean(this.masked.value) || this.isOptional;\n  }\n\n  _appendChar (ch: string, flags: AppendFlags={}): ChangeDetails {\n    if (this.isFilled) return new ChangeDetails();\n\n    const state = this.masked.state;\n    // simulate input\n    const details = this.masked._appendChar(ch, flags);\n\n    if (details.inserted && this.doValidate(flags) === false) {\n      details.inserted = details.rawInserted = '';\n      this.masked.state = state;\n    }\n\n    if (!details.inserted && !this.isOptional && !this.lazy && !flags.input) {\n      details.inserted = this.placeholderChar;\n    }\n    details.skip = !details.inserted && !this.isOptional;\n    this.isFilled = Boolean(details.inserted);\n\n    return details;\n  }\n\n  append (...args: *): ChangeDetails {\n    // TODO probably should be done via _appendChar\n    return this.masked.append(...args);\n  }\n\n  _appendPlaceholder (): ChangeDetails {\n    const details = new ChangeDetails();\n\n    if (this.isFilled || this.isOptional) return details;\n\n    this.isFilled = true;\n    details.inserted = this.placeholderChar;\n    return details;\n  }\n\n  _appendEager (): ChangeDetails {\n    return new ChangeDetails();\n  }\n\n  extractTail (...args: *): TailDetails {\n    return this.masked.extractTail(...args);\n  }\n\n  appendTail (...args: *): ChangeDetails {\n    return this.masked.appendTail(...args);\n  }\n\n  extractInput (fromPos?: number=0, toPos?: number=this.value.length, flags?: ExtractFlags): string {\n    return this.masked.extractInput(fromPos, toPos, flags);\n  }\n\n  nearestInputPos (cursorPos: number, direction: Direction=DIRECTION.NONE): number {\n    const minPos = 0;\n    const maxPos = this.value.length;\n    const boundPos = Math.min(Math.max(cursorPos, minPos), maxPos);\n\n    switch (direction) {\n      case DIRECTION.LEFT:\n      case DIRECTION.FORCE_LEFT:\n        return this.isComplete ? boundPos : minPos;\n      case DIRECTION.RIGHT:\n      case DIRECTION.FORCE_RIGHT:\n        return this.isComplete ? boundPos : maxPos;\n      case DIRECTION.NONE:\n      default: return boundPos;\n    }\n  }\n\n  doValidate (...args: *): boolean {\n    return this.masked.doValidate(...args) && (\n      !this.parent || this.parent.doValidate(...args));\n  }\n\n  doCommit () {\n    this.masked.doCommit();\n  }\n\n  get state (): PatternInputDefinitionState {\n    return {\n      masked: this.masked.state,\n      isFilled: this.isFilled,\n    };\n  }\n\n  set state (state: PatternInputDefinitionState) {\n    this.masked.state = state.masked;\n    this.isFilled = state.isFilled;\n  }\n}\n","// @flow\nimport ChangeDetails from '../../core/change-details.js';\nimport { DIRECTION, type Direction, isString } from '../../core/utils.js';\nimport { type TailDetails } from '../../core/tail-details.js';\nimport ContinuousTailDetails from '../../core/continuous-tail-details.js';\nimport { type ExtractFlags, type AppendFlags, type MaskedState } from '../base.js';\nimport { type PatternBlock } from './block.js';\n\n\n/** */\ntype PatternFixedDefinitionOptions = {\n  char: $PropertyType<PatternFixedDefinition, 'char'>,\n  isUnmasking?: $PropertyType<PatternFixedDefinition, 'isUnmasking'>,\n};\n\ntype PatternFixedDefinitionState = {|\n  ...MaskedState,\n  _isRawInput: ?boolean,\n|};\n\nexport default\nclass PatternFixedDefinition implements PatternBlock {\n  /** */\n  _value: string;\n  /** */\n  char: string;\n  /** */\n  isUnmasking: ?boolean;\n  /** */\n  eager: boolean | 'remove' | 'append';\n  /** */\n  _isRawInput: ?boolean;\n  /** */\n  isFixed: boolean;\n\n  constructor(opts: PatternFixedDefinitionOptions) {\n    Object.assign(this, opts);\n    this._value = '';\n    this.isFixed = true;\n  }\n\n  get value (): string {\n    return this._value;\n  }\n\n  get unmaskedValue (): string {\n    return this.isUnmasking ? this.value : '';\n  }\n\n  reset () {\n    this._isRawInput = false;\n    this._value = '';\n  }\n\n  remove (fromPos?: number=0, toPos?: number=this._value.length): ChangeDetails {\n    this._value = this._value.slice(0, fromPos) + this._value.slice(toPos);\n    if (!this._value) this._isRawInput = false;\n\n    return new ChangeDetails();\n  }\n\n  nearestInputPos (cursorPos: number, direction: Direction=DIRECTION.NONE): number {\n    const minPos = 0;\n    const maxPos = this._value.length;\n\n    switch (direction) {\n      case DIRECTION.LEFT:\n      case DIRECTION.FORCE_LEFT:\n        return minPos;\n      case DIRECTION.NONE:\n      case DIRECTION.RIGHT:\n      case DIRECTION.FORCE_RIGHT:\n      default:\n        return maxPos;\n    }\n  }\n\n  extractInput (fromPos?: number=0, toPos?: number=this._value.length, flags?: ExtractFlags={}): string {\n    return flags.raw && this._isRawInput && this._value.slice(fromPos, toPos) || '';\n  }\n\n  get isComplete (): boolean {\n    return true;\n  }\n\n  get isFilled (): boolean {\n    return Boolean(this._value);\n  }\n\n  _appendChar (ch: string, flags?: AppendFlags={}): ChangeDetails {\n    const details = new ChangeDetails();\n\n    if (this._value) return details;\n    const appendEager = this.eager === true || this.eager === 'append';\n\n    const appended = this.char === ch;\n    const isResolved = appended && (this.isUnmasking || flags.input || flags.raw) && (!flags.raw || !appendEager) && !flags.tail;\n    if (isResolved) details.rawInserted = this.char;\n    this._value = details.inserted = this.char;\n    this._isRawInput = isResolved && (flags.raw || flags.input);\n\n    return details;\n  }\n\n  _appendEager (): ChangeDetails {\n    return this._appendChar(this.char, { tail: true });\n  }\n\n  _appendPlaceholder (): ChangeDetails {\n    const details = new ChangeDetails();\n    if (this._value) return details;\n\n    this._value = details.inserted = this.char;\n    return details;\n  }\n\n  extractTail (fromPos?: number=0, toPos?: number=this.value.length): TailDetails {\n    return new ContinuousTailDetails('');\n  }\n\n  // $FlowFixMe no ideas\n  appendTail (tail: string | String | TailDetails): ChangeDetails {\n    if (isString(tail)) tail = new ContinuousTailDetails(String(tail));\n\n    return tail.appendTo(this);\n  }\n\n  append (str: string, flags?: AppendFlags, tail?: TailDetails): ChangeDetails {\n    const details = this._appendChar(str[0], flags);\n\n    if (tail != null) {\n      details.tailShift += this.appendTail(tail).tailShift;\n    }\n\n    return details;\n  }\n\n  doCommit () {}\n\n  get state (): PatternFixedDefinitionState {\n    return {\n      _value: this._value,\n      _isRawInput: this._isRawInput,\n    };\n  }\n\n  set state (state: PatternFixedDefinitionState) {\n    Object.assign(this, state);\n  }\n}\n","// @flow\nimport type { TailDetails, AppendTail } from '../../core/tail-details.js';\nimport ChangeDetails from '../../core/change-details.js';\nimport { isString } from '../../core/utils.js';\nimport ContinuousTailDetails from '../../core/continuous-tail-details.js';\nimport IMask from '../../core/holder.js';\n\n\ntype ChunksTailState = {\n  chunks: $PropertyType<ChunksTailDetails, 'chunks'>,\n  from: $PropertyType<ChunksTailDetails, 'from'>,\n  stop?: $PropertyType<ChunksTailDetails, 'stop'>,\n  blockIndex?: $PropertyType<ChunksTailDetails, 'blockIndex'>,\n};\n\nexport default\nclass ChunksTailDetails implements TailDetails {\n  chunks: Array<TailDetails>;\n  from: number;\n  stop: ?number;\n  /** */\n  blockIndex: ?number;\n\n  constructor (chunks?: Array<TailDetails>=[], from?: number=0) {\n    this.chunks = chunks;\n    this.from = from;\n  }\n\n  toString (): string {\n    return this.chunks.map(String).join('');\n  }\n\n  // $FlowFixMe no ideas\n  extend (tailChunk: string | String | TailDetails): void {\n    if (!String(tailChunk)) return;\n    if (isString(tailChunk)) tailChunk = new ContinuousTailDetails(String(tailChunk));\n\n    const lastChunk = this.chunks[this.chunks.length-1];\n    const extendLast = lastChunk &&\n      // if stops are same or tail has no stop\n      (lastChunk.stop === tailChunk.stop || tailChunk.stop == null) &&\n      // if tail chunk goes just after last chunk\n      tailChunk.from === (lastChunk.from + lastChunk.toString().length);\n\n    if (tailChunk instanceof ContinuousTailDetails) {\n      // check the ability to extend previous chunk\n      if (extendLast) {\n        // extend previous chunk\n        lastChunk.extend(tailChunk.toString());\n      } else {\n        // append new chunk\n        this.chunks.push(tailChunk);\n      }\n    } else if (tailChunk instanceof ChunksTailDetails) {\n      if (tailChunk.stop == null) {\n        // unwrap floating chunks to parent, keeping `from` pos\n        let firstTailChunk;\n        while (tailChunk.chunks.length && tailChunk.chunks[0].stop == null) {\n          firstTailChunk = tailChunk.chunks.shift();\n          firstTailChunk.from += tailChunk.from;\n          this.extend(firstTailChunk);\n        }\n      }\n\n      // if tail chunk still has value\n      if (tailChunk.toString()) {\n        // if chunks contains stops, then popup stop to container\n        tailChunk.stop = tailChunk.blockIndex;\n        this.chunks.push(tailChunk);\n      }\n    }\n  }\n\n  appendTo (masked: AppendTail): ChangeDetails {\n    // $FlowFixMe\n    if (!(masked instanceof IMask.MaskedPattern)) {\n      const tail = new ContinuousTailDetails(this.toString());\n      return tail.appendTo(masked);\n    }\n\n    const details = new ChangeDetails();\n\n    for (let ci=0; ci < this.chunks.length && !details.skip; ++ci) {\n      const chunk = this.chunks[ci];\n\n      const lastBlockIter = masked._mapPosToBlock(masked.value.length);\n      const stop = chunk.stop;\n      let chunkBlock;\n      if (stop != null &&\n        // if block not found or stop is behind lastBlock\n        (!lastBlockIter || lastBlockIter.index <= stop)\n      ) {\n        if (\n          chunk instanceof ChunksTailDetails ||\n          // for continuous block also check if stop is exist\n          masked._stops.indexOf(stop) >= 0\n        ) {\n          details.aggregate(masked._appendPlaceholder(stop));\n        }\n        chunkBlock = chunk instanceof ChunksTailDetails && masked._blocks[stop];\n      }\n\n      if (chunkBlock) {\n        const tailDetails = chunkBlock.appendTail(chunk);\n        tailDetails.skip = false; // always ignore skip, it will be set on last\n        details.aggregate(tailDetails);\n        masked._value += tailDetails.inserted;\n\n        // get not inserted chars\n        const remainChars = chunk.toString().slice(tailDetails.rawInserted.length);\n        if (remainChars) details.aggregate(masked.append(remainChars, { tail: true }));\n      } else {\n        details.aggregate(masked.append(chunk.toString(), { tail: true }));\n      }\n    };\n\n    return details;\n  }\n\n  get state (): ChunksTailState {\n    return {\n      chunks: this.chunks.map(c => c.state),\n      from: this.from,\n      stop: this.stop,\n      blockIndex: this.blockIndex,\n    };\n  }\n\n  set state (state: ChunksTailState) {\n    const { chunks, ...props } = state;\n    Object.assign(this, props);\n    this.chunks = chunks.map(cstate => {\n      const chunk = \"chunks\" in cstate ?\n        new ChunksTailDetails() :\n        new ContinuousTailDetails();\n      // $FlowFixMe already checked above\n      chunk.state = cstate;\n      return chunk;\n    });\n  }\n\n  unshift (beforePos?: number): string {\n    if (!this.chunks.length || (beforePos != null && this.from >= beforePos)) return '';\n\n    const chunkShiftPos = beforePos != null ? beforePos - this.from : beforePos;\n    let ci=0;\n    while (ci < this.chunks.length) {\n      const chunk = this.chunks[ci];\n      const shiftChar = chunk.unshift(chunkShiftPos);\n\n      if (chunk.toString()) {\n        // chunk still contains value\n        // but not shifted - means no more available chars to shift\n        if (!shiftChar) break;\n        ++ci;\n      } else {\n        // clean if chunk has no value\n        this.chunks.splice(ci, 1);\n      }\n\n      if (shiftChar) return shiftChar;\n    }\n\n    return '';\n  }\n\n  shift (): string {\n    if (!this.chunks.length) return '';\n\n    let ci=this.chunks.length-1;\n    while (0 <= ci) {\n      const chunk = this.chunks[ci];\n      const shiftChar = chunk.shift();\n\n      if (chunk.toString()) {\n        // chunk still contains value\n        // but not shifted - means no more available chars to shift\n        if (!shiftChar) break;\n        --ci;\n      } else {\n        // clean if chunk has no value\n        this.chunks.splice(ci, 1);\n      }\n\n      if (shiftChar) return shiftChar;\n    }\n\n    return '';\n  }\n}\n","// @flow\nimport { DIRECTION } from '../../core/utils.js';\nimport type MaskedPattern from '../pattern.js';\nimport { type PatternBlock } from './block.js';\n\n\ntype PatternCursorState = { offset: number, index: number, ok: boolean };\n\nexport default\nclass PatternCursor {\n  masked: MaskedPattern;\n  offset: number;\n  index: number;\n  ok: boolean;\n  _log: PatternCursorState[];\n\n  constructor (masked: MaskedPattern, pos: number) {\n    this.masked = masked;\n    this._log = [];\n\n    const { offset, index } = masked._mapPosToBlock(pos) || (\n      pos < 0 ?\n        // first\n        { index: 0, offset: 0 } :\n        // last\n        { index: this.masked._blocks.length, offset: 0 }\n    );\n    this.offset = offset;\n    this.index = index;\n    this.ok = false;\n  }\n\n  get block (): PatternBlock {\n    return this.masked._blocks[this.index];\n  }\n\n  get pos (): number {\n    return this.masked._blockStartPos(this.index) + this.offset;\n  }\n\n  get state (): PatternCursorState {\n    return { index: this.index, offset: this.offset, ok: this.ok };\n  }\n\n  set state (s: PatternCursorState) {\n    Object.assign(this, s);\n  }\n\n  pushState () {\n    this._log.push(this.state);\n  }\n\n  popState (): PatternCursorState {\n    const s = this._log.pop();\n    this.state = s;\n    return s;\n  }\n\n  bindBlock () {\n    if (this.block) return;\n    if (this.index < 0) {\n      this.index = 0;\n      this.offset = 0;\n    }\n    if (this.index >= this.masked._blocks.length) {\n      this.index = this.masked._blocks.length - 1;\n      this.offset = this.block.value.length;\n    }\n  }\n\n  _pushLeft(fn: () => ?boolean): boolean {\n    this.pushState();\n    for (this.bindBlock(); 0<=this.index; --this.index, this.offset=this.block?.value.length || 0) {\n      if (fn()) return this.ok = true;\n    }\n\n    return this.ok = false;\n  }\n\n  _pushRight (fn: () => ?boolean): boolean {\n    this.pushState();\n    for (this.bindBlock(); this.index<this.masked._blocks.length; ++this.index, this.offset=0) {\n      if (fn()) return this.ok = true;\n    }\n\n    return this.ok = false;\n  }\n\n  pushLeftBeforeFilled (): boolean {\n    return this._pushLeft(() => {\n      if (this.block.isFixed || !this.block.value) return;\n\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.FORCE_LEFT);\n      if (this.offset !== 0) return true;\n    });\n  }\n\n  pushLeftBeforeInput (): boolean {\n    // cases:\n    // filled input: 00|\n    // optional empty input: 00[]|\n    // nested block: XX<[]>|\n    return this._pushLeft(() => {\n      if (this.block.isFixed) return;\n\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.LEFT);\n      return true;\n    });\n  }\n\n  pushLeftBeforeRequired (): boolean {\n    return this._pushLeft(() => {\n      if (this.block.isFixed || this.block.isOptional && !this.block.value) return;\n\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.LEFT);\n      return true;\n    });\n  }\n\n  pushRightBeforeFilled (): boolean {\n    return this._pushRight(() => {\n      if (this.block.isFixed || !this.block.value) return;\n\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.FORCE_RIGHT);\n      if (this.offset !== this.block.value.length) return true;\n    });\n  }\n\n  pushRightBeforeInput (): boolean {\n    return this._pushRight(() => {\n      if (this.block.isFixed) return;\n\n      // const o = this.offset;\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.NONE);\n      // HACK cases like (STILL DOES NOT WORK FOR NESTED)\n      // aa|X\n      // aa<X|[]>X_    - this will not work\n      // if (o && o === this.offset && this.block instanceof PatternInputDefinition) continue;\n      return true;\n    });\n  }\n\n  pushRightBeforeRequired (): boolean {\n    return this._pushRight(() => {\n      if (this.block.isFixed || this.block.isOptional && !this.block.value) return;\n\n      // TODO check |[*]XX_\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.NONE);\n      return true;\n    });\n  }\n}\n","// @flow\nimport Masked, { type MaskedOptions } from './base.js';\nimport IMask from '../core/holder.js';\n\n\n/** Masking by RegExp */\nexport default\nclass MaskedRegExp extends Masked<RegExp> {\n  /**\n    @override\n    @param {Object} opts\n  */\n  _update (opts: $Shape<MaskedOptions<RegExp>>) {\n    if (opts.mask) opts.validate = (value) => value.search(opts.mask) >= 0;\n    super._update(opts);\n  }\n}\n\n\nIMask.MaskedRegExp = MaskedRegExp;\n","// @flow\nimport {DIRECTION, type Direction, forceDirection} from '../core/utils.js';\nimport ChangeDetails from '../core/change-details.js';\nimport Masked, { type AppendFlags, type ExtractFlags, type MaskedOptions, type MaskedState } from './base.js';\nimport PatternInputDefinition, { DEFAULT_INPUT_DEFINITIONS, type Definitions } from './pattern/input-definition.js';\nimport PatternFixedDefinition from './pattern/fixed-definition.js';\nimport { type TailDetails } from '../core/tail-details.js';\nimport ChunksTailDetails from './pattern/chunk-tail-details.js';\nimport ContinuousTailDetails from '../core/continuous-tail-details.js';\nimport { type PatternBlock } from './pattern/block.js';\nimport PatternCursor from './pattern/cursor.js';\nimport createMask from './factory.js';\nimport IMask from '../core/holder.js';\nimport './regexp.js';  // support for default definitions which are regexp's\n\n\ntype MaskedPatternOptions = {\n  ...MaskedOptions<string>,\n  definitions?: $PropertyType<MaskedPattern, 'definitions'>,\n  blocks?: $PropertyType<MaskedPattern, 'blocks'>,\n  placeholderChar?: $PropertyType<MaskedPattern, 'placeholderChar'>,\n  lazy?: $PropertyType<MaskedPattern, 'lazy'>,\n};\n\ntype MaskedPatternState = {|\n  ...MaskedState,\n  _blocks: Array<*>,\n|};\n\ntype BlockPosData = {\n  index: number,\n  offset: number,\n};\n\n/**\n  Pattern mask\n  @param {Object} opts\n  @param {Object} opts.blocks\n  @param {Object} opts.definitions\n  @param {string} opts.placeholderChar\n  @param {boolean} opts.lazy\n*/\nexport default\nclass MaskedPattern extends Masked<string> {\n  static DEFAULTS: any;\n  static STOP_CHAR: string;\n  static ESCAPE_CHAR: string;\n  static InputDefinition: Class<PatternInputDefinition>;\n  static FixedDefinition: Class<PatternFixedDefinition>;\n\n  /** */\n  blocks: {[string]: MaskedOptions<any>};\n  /** */\n  definitions: Definitions;\n  /** Single char for empty input */\n  placeholderChar: string;\n  /** Show placeholder only when needed */\n  lazy: boolean;\n  _blocks: Array<PatternBlock>;\n  _maskedBlocks: {[string]: Array<number>};\n  _stops: Array<number>;\n\n  constructor (opts: any={}) {  // TODO type $Shape<MaskedPatternOptions>={} does not work\n    opts.definitions = Object.assign({}, DEFAULT_INPUT_DEFINITIONS, opts.definitions);\n    super({\n      ...MaskedPattern.DEFAULTS,\n      ...opts,\n    });\n  }\n\n  /**\n    @override\n    @param {Object} opts\n  */\n  _update (opts: $Shape<MaskedPatternOptions>={}) {\n    opts.definitions = Object.assign({}, this.definitions, opts.definitions);\n    super._update(opts);\n    this._rebuildMask();\n  }\n\n  /** */\n  _rebuildMask () {\n    const defs = this.definitions;\n    this._blocks = [];\n    this._stops = [];\n    this._maskedBlocks = {};\n\n    let pattern = this.mask;\n    if (!pattern || !defs) return;\n\n    let unmaskingBlock = false;\n    let optionalBlock = false;\n\n    for (let i=0; i<pattern.length; ++i) {\n      if (this.blocks) {\n        const p = pattern.slice(i);\n        const bNames = Object.keys(this.blocks).filter(bName => p.indexOf(bName) === 0);\n        // order by key length\n        bNames.sort((a, b) => b.length - a.length);\n        // use block name with max length\n        const bName = bNames[0];\n        if (bName) {\n          // $FlowFixMe no ideas\n          const maskedBlock = createMask({\n            parent: this,\n            lazy: this.lazy,\n            eager: this.eager,\n            placeholderChar: this.placeholderChar,\n            overwrite: this.overwrite,\n            ...this.blocks[bName],\n          });\n\n          if (maskedBlock) {\n            this._blocks.push(maskedBlock);\n\n            // store block index\n            if (!this._maskedBlocks[bName]) this._maskedBlocks[bName] = [];\n            this._maskedBlocks[bName].push(this._blocks.length - 1);\n          }\n\n          i += bName.length - 1;\n          continue;\n        }\n      }\n\n      let char = pattern[i];\n      let isInput = char in defs;\n\n      if (char === MaskedPattern.STOP_CHAR) {\n        this._stops.push(this._blocks.length);\n        continue;\n      }\n\n      if (char === '{' || char === '}') {\n        unmaskingBlock = !unmaskingBlock;\n        continue;\n      }\n\n      if (char === '[' || char === ']') {\n        optionalBlock = !optionalBlock;\n        continue;\n      }\n\n      if (char === MaskedPattern.ESCAPE_CHAR) {\n        ++i;\n        char = pattern[i];\n        if (!char) break;\n        isInput = false;\n      }\n\n      const def = isInput ?\n        new PatternInputDefinition({\n          parent: this,\n          lazy: this.lazy,\n          eager: this.eager,\n          placeholderChar: this.placeholderChar,\n          mask: defs[char],\n          isOptional: optionalBlock,\n        }) :\n        new PatternFixedDefinition({\n          char,\n          eager: this.eager,\n          isUnmasking: unmaskingBlock,\n        });\n\n      this._blocks.push(def);\n    }\n  }\n\n  /**\n    @override\n  */\n  get state (): MaskedPatternState {\n    return {\n      ...super.state,\n      _blocks: this._blocks.map(b => b.state),\n    };\n  }\n\n  set state (state: MaskedPatternState) {\n    const {_blocks, ...maskedState} = state;\n    this._blocks.forEach((b, bi) => b.state = _blocks[bi]);\n    super.state = maskedState;\n  }\n\n  /**\n    @override\n  */\n  reset () {\n    super.reset();\n    this._blocks.forEach(b => b.reset());\n  }\n\n  /**\n    @override\n  */\n  get isComplete (): boolean {\n    return this._blocks.every(b => b.isComplete);\n  }\n\n  /**\n    @override\n  */\n  get isFilled (): boolean {\n    return this._blocks.every(b => b.isFilled);\n  }\n\n  get isFixed (): boolean {\n    return this._blocks.every(b => b.isFixed);\n  }\n\n  get isOptional (): boolean {\n    return this._blocks.every(b => b.isOptional);\n  }\n\n  /**\n    @override\n  */\n  doCommit () {\n    this._blocks.forEach(b => b.doCommit());\n    super.doCommit();\n  }\n\n  /**\n    @override\n  */\n  get unmaskedValue (): string {\n    return this._blocks.reduce((str, b) => str += b.unmaskedValue, '');\n  }\n\n  set unmaskedValue (unmaskedValue: string) {\n    super.unmaskedValue = unmaskedValue;\n  }\n\n  /**\n    @override\n  */\n  get value (): string {\n    // TODO return _value when not in change?\n    return this._blocks.reduce((str, b) => str += b.value, '');\n  }\n\n  set value (value: string) {\n    super.value = value;\n  }\n\n  /**\n    @override\n  */\n  appendTail (tail: string | String | TailDetails): ChangeDetails {\n    return super.appendTail(tail).aggregate(this._appendPlaceholder());\n  }\n\n  /**\n    @override\n  */\n  _appendEager (): ChangeDetails {\n    const details = new ChangeDetails();\n\n    let startBlockIndex = this._mapPosToBlock(this.value.length)?.index;\n    if (startBlockIndex == null) return details;\n\n    // TODO test if it works for nested pattern masks\n    if (this._blocks[startBlockIndex].isFilled) ++startBlockIndex;\n\n    for (let bi=startBlockIndex; bi<this._blocks.length; ++bi) {\n      const d = this._blocks[bi]._appendEager();\n      if (!d.inserted) break;\n\n      details.aggregate(d);\n    }\n\n    return details;\n  }\n\n  /**\n    @override\n  */\n  _appendCharRaw (ch: string, flags: AppendFlags={}): ChangeDetails {\n    const blockIter = this._mapPosToBlock(this.value.length);\n    const details = new ChangeDetails();\n    if (!blockIter) return details;\n\n    for (let bi=blockIter.index; ; ++bi) {\n      const block = this._blocks[bi];\n      if (!block) break;\n\n      const blockDetails = block._appendChar(ch, { ...flags, _beforeTailState: flags._beforeTailState?._blocks?.[bi] });\n\n      const skip = blockDetails.skip;\n      details.aggregate(blockDetails);\n\n      if (skip || blockDetails.rawInserted) break; // go next char\n    }\n\n    return details;\n  }\n\n  /**\n    @override\n  */\n  extractTail (fromPos?: number=0, toPos?: number=this.value.length): ChunksTailDetails {\n    const chunkTail = new ChunksTailDetails();\n    if (fromPos === toPos) return chunkTail;\n\n    this._forEachBlocksInRange(fromPos, toPos, (b, bi, bFromPos, bToPos) => {\n      const blockChunk = b.extractTail(bFromPos, bToPos);\n      blockChunk.stop = this._findStopBefore(bi);\n      blockChunk.from = this._blockStartPos(bi);\n      if (blockChunk instanceof ChunksTailDetails) blockChunk.blockIndex = bi;\n\n      chunkTail.extend(blockChunk);\n    });\n\n    return chunkTail;\n  }\n\n  /**\n    @override\n  */\n  extractInput (fromPos?: number=0, toPos?: number=this.value.length, flags: ExtractFlags={}): string {\n    if (fromPos === toPos) return '';\n\n    let input = '';\n\n    this._forEachBlocksInRange(fromPos, toPos, (b, _, fromPos, toPos) => {\n      input += b.extractInput(fromPos, toPos, flags);\n    });\n\n    return input;\n  }\n\n  _findStopBefore (blockIndex: number): ?number {\n    let stopBefore;\n    for (let si=0; si<this._stops.length; ++si) {\n      const stop = this._stops[si];\n      if (stop <= blockIndex) stopBefore = stop;\n      else break;\n    }\n    return stopBefore;\n  }\n\n  /** Appends placeholder depending on laziness */\n  _appendPlaceholder (toBlockIndex: ?number): ChangeDetails {\n    const details = new ChangeDetails();\n    if (this.lazy && toBlockIndex == null) return details;\n\n    const startBlockIter = this._mapPosToBlock(this.value.length);\n    if (!startBlockIter) return details;\n\n    const startBlockIndex = startBlockIter.index;\n    const endBlockIndex = toBlockIndex != null ? toBlockIndex : this._blocks.length;\n\n    this._blocks.slice(startBlockIndex, endBlockIndex)\n      .forEach(b => {\n        if (!b.lazy || toBlockIndex != null) {\n          // $FlowFixMe `_blocks` may not be present\n          const args = b._blocks != null ? [b._blocks.length] : [];\n          const bDetails = b._appendPlaceholder(...args);\n          this._value += bDetails.inserted;\n          details.aggregate(bDetails);\n        }\n      });\n\n    return details;\n  }\n\n  /** Finds block in pos */\n  _mapPosToBlock (pos: number): ?BlockPosData {\n    let accVal = '';\n    for (let bi=0; bi<this._blocks.length; ++bi) {\n      const block = this._blocks[bi];\n      const blockStartPos = accVal.length;\n\n      accVal += block.value;\n\n      if (pos <= accVal.length) {\n        return {\n          index: bi,\n          offset: pos - blockStartPos,\n        };\n      }\n    }\n  }\n\n  /** */\n  _blockStartPos (blockIndex: number): number {\n    return this._blocks\n      .slice(0, blockIndex)\n      .reduce((pos, b) => pos += b.value.length, 0);\n  }\n\n  /** */\n  _forEachBlocksInRange (fromPos: number, toPos: number=this.value.length, fn: (block: PatternBlock, blockIndex: number, fromPos: number, toPos: number) => void) {\n    const fromBlockIter = this._mapPosToBlock(fromPos);\n\n    if (fromBlockIter) {\n      const toBlockIter = this._mapPosToBlock(toPos);\n      // process first block\n      const isSameBlock = toBlockIter && fromBlockIter.index === toBlockIter.index;\n      const fromBlockStartPos = fromBlockIter.offset;\n      const fromBlockEndPos = toBlockIter && isSameBlock ?\n        toBlockIter.offset :\n        this._blocks[fromBlockIter.index].value.length;\n      fn(this._blocks[fromBlockIter.index], fromBlockIter.index, fromBlockStartPos, fromBlockEndPos);\n\n      if (toBlockIter && !isSameBlock) {\n        // process intermediate blocks\n        for (let bi=fromBlockIter.index+1; bi<toBlockIter.index; ++bi) {\n          fn(this._blocks[bi], bi, 0, this._blocks[bi].value.length);\n        }\n\n        // process last block\n        fn(this._blocks[toBlockIter.index], toBlockIter.index, 0, toBlockIter.offset);\n      }\n    }\n  }\n\n  /**\n    @override\n  */\n  remove (fromPos: number=0, toPos: number=this.value.length): ChangeDetails {\n    const removeDetails = super.remove(fromPos, toPos);\n    this._forEachBlocksInRange(fromPos, toPos, (b, _, bFromPos, bToPos) => {\n      removeDetails.aggregate(b.remove(bFromPos, bToPos));\n    });\n    return removeDetails;\n  }\n\n  /**\n    @override\n  */\n  nearestInputPos (cursorPos: number, direction: Direction=DIRECTION.NONE): number {\n    if (!this._blocks.length) return 0;\n    const cursor = new PatternCursor(this, cursorPos);\n\n    if (direction === DIRECTION.NONE) {\n      // -------------------------------------------------\n      // NONE should only go out from fixed to the right!\n      // -------------------------------------------------\n      if (cursor.pushRightBeforeInput()) return cursor.pos;\n      cursor.popState();\n      if (cursor.pushLeftBeforeInput()) return cursor.pos;\n      return this.value.length;\n    }\n\n    // FORCE is only about a|* otherwise is 0\n    if (direction === DIRECTION.LEFT || direction === DIRECTION.FORCE_LEFT) {\n      // try to break fast when *|a\n      if (direction === DIRECTION.LEFT) {\n        cursor.pushRightBeforeFilled();\n        if (cursor.ok && cursor.pos === cursorPos) return cursorPos;\n        cursor.popState();\n      }\n\n      // forward flow\n      cursor.pushLeftBeforeInput();\n      cursor.pushLeftBeforeRequired();\n      cursor.pushLeftBeforeFilled();\n\n      // backward flow\n      if (direction === DIRECTION.LEFT) {\n        cursor.pushRightBeforeInput();\n        cursor.pushRightBeforeRequired();\n        if (cursor.ok && cursor.pos <= cursorPos) return cursor.pos;\n        cursor.popState();\n        if (cursor.ok && cursor.pos <= cursorPos) return cursor.pos;\n        cursor.popState();\n      }\n      if (cursor.ok) return cursor.pos;\n      if (direction === DIRECTION.FORCE_LEFT) return 0;\n\n      cursor.popState();\n      if (cursor.ok) return cursor.pos;\n\n      cursor.popState();\n      if (cursor.ok) return cursor.pos;\n\n      // cursor.popState();\n      // if (\n      //   cursor.pushRightBeforeInput() &&\n      //   // TODO HACK for lazy if has aligned left inside fixed and has came to the start - use start position\n      //   (!this.lazy || this.extractInput())\n      // ) return cursor.pos;\n\n      return 0;\n    }\n\n    if (direction === DIRECTION.RIGHT || direction === DIRECTION.FORCE_RIGHT) {\n      // forward flow\n      cursor.pushRightBeforeInput();\n      cursor.pushRightBeforeRequired();\n\n      if (cursor.pushRightBeforeFilled()) return cursor.pos;\n      if (direction === DIRECTION.FORCE_RIGHT) return this.value.length;\n\n      // backward flow\n      cursor.popState();\n      if (cursor.ok) return cursor.pos;\n\n      cursor.popState();\n      if (cursor.ok) return cursor.pos;\n\n      return this.nearestInputPos(cursorPos, DIRECTION.LEFT);\n    }\n\n    return cursorPos;\n  }\n\n  /** Get block by name */\n  maskedBlock (name: string): ?PatternBlock {\n    return this.maskedBlocks(name)[0];\n  }\n\n  /** Get all blocks by name */\n  maskedBlocks (name: string): Array<PatternBlock> {\n    const indices = this._maskedBlocks[name];\n    if (!indices) return [];\n    return indices.map(gi => this._blocks[gi]);\n  }\n}\nMaskedPattern.DEFAULTS = {\n  lazy: true,\n  placeholderChar: '_'\n};\nMaskedPattern.STOP_CHAR = '`';\nMaskedPattern.ESCAPE_CHAR = '\\\\';\nMaskedPattern.InputDefinition = PatternInputDefinition;\nMaskedPattern.FixedDefinition = PatternFixedDefinition;\n\n\nIMask.MaskedPattern = MaskedPattern;\n","// @flow\nimport MaskedPattern from './pattern.js';\nimport ChangeDetails from '../core/change-details.js';\nimport { normalizePrepare } from '../core/utils.js';\nimport { type AppendFlags } from './base.js';\nimport IMask from '../core/holder.js';\n\n\n/** Pattern which accepts ranges */\nexport default\nclass MaskedRange extends MaskedPattern {\n  /**\n    Optionally sets max length of pattern.\n    Used when pattern length is longer then `to` param length. Pads zeros at start in this case.\n  */\n  maxLength: number;\n  /** Min bound */\n  from: number;\n  /** Max bound */\n  to: number;\n  /** */\n  autofix: boolean | 'pad';\n\n  get _matchFrom (): number {\n    return this.maxLength - String(this.from).length;\n  }\n\n  /**\n    @override\n  */\n  _update (opts: any) {  // TODO type\n    opts = {\n      to: this.to || 0,\n      from: this.from || 0,\n      maxLength: this.maxLength || 0,\n      ...opts,\n    };\n\n    let maxLength = String(opts.to).length;\n    if (opts.maxLength != null) maxLength = Math.max(maxLength, opts.maxLength);\n    opts.maxLength = maxLength;\n\n    const fromStr = String(opts.from).padStart(maxLength, '0');\n    const toStr = String(opts.to).padStart(maxLength, '0');\n    let sameCharsCount = 0;\n    while (sameCharsCount < toStr.length && toStr[sameCharsCount] === fromStr[sameCharsCount]) ++sameCharsCount;\n    opts.mask = toStr.slice(0, sameCharsCount).replace(/0/g, '\\\\0') + '0'.repeat(maxLength - sameCharsCount);\n\n    super._update(opts);\n  }\n\n  /**\n    @override\n  */\n  get isComplete (): boolean {\n    return super.isComplete && Boolean(this.value);\n  }\n\n  boundaries (str: string): [string, string] {\n    let minstr = '';\n    let maxstr = '';\n\n    const [, placeholder, num] = str.match(/^(\\D*)(\\d*)(\\D*)/) || [];\n    if (num) {\n      minstr = '0'.repeat(placeholder.length) + num;\n      maxstr = '9'.repeat(placeholder.length) + num;\n    }\n    minstr = minstr.padEnd(this.maxLength, '0');\n    maxstr = maxstr.padEnd(this.maxLength, '9');\n\n    return [minstr, maxstr];\n  }\n\n  // TODO str is a single char everytime\n  /**\n    @override\n  */ \n  doPrepare (ch: string, flags: AppendFlags={}): string | [string, ChangeDetails] {\n    let details: ChangeDetails;\n    [ch, details] = normalizePrepare(super.doPrepare(ch.replace(/\\D/g, ''), flags));\n\n    if (!this.autofix || !ch) return ch;\n\n    const fromStr = String(this.from).padStart(this.maxLength, '0');\n    const toStr = String(this.to).padStart(this.maxLength, '0');\n\n    let nextVal = this.value + ch;\n    if (nextVal.length > this.maxLength) return '';\n\n    const [minstr, maxstr] = this.boundaries(nextVal);\n\n    if (Number(maxstr) < this.from) return fromStr[nextVal.length - 1];\n\n    if (Number(minstr) > this.to) {\n      if (this.autofix === 'pad' && nextVal.length < this.maxLength) {\n        return ['', details.aggregate(this.append(fromStr[nextVal.length - 1]+ch, flags))];\n      }\n      return toStr[nextVal.length - 1];\n    }\n\n    return ch;\n  }\n\n  /**\n    @override\n  */\n  doValidate (...args: *): boolean {\n    const str = this.value;\n\n    const firstNonZero = str.search(/[^0]/);\n    if (firstNonZero === -1 && str.length <= this._matchFrom) return true;\n\n    const [minstr, maxstr] = this.boundaries(str);\n\n    return this.from <= Number(maxstr) && Number(minstr) <= this.to &&\n      super.doValidate(...args);\n  }\n}\n\n\nIMask.MaskedRange = MaskedRange;\n","// @flow\nimport MaskedPattern from './pattern.js';\nimport MaskedRange from './range.js';\nimport IMask from '../core/holder.js';\n\n\n/** Date mask */\nexport default\nclass MaskedDate extends MaskedPattern {\n  static GET_DEFAULT_BLOCKS: () => {[string]: any};\n  static DEFAULTS: any;\n\n  /** Pattern mask for date according to {@link MaskedDate#format} */\n  pattern: string;\n  /** Start date */\n  min: ?Date;\n  /** End date */\n  max: ?Date;\n  /** */\n  autofix: boolean | 'pad';\n\n  /**\n    @param {Object} opts\n  */\n  constructor (opts: any) {\n    super({\n      ...MaskedDate.DEFAULTS,\n      ...opts\n    });\n  }\n\n  /**\n    @override\n  */\n  _update (opts: any) {\n    if (opts.mask === Date) delete opts.mask;\n    if (opts.pattern) opts.mask = opts.pattern;\n\n    const blocks = opts.blocks;\n    opts.blocks = Object.assign({}, MaskedDate.GET_DEFAULT_BLOCKS());\n    // adjust year block\n    if (opts.min) opts.blocks.Y.from = opts.min.getFullYear();\n    if (opts.max) opts.blocks.Y.to = opts.max.getFullYear();\n    if (opts.min && opts.max && opts.blocks.Y.from === opts.blocks.Y.to\n    ) {\n      opts.blocks.m.from = opts.min.getMonth() + 1;\n      opts.blocks.m.to = opts.max.getMonth() + 1;\n\n      if (opts.blocks.m.from === opts.blocks.m.to) {\n        opts.blocks.d.from = opts.min.getDate();\n        opts.blocks.d.to = opts.max.getDate();\n      }\n    }\n    Object.assign(opts.blocks, this.blocks, blocks);\n\n    // add autofix\n    Object.keys(opts.blocks).forEach(bk => {\n      const b = opts.blocks[bk];\n      if (!('autofix' in b) && 'autofix' in opts) b.autofix = opts.autofix;\n    });\n\n    super._update(opts);\n  }\n\n  /**\n    @override\n  */\n  doValidate (...args: *): boolean {\n    const date = this.date;\n\n    return super.doValidate(...args) &&\n      (!this.isComplete ||\n        this.isDateExist(this.value) && date != null &&\n        (this.min == null || this.min <= date) &&\n        (this.max == null || date <= this.max));\n  }\n\n  /** Checks if date is exists */\n  isDateExist (str: string): boolean {\n    return this.format(this.parse(str, this), this).indexOf(str) >= 0;\n  }\n\n  /** Parsed Date */\n  get date (): ?Date {\n    return this.typedValue;\n  }\n  set date (date: Date) {\n    this.typedValue = date;\n  }\n\n  /**\n    @override\n  */\n  get typedValue (): ?Date {\n    return this.isComplete ? super.typedValue : null;\n  }\n  set typedValue (value: Date) {\n    super.typedValue = value;\n  }\n\n  /**\n    @override\n  */\n  maskEquals (mask: any): boolean {\n    return mask === Date || super.maskEquals(mask);\n  }\n}\nMaskedDate.DEFAULTS = {\n  pattern: 'd{.}`m{.}`Y',\n  format: date => {\n    if (!date) return '';\n\n    const day = String(date.getDate()).padStart(2, '0');\n    const month = String(date.getMonth() + 1).padStart(2, '0');\n    const year = date.getFullYear();\n\n    return [day, month, year].join('.');\n  },\n  parse: str => {\n    const [day, month, year] = str.split('.');\n    return new Date(year, month - 1, day);\n  },\n};\nMaskedDate.GET_DEFAULT_BLOCKS = () => ({\n  d: {\n    mask: MaskedRange,\n    from: 1,\n    to: 31,\n    maxLength: 2,\n  },\n  m: {\n    mask: MaskedRange,\n    from: 1,\n    to: 12,\n    maxLength: 2,\n  },\n  Y: {\n    mask: MaskedRange,\n    from: 1900,\n    to: 9999,\n  }\n});\n\n\nIMask.MaskedDate = MaskedDate;\n","// @flow\nimport IMask from '../core/holder.js';\n\n\nexport\ntype ElementEvent =\n  'selectionChange' |\n  'input' |\n  'drop' |\n  'click' |\n  'focus' |\n  'commit';\n\n/**\n  Generic element API to use with mask\n  @interface\n*/\nexport default\nclass MaskElement {\n  /** */\n  +_unsafeSelectionStart: number;\n  /** */\n  +_unsafeSelectionEnd: number;\n  /** */\n  value: string;\n\n  /** Safely returns selection start */\n  get selectionStart (): number {\n    let start;\n    try {\n      start = this._unsafeSelectionStart;\n    } catch (e) {}\n\n    return start != null ?\n      start :\n      this.value.length;\n  }\n\n  /** Safely returns selection end */\n  get selectionEnd (): number {\n    let end;\n    try {\n      end = this._unsafeSelectionEnd;\n    } catch (e) {}\n\n    return end != null ?\n      end :\n      this.value.length;\n  }\n\n  /** Safely sets element selection */\n  select (start: number, end: number) {\n    if (start == null || end == null ||\n      start === this.selectionStart && end === this.selectionEnd) return;\n\n    try {\n      this._unsafeSelect(start, end);\n    } catch (e) {}\n  }\n\n  /** Should be overriden in subclasses */\n  _unsafeSelect (start: number, end: number): void {}\n  /** Should be overriden in subclasses */\n  get isActive (): boolean { return false; }\n  /** Should be overriden in subclasses */\n  bindEvents (handlers: {[ElementEvent]: Function}) {}\n  /** Should be overriden in subclasses */\n  unbindEvents (): void {}\n}\n\n\nIMask.MaskElement = MaskElement;\n","// @flow\nimport MaskElement, {type ElementEvent} from './mask-element.js';\nimport IMask from '../core/holder.js';\n\n\n/** Bridge between HTMLElement and {@link Masked} */\nexport default\nclass HTMLMaskElement extends MaskElement {\n  /** Mapping between HTMLElement events and mask internal events */\n  static EVENTS_MAP: {[ElementEvent]: string};\n  /** HTMLElement to use mask on */\n  input: HTMLTextAreaElement | HTMLInputElement;\n  _handlers: {[string]: Function};\n\n  /**\n    @param {HTMLInputElement|HTMLTextAreaElement} input\n  */\n  constructor (input: HTMLTextAreaElement | HTMLInputElement) {\n    super();\n    this.input = input;\n    this._handlers = {};\n  }\n\n  /** */\n  // $FlowFixMe https://github.com/facebook/flow/issues/2839\n  get rootElement (): HTMLDocument {\n    return this.input.getRootNode?.() ?? document;\n  }\n\n  /**\n    Is element in focus\n    @readonly\n  */\n  get isActive (): boolean {\n    //$FlowFixMe\n    return this.input === this.rootElement.activeElement;\n  }\n\n  /**\n    Returns HTMLElement selection start\n    @override\n  */\n  get _unsafeSelectionStart (): number {\n    return this.input.selectionStart;\n  }\n\n  /**\n    Returns HTMLElement selection end\n    @override\n  */\n  get _unsafeSelectionEnd (): number {\n    return this.input.selectionEnd;\n  }\n\n  /**\n    Sets HTMLElement selection\n    @override\n  */\n  _unsafeSelect (start: number, end: number) {\n    this.input.setSelectionRange(start, end);\n  }\n\n  /**\n    HTMLElement value\n    @override\n  */\n  get value (): string {\n    return this.input.value;\n  }\n  set value (value: string) {\n    this.input.value = value;\n  }\n\n  /**\n    Binds HTMLElement events to mask internal events\n    @override\n  */\n  bindEvents (handlers: {[ElementEvent]: Function}) {\n    Object.keys(handlers)\n      .forEach(event => this._toggleEventHandler(HTMLMaskElement.EVENTS_MAP[event], handlers[event]));\n  }\n\n  /**\n    Unbinds HTMLElement events to mask internal events\n    @override\n  */\n  unbindEvents () {\n    Object.keys(this._handlers)\n      .forEach(event => this._toggleEventHandler(event));\n  }\n\n  /** */\n  _toggleEventHandler (event: string, handler?: Function): void {\n    if (this._handlers[event]) {\n      this.input.removeEventListener(event, this._handlers[event]);\n      delete this._handlers[event];\n    }\n\n    if (handler) {\n      this.input.addEventListener(event, handler);\n      this._handlers[event] = handler;\n    }\n  }\n}\nHTMLMaskElement.EVENTS_MAP = {\n  selectionChange: 'keydown',\n  input: 'input',\n  drop: 'drop',\n  click: 'click',\n  focus: 'focus',\n  commit: 'blur',\n};\n\n\nIMask.HTMLMaskElement = HTMLMaskElement;\n","// @flow\nimport HTMLMaskElement from './html-mask-element.js';\nimport IMask from '../core/holder.js';\n\n\nexport default\nclass HTMLContenteditableMaskElement extends HTMLMaskElement {\n  /**\n    Returns HTMLElement selection start\n    @override\n  */\n  get _unsafeSelectionStart (): number {\n    const root = this.rootElement;\n    const selection = root.getSelection && root.getSelection();\n    const anchorOffset = selection && selection.anchorOffset;\n    const focusOffset = selection && selection.focusOffset;\n    if (focusOffset == null || anchorOffset == null || anchorOffset < focusOffset) {\n      return anchorOffset;\n    }\n    return focusOffset;\n  }\n\n  /**\n    Returns HTMLElement selection end\n    @override\n  */\n  get _unsafeSelectionEnd (): number {\n    const root = this.rootElement;\n    const selection = root.getSelection && root.getSelection();\n    const anchorOffset = selection && selection.anchorOffset;\n    const focusOffset = selection && selection.focusOffset;\n    if (focusOffset == null || anchorOffset == null || anchorOffset > focusOffset) {\n      return anchorOffset;\n    }\n    return focusOffset;\n  }\n\n  /**\n    Sets HTMLElement selection\n    @override\n  */\n  _unsafeSelect (start: number, end: number) {\n    if (!this.rootElement.createRange) return;\n\n    const range = this.rootElement.createRange();\n    range.setStart(this.input.firstChild || this.input, start);\n    range.setEnd(this.input.lastChild || this.input, end);\n    const root = this.rootElement;\n    const selection = root.getSelection && root.getSelection();\n    if (selection) {\n      selection.removeAllRanges();\n      selection.addRange(range);\n    }\n  }\n\n  /**\n    HTMLElement value\n    @override\n  */\n  get value (): string {\n    // $FlowFixMe\n    return this.input.textContent;\n  }\n  set value (value: string) {\n    this.input.textContent = value;\n  }\n}\n\n\nIMask.HTMLContenteditableMaskElement = HTMLContenteditableMaskElement;\n","// @flow\nimport {objectIncludes, DIRECTION, type Selection} from '../core/utils.js';\nimport ActionDetails from '../core/action-details.js';\nimport MaskedDate from '../masked/date.js';\nimport createMask, {maskedClass} from '../masked/factory.js';\nimport type Masked from '../masked/base.js';\nimport {type Mask} from '../masked/base.js';\nimport MaskElement from './mask-element.js';\nimport HTMLMaskElement from './html-mask-element.js';\nimport HTMLContenteditableMaskElement from './html-contenteditable-mask-element.js';\nimport IMask from '../core/holder.js';\n\n\n/** Listens to element events and controls changes between element and {@link Masked} */\nexport default\nclass InputMask {\n  /**\n    View element\n    @readonly\n  */\n  el: MaskElement;\n\n  /**\n    Internal {@link Masked} model\n    @readonly\n  */\n  masked: Masked<*>;\n  alignCursor: () => void;\n  alignCursorFriendly: () => void;\n\n  _listeners: {[string]: Array<Function>};\n  _value: string;\n  _changingCursorPos: number;\n  _unmaskedValue: string;\n  _saveSelection: (?Event) => void;\n  _selection: Selection;\n  _onInput: () => void;\n  _onChange: () => void;\n  _onDrop: (Event) => void;\n  _onFocus: (Event) => void;\n  _onClick: (Event) => void;\n  _cursorChanging: ?TimeoutID;\n  _inputEvent: ?InputEvent;\n\n  /**\n    @param {MaskElement|HTMLInputElement|HTMLTextAreaElement} el\n    @param {Object} opts\n  */\n  constructor (el: MaskElement | HTMLTextAreaElement | HTMLInputElement, opts: {[string]: any} | Masked<*>) {\n    this.el =\n      (el instanceof MaskElement) ? el :\n      (el.isContentEditable && el.tagName !== 'INPUT' && el.tagName !== 'TEXTAREA') ? new HTMLContenteditableMaskElement(el) :\n      new HTMLMaskElement(el);\n    this.masked = createMask(opts);\n\n    this._listeners = {};\n    this._value = '';\n    this._unmaskedValue = '';\n\n    this._saveSelection = this._saveSelection.bind(this);\n    this._onInput = this._onInput.bind(this);\n    this._onChange = this._onChange.bind(this);\n    this._onDrop = this._onDrop.bind(this);\n    this._onFocus = this._onFocus.bind(this);\n    this._onClick = this._onClick.bind(this);\n    this.alignCursor = this.alignCursor.bind(this);\n    this.alignCursorFriendly = this.alignCursorFriendly.bind(this);\n\n    this._bindEvents();\n\n    // refresh\n    this.updateValue();\n    this._onChange();\n  }\n\n  /** Read or update mask */\n  get mask (): Mask {\n    return this.masked.mask;\n  }\n\n  maskEquals (mask: Mask): boolean {\n    return mask == null || this.masked?.maskEquals(mask);\n  }\n\n  set mask (mask: Mask) {\n    if (this.maskEquals(mask)) return;\n\n    // $FlowFixMe No ideas ... after update\n    if (!(mask instanceof IMask.Masked) && this.masked.constructor === maskedClass(mask)) {\n      this.masked.updateOptions({mask});\n      return;\n    }\n\n    const masked = createMask({mask});\n    masked.unmaskedValue = this.masked.unmaskedValue;\n    this.masked = masked;\n  }\n\n  /** Raw value */\n  get value (): string {\n    return this._value;\n  }\n\n  set value (str: string) {\n    if (this.value === str) return;\n\n    this.masked.value = str;\n    this.updateControl();\n    this.alignCursor();\n  }\n\n  /** Unmasked value */\n  get unmaskedValue (): string {\n    return this._unmaskedValue;\n  }\n\n  set unmaskedValue (str: string) {\n    if (this.unmaskedValue === str) return;\n\n    this.masked.unmaskedValue = str;\n    this.updateControl();\n    this.alignCursor();\n  }\n\n  /** Typed unmasked value */\n  get typedValue (): any {\n    return this.masked.typedValue;\n  }\n\n  set typedValue (val: any) {\n    if (this.masked.typedValueEquals(val)) return;\n\n    this.masked.typedValue = val;\n    this.updateControl();\n    this.alignCursor();\n  }\n\n  /**\n    Starts listening to element events\n    @protected\n  */\n  _bindEvents () {\n    this.el.bindEvents({\n      selectionChange: this._saveSelection,\n      input: this._onInput,\n      drop: this._onDrop,\n      click: this._onClick,\n      focus: this._onFocus,\n      commit: this._onChange,\n    });\n  }\n\n  /**\n    Stops listening to element events\n    @protected\n   */\n  _unbindEvents () {\n    if (this.el) this.el.unbindEvents();\n  }\n\n  /**\n    Fires custom event\n    @protected\n   */\n  _fireEvent (ev: string, ...args: *) {\n    const listeners = this._listeners[ev];\n    if (!listeners) return;\n\n    listeners.forEach(l => l(...args));\n  }\n\n  /**\n    Current selection start\n    @readonly\n  */\n  get selectionStart (): number {\n    return this._cursorChanging ?\n      this._changingCursorPos :\n\n      this.el.selectionStart;\n  }\n\n  /** Current cursor position */\n  get cursorPos (): number {\n    return this._cursorChanging ?\n      this._changingCursorPos :\n\n      this.el.selectionEnd;\n  }\n  set cursorPos (pos: number) {\n    if (!this.el || !this.el.isActive) return;\n\n    this.el.select(pos, pos);\n    this._saveSelection();\n  }\n\n  /**\n    Stores current selection\n    @protected\n  */\n  _saveSelection (/* ev */) {\n    if (this.value !== this.el.value) {\n      console.warn('Element value was changed outside of mask. Syncronize mask using `mask.updateValue()` to work properly.'); // eslint-disable-line no-console\n    }\n    this._selection = {\n      start: this.selectionStart,\n      end: this.cursorPos\n    };\n  }\n\n  /** Syncronizes model value from view */\n  updateValue () {\n    this.masked.value = this.el.value;\n    this._value = this.masked.value;\n  }\n\n  /** Syncronizes view from model value, fires change events */\n  updateControl () {\n    const newUnmaskedValue = this.masked.unmaskedValue;\n    const newValue = this.masked.value;\n    const isChanged = (this.unmaskedValue !== newUnmaskedValue ||\n      this.value !== newValue);\n\n    this._unmaskedValue = newUnmaskedValue;\n    this._value = newValue;\n\n    if (this.el.value !== newValue) this.el.value = newValue;\n    if (isChanged) this._fireChangeEvents();\n  }\n\n  /** Updates options with deep equal check, recreates @{link Masked} model if mask type changes */\n  updateOptions (opts: {[string]: any}) {\n    const { mask, ...restOpts } = opts;\n\n    const updateMask = !this.maskEquals(mask);\n    const updateOpts = !objectIncludes(this.masked, restOpts);\n\n    if (updateMask) this.mask = mask;\n    if (updateOpts) this.masked.updateOptions(restOpts);\n\n    if (updateMask || updateOpts) this.updateControl();\n  }\n\n  /** Updates cursor */\n  updateCursor (cursorPos: number) {\n    if (cursorPos == null) return;\n    this.cursorPos = cursorPos;\n\n    // also queue change cursor for mobile browsers\n    this._delayUpdateCursor(cursorPos);\n  }\n\n  /**\n    Delays cursor update to support mobile browsers\n    @private\n  */\n  _delayUpdateCursor (cursorPos: number) {\n    this._abortUpdateCursor();\n    this._changingCursorPos = cursorPos;\n    this._cursorChanging = setTimeout(() => {\n      if (!this.el) return; // if was destroyed\n      this.cursorPos = this._changingCursorPos;\n      this._abortUpdateCursor();\n    }, 10);\n  }\n\n  /**\n    Fires custom events\n    @protected\n  */\n  _fireChangeEvents () {\n    this._fireEvent('accept', this._inputEvent);\n    if (this.masked.isComplete) this._fireEvent('complete', this._inputEvent);\n  }\n\n  /**\n    Aborts delayed cursor update\n    @private\n  */\n  _abortUpdateCursor () {\n    if (this._cursorChanging) {\n      clearTimeout(this._cursorChanging);\n      delete this._cursorChanging;\n    }\n  }\n\n  /** Aligns cursor to nearest available position */\n  alignCursor () {\n    this.cursorPos = this.masked.nearestInputPos(this.masked.nearestInputPos(this.cursorPos, DIRECTION.LEFT));\n  }\n\n  /** Aligns cursor only if selection is empty */\n  alignCursorFriendly () {\n    if (this.selectionStart !== this.cursorPos) return;  // skip if range is selected\n    this.alignCursor();\n  }\n\n  /** Adds listener on custom event */\n  on (ev: string, handler: Function): this {\n    if (!this._listeners[ev]) this._listeners[ev] = [];\n    this._listeners[ev].push(handler);\n    return this;\n  }\n\n  /** Removes custom event listener */\n  off (ev: string, handler: Function): this {\n    if (!this._listeners[ev]) return this;\n    if (!handler) {\n      delete this._listeners[ev];\n      return this;\n    }\n    const hIndex = this._listeners[ev].indexOf(handler);\n    if (hIndex >= 0) this._listeners[ev].splice(hIndex, 1);\n    return this;\n  }\n\n  /** Handles view input event */\n  _onInput (e: InputEvent): void {\n    this._inputEvent = e;\n    this._abortUpdateCursor();\n\n    // fix strange IE behavior\n    if (!this._selection) return this.updateValue();\n\n    const details = new ActionDetails(\n      // new state\n      this.el.value, this.cursorPos,\n      // old state\n      this.value, this._selection,\n    );\n\n    const oldRawValue = this.masked.rawInputValue;\n\n    const offset = this.masked.splice(\n      details.startChangePos,\n      details.removed.length,\n      details.inserted,\n      details.removeDirection,\n      { input: true, raw: true },\n    ).offset;\n\n    // force align in remove direction only if no input chars were removed\n    // otherwise we still need to align with NONE (to get out from fixed symbols for instance)\n    const removeDirection = oldRawValue === this.masked.rawInputValue ?\n      details.removeDirection :\n      DIRECTION.NONE;\n\n    let cursorPos = this.masked.nearestInputPos(\n      details.startChangePos + offset,\n      removeDirection,\n    );\n    if (removeDirection !== DIRECTION.NONE) cursorPos = this.masked.nearestInputPos(cursorPos, DIRECTION.NONE);\n\n    this.updateControl();\n    this.updateCursor(cursorPos);\n    delete this._inputEvent;\n  }\n\n  /** Handles view change event and commits model value */\n  _onChange () {\n    if (this.value !== this.el.value) {\n      this.updateValue();\n    }\n    this.masked.doCommit();\n    this.updateControl();\n    this._saveSelection();\n  }\n\n  /** Handles view drop event, prevents by default */\n  _onDrop (ev: Event) {\n    ev.preventDefault();\n    ev.stopPropagation();\n  }\n\n  /** Restore last selection on focus */\n  _onFocus (ev: Event) {\n    this.alignCursorFriendly();\n  }\n\n  /** Restore last selection on focus */\n  _onClick (ev: Event) {\n    this.alignCursorFriendly();\n  }\n\n  /** Unbind view events and removes element reference */\n  destroy () {\n    this._unbindEvents();\n    // $FlowFixMe why not do so?\n    this._listeners.length = 0;\n    // $FlowFixMe\n    delete this.el;\n  }\n}\n\n\nIMask.InputMask = InputMask;\n","// @flow\nimport MaskedPattern from './pattern.js';\nimport IMask from '../core/holder.js';\n\n\n/** Pattern which validates enum values */\nexport default\nclass MaskedEnum extends MaskedPattern {\n  enum: Array<string>;\n\n  /**\n    @override\n    @param {Object} opts\n  */\n  _update (opts: any) {  // TODO type\n    if (opts.enum) opts.mask = '*'.repeat(opts.enum[0].length);\n\n    super._update(opts);\n  }\n\n  /**\n    @override\n  */\n  doValidate (...args: *): boolean {\n    return this.enum.some(e => e.indexOf(this.unmaskedValue) >= 0) &&\n      super.doValidate(...args);\n  }\n}\n\n\nIMask.MaskedEnum = MaskedEnum;\n","// @flow\nimport { escapeRegExp, indexInDirection, posInDirection, type Direction, DIRECTION, normalizePrepare } from '../core/utils.js';\nimport ChangeDetails from '../core/change-details.js';\nimport { type TailDetails } from '../core/tail-details.js';\n\nimport Masked, { type MaskedOptions, type ExtractFlags, type AppendFlags } from './base.js';\nimport IMask from '../core/holder.js';\n\n\ntype MaskedNumberOptions = {\n  ...MaskedOptions<Class<Number>>,\n  radix: $PropertyType<MaskedNumber, 'radix'>,\n  thousandsSeparator: $PropertyType<MaskedNumber, 'thousandsSeparator'>,\n  mapToRadix: $PropertyType<MaskedNumber, 'mapToRadix'>,\n  scale: $PropertyType<MaskedNumber, 'scale'>,\n  signed: $PropertyType<MaskedNumber, 'signed'>,\n  normalizeZeros: $PropertyType<MaskedNumber, 'normalizeZeros'>,\n  padFractionalZeros: $PropertyType<MaskedNumber, 'padFractionalZeros'>,\n};\n\n/**\n  Number mask\n  @param {Object} opts\n  @param {string} opts.radix - Single char\n  @param {string} opts.thousandsSeparator - Single char\n  @param {Array<string>} opts.mapToRadix - Array of single chars\n  @param {number} opts.min\n  @param {number} opts.max\n  @param {number} opts.scale - Digits after point\n  @param {boolean} opts.signed - Allow negative\n  @param {boolean} opts.normalizeZeros - Flag to remove leading and trailing zeros in the end of editing\n  @param {boolean} opts.padFractionalZeros - Flag to pad trailing zeros after point in the end of editing\n*/\nexport default\nclass MaskedNumber extends Masked<Class<Number>> {\n  static DEFAULTS: $Shape<MaskedNumberOptions>;\n  static UNMASKED_RADIX: string;\n\n  /** Single char */\n  radix: string;\n  /** Single char */\n  thousandsSeparator: string;\n  /** Array of single chars */\n  mapToRadix: Array<string>;\n  /** */\n  min: number;\n  /** */\n  max: number;\n  /** Digits after point */\n  scale: number;\n  /** */\n  signed: boolean;\n  /** Flag to remove leading and trailing zeros in the end of editing */\n  normalizeZeros: boolean;\n  /** Flag to pad trailing zeros after point in the end of editing */\n  padFractionalZeros: boolean;\n\n  _numberRegExp: RegExp;\n  _thousandsSeparatorRegExp: RegExp;\n  _mapToRadixRegExp: RegExp;\n  _separatorsProcessed: boolean;\n\n  constructor (opts: $Shape<MaskedNumberOptions>) {\n    super({\n      ...MaskedNumber.DEFAULTS,\n      ...opts\n    });\n  }\n\n  /**\n    @override\n  */\n  _update (opts: MaskedNumberOptions) {\n    super._update(opts);\n    this._updateRegExps();\n  }\n\n  /** */\n  _updateRegExps () {\n    let start = '^' + (this.allowNegative ? '[+|\\\\-]?' : '');\n    let mid = '\\\\d*';\n    let end = (this.scale ?\n      `(${escapeRegExp(this.radix)}\\\\d{0,${this.scale}})?` :\n      '') + '$';\n\n    this._numberRegExp = new RegExp(start + mid + end);\n    this._mapToRadixRegExp = new RegExp(`[${this.mapToRadix.map(escapeRegExp).join('')}]`, 'g');\n    this._thousandsSeparatorRegExp = new RegExp(escapeRegExp(this.thousandsSeparator), 'g');\n  }\n\n  /** */\n  _removeThousandsSeparators (value: string): string {\n    return value.replace(this._thousandsSeparatorRegExp, '');\n  }\n\n  /** */\n  _insertThousandsSeparators (value: string): string {\n    // https://stackoverflow.com/questions/2901102/how-to-print-a-number-with-commas-as-thousands-separators-in-javascript\n    const parts = value.split(this.radix);\n    parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, this.thousandsSeparator);\n    return parts.join(this.radix);\n  }\n\n  /**\n    @override\n  */\n  doPrepare (ch: string, flags: AppendFlags={}): string | [string, ChangeDetails] {\n    ch = this._removeThousandsSeparators(\n      this.scale && this.mapToRadix.length && (\n        /*\n          radix should be mapped when\n          1) input is done from keyboard = flags.input && flags.raw\n          2) unmasked value is set = !flags.input && !flags.raw\n          and should not be mapped when\n          1) value is set = flags.input && !flags.raw\n          2) raw value is set = !flags.input && flags.raw\n        */\n        flags.input && flags.raw ||\n        !flags.input && !flags.raw\n      ) ? ch.replace(this._mapToRadixRegExp, this.radix) : ch\n    );\n    const [prepCh, details] = normalizePrepare(super.doPrepare(ch, flags));\n    if (ch && !prepCh) details.skip = true;\n    return [prepCh, details];\n  }\n\n  /** */\n  _separatorsCount (to: number, extendOnSeparators: boolean=false): number {\n    let count = 0;\n\n    for (let pos = 0; pos < to; ++pos) {\n      if (this._value.indexOf(this.thousandsSeparator, pos) === pos) {\n        ++count;\n        if (extendOnSeparators) to += this.thousandsSeparator.length;\n      }\n    }\n\n    return count;\n  }\n\n  /** */\n  _separatorsCountFromSlice (slice: string=this._value): number {\n    return this._separatorsCount(this._removeThousandsSeparators(slice).length, true);\n  }\n\n  /**\n    @override\n  */\n  extractInput (fromPos?: number=0, toPos?: number=this.value.length, flags?: ExtractFlags): string {\n    [fromPos, toPos] = this._adjustRangeWithSeparators(fromPos, toPos);\n\n    return this._removeThousandsSeparators(super.extractInput(fromPos, toPos, flags));\n  }\n\n  /**\n    @override\n  */\n  _appendCharRaw (ch: string, flags: AppendFlags={}): ChangeDetails {\n    if (!this.thousandsSeparator) return super._appendCharRaw(ch, flags);\n\n    const prevBeforeTailValue = flags.tail && flags._beforeTailState ?\n      flags._beforeTailState._value :\n      this._value;\n    const prevBeforeTailSeparatorsCount = this._separatorsCountFromSlice(prevBeforeTailValue);\n    this._value = this._removeThousandsSeparators(this.value);\n\n    const appendDetails = super._appendCharRaw(ch, flags);\n\n    this._value = this._insertThousandsSeparators(this._value);\n    const beforeTailValue = flags.tail && flags._beforeTailState ?\n      flags._beforeTailState._value :\n      this._value;\n    const beforeTailSeparatorsCount = this._separatorsCountFromSlice(beforeTailValue);\n\n    appendDetails.tailShift += (beforeTailSeparatorsCount - prevBeforeTailSeparatorsCount) * this.thousandsSeparator.length;\n    appendDetails.skip = !appendDetails.rawInserted && ch === this.thousandsSeparator;\n    return appendDetails;\n  }\n\n  /** */\n  _findSeparatorAround (pos: number): number {\n    if (this.thousandsSeparator) {\n      const searchFrom = pos - this.thousandsSeparator.length + 1;\n      const separatorPos = this.value.indexOf(this.thousandsSeparator, searchFrom);\n      if (separatorPos <= pos) return separatorPos;\n    }\n\n    return -1;\n  }\n\n  _adjustRangeWithSeparators (from: number, to: number): [number, number] {\n    const separatorAroundFromPos = this._findSeparatorAround(from);\n    if (separatorAroundFromPos >= 0) from = separatorAroundFromPos;\n\n    const separatorAroundToPos = this._findSeparatorAround(to);\n    if (separatorAroundToPos >= 0) to = separatorAroundToPos + this.thousandsSeparator.length;\n    return [from, to];\n  }\n\n  /**\n    @override\n  */\n  remove (fromPos?: number=0, toPos?: number=this.value.length): ChangeDetails {\n    [fromPos, toPos] = this._adjustRangeWithSeparators(fromPos, toPos);\n\n    const valueBeforePos = this.value.slice(0, fromPos);\n    const valueAfterPos = this.value.slice(toPos);\n\n    const prevBeforeTailSeparatorsCount = this._separatorsCount(valueBeforePos.length);\n    this._value = this._insertThousandsSeparators(this._removeThousandsSeparators(valueBeforePos + valueAfterPos));\n    const beforeTailSeparatorsCount = this._separatorsCountFromSlice(valueBeforePos);\n\n    return new ChangeDetails({\n      tailShift: (beforeTailSeparatorsCount - prevBeforeTailSeparatorsCount) * this.thousandsSeparator.length,\n    });\n  }\n\n  /**\n    @override\n  */\n  nearestInputPos (cursorPos: number, direction?: Direction): number {\n    if (!this.thousandsSeparator) return cursorPos;\n\n    switch (direction) {\n      case DIRECTION.NONE:\n      case DIRECTION.LEFT:\n      case DIRECTION.FORCE_LEFT: {\n        const separatorAtLeftPos = this._findSeparatorAround(cursorPos - 1);\n        if (separatorAtLeftPos >= 0) {\n          const separatorAtLeftEndPos = separatorAtLeftPos + this.thousandsSeparator.length;\n          if (cursorPos < separatorAtLeftEndPos ||\n            this.value.length <= separatorAtLeftEndPos ||\n            direction === DIRECTION.FORCE_LEFT\n          ) {\n            return separatorAtLeftPos;\n          }\n        }\n        break;\n      }\n      case DIRECTION.RIGHT:\n      case DIRECTION.FORCE_RIGHT: {\n        const separatorAtRightPos = this._findSeparatorAround(cursorPos);\n        if (separatorAtRightPos >= 0) {\n          return separatorAtRightPos + this.thousandsSeparator.length;\n        }\n      }\n    }\n\n    return cursorPos;\n  }\n\n  /**\n    @override\n  */\n  doValidate (flags: AppendFlags): boolean {\n    // validate as string\n    let valid = Boolean(this._removeThousandsSeparators(this.value).match(this._numberRegExp));\n\n    if (valid) {\n      // validate as number\n      const number = this.number;\n      valid = valid && !isNaN(number) &&\n        // check min bound for negative values\n        (this.min == null || this.min >= 0 || this.min <= this.number) &&\n        // check max bound for positive values\n        (this.max == null || this.max <= 0 || this.number <= this.max);\n    }\n\n    return valid && super.doValidate(flags);\n  }\n\n  /**\n    @override\n  */\n  doCommit () {\n    if (this.value) {\n      const number = this.number;\n      let validnum = number;\n\n      // check bounds\n      if (this.min != null) validnum = Math.max(validnum, this.min);\n      if (this.max != null) validnum = Math.min(validnum, this.max);\n\n      if (validnum !== number) this.unmaskedValue = this.doFormat(validnum);\n\n      let formatted = this.value;\n\n      if (this.normalizeZeros) formatted = this._normalizeZeros(formatted);\n      if (this.padFractionalZeros && this.scale > 0) formatted = this._padFractionalZeros(formatted);\n\n      this._value = formatted;\n    }\n\n    super.doCommit();\n  }\n\n  /** */\n  _normalizeZeros (value: string): string {\n    const parts = this._removeThousandsSeparators(value).split(this.radix);\n\n    // remove leading zeros\n    parts[0] = parts[0].replace(/^(\\D*)(0*)(\\d*)/, (match, sign, zeros, num) => sign + num);\n    // add leading zero\n    if (value.length && !/\\d$/.test(parts[0])) parts[0] = parts[0] + '0';\n\n    if (parts.length > 1) {\n      parts[1] = parts[1].replace(/0*$/, '');  // remove trailing zeros\n      if (!parts[1].length) parts.length = 1;  // remove fractional\n    }\n\n    return this._insertThousandsSeparators(parts.join(this.radix));\n  }\n\n  /** */\n  _padFractionalZeros (value: string): string {\n    if (!value) return value;\n\n    const parts = value.split(this.radix);\n    if (parts.length < 2) parts.push('');\n    parts[1] = parts[1].padEnd(this.scale, '0');\n    return parts.join(this.radix);\n  }\n\n  /** */\n  doSkipInvalid (ch: string, flags: AppendFlags={}, checkTail?: TailDetails): boolean {\n    const dropFractional = this.scale === 0 && ch !== this.thousandsSeparator && (\n      ch === this.radix ||\n      ch === MaskedNumber.UNMASKED_RADIX ||\n      this.mapToRadix.includes(ch)\n    )\n    return super.doSkipInvalid(ch, flags, checkTail) && !dropFractional;\n  }\n\n  /**\n    @override\n  */\n  get unmaskedValue (): string {\n    return this._removeThousandsSeparators(\n      this._normalizeZeros(\n        this.value))\n      .replace(this.radix, MaskedNumber.UNMASKED_RADIX);\n  }\n\n  set unmaskedValue (unmaskedValue: string) {\n    super.unmaskedValue = unmaskedValue;\n  }\n\n  /**\n    @override\n  */\n  get typedValue (): number {\n    return this.doParse(this.unmaskedValue);\n  }\n\n  set typedValue (n: number) {\n    this.rawInputValue = this.doFormat(n).replace(MaskedNumber.UNMASKED_RADIX, this.radix);\n  }\n\n  /** Parsed Number */\n  get number (): number {\n    return this.typedValue;\n  }\n\n  set number (number: number) {\n    this.typedValue = number;\n  }\n\n  /**\n    Is negative allowed\n    @readonly\n  */\n  get allowNegative (): boolean {\n    return this.signed ||\n      (this.min != null && this.min < 0) ||\n      (this.max != null && this.max < 0);\n  }\n\n  /**\n    @override\n  */\n  typedValueEquals (value: any): boolean {\n    // handle  0 -> '' case (typed = 0 even if value = '')\n    // for details see https://github.com/uNmAnNeR/imaskjs/issues/134\n    return (\n      super.typedValueEquals(value) ||\n      MaskedNumber.EMPTY_VALUES.includes(value) && MaskedNumber.EMPTY_VALUES.includes(this.typedValue)\n    ) && !(value === 0 && this.value === '');\n  }\n}\n\nMaskedNumber.UNMASKED_RADIX = '.';\nMaskedNumber.DEFAULTS = {\n  radix: ',',\n  thousandsSeparator: '',\n  mapToRadix: [MaskedNumber.UNMASKED_RADIX],\n  scale: 2,\n  signed: false,\n  normalizeZeros: true,\n  padFractionalZeros: false,\n  parse: Number,\n  format: n => n.toLocaleString('en-US', { useGrouping: false, maximumFractionDigits: 20 }),\n};\nMaskedNumber.EMPTY_VALUES = [...Masked.EMPTY_VALUES, 0];\n\nIMask.MaskedNumber = MaskedNumber;\n","// @flow\nimport Masked, { type MaskedOptions } from './base.js';\nimport IMask from '../core/holder.js';\n\n\n/** Masking by custom Function */\nexport default\nclass MaskedFunction extends Masked<Function> {\n  /**\n    @override\n    @param {Object} opts\n  */\n  _update (opts: MaskedOptions<Function>) {\n    if (opts.mask) opts.validate = opts.mask;\n    super._update(opts);\n  }\n}\n\n\nIMask.MaskedFunction = MaskedFunction;\n","// @flow\nimport { objectIncludes } from '../core/utils.js';\nimport ChangeDetails from '../core/change-details.js';\nimport createMask from './factory.js';\nimport Masked, { type AppendFlags, type MaskedState } from './base.js';\nimport { normalizePrepare } from '../core/utils.js';\nimport { type TailDetails } from '../core/tail-details.js';\nimport IMask from '../core/holder.js';\n\n\ntype MaskedDynamicState = {|\n  ...MaskedState,\n  _rawInputValue: string,\n  compiledMasks: Array<*>,\n  currentMaskRef: ?Masked<*>,\n  currentMask: *,\n|};\n\ntype DynamicMaskType = Array<{[string]: any}>;\n/** Dynamic mask for choosing apropriate mask in run-time */\nexport default\nclass MaskedDynamic extends Masked<DynamicMaskType> {\n  /** Currently chosen mask */\n  currentMask: ?Masked<*>;\n  /** Compliled {@link Masked} options */\n  compiledMasks: Array<Masked<*>>;\n  /** Chooses {@link Masked} depending on input value */\n  dispatch: (string, Masked<*>, AppendFlags) => Masked<*>;\n\n  /**\n    @param {Object} opts\n  */\n  constructor (opts: any) {\n    super({\n      ...MaskedDynamic.DEFAULTS,\n      ...opts\n    });\n\n    this.currentMask = null;\n  }\n\n  /**\n    @override\n  */\n  _update (opts: any) {\n    super._update(opts);\n    if ('mask' in opts) {\n      // mask could be totally dynamic with only `dispatch` option\n      this.compiledMasks = Array.isArray(opts.mask) ?\n        opts.mask.map(m => createMask(m)) :\n        [];\n\n      // this.currentMask = this.doDispatch(''); // probably not needed but lets see\n    }\n  }\n\n  /**\n    @override\n  */\n  _appendCharRaw (ch: string, flags: AppendFlags={}): ChangeDetails {\n    const details = this._applyDispatch(ch, flags);\n\n    if (this.currentMask) {\n      details.aggregate(this.currentMask._appendChar(ch, this.currentMaskFlags(flags)));\n    }\n\n    return details;\n  }\n\n  _applyDispatch (appended: string='', flags: AppendFlags={}): ChangeDetails {\n    const prevValueBeforeTail = flags.tail && flags._beforeTailState != null ?\n      flags._beforeTailState._value :\n      this.value;\n    const inputValue = this.rawInputValue;\n    const insertValue = flags.tail && flags._beforeTailState != null ?\n      // $FlowFixMe - tired to fight with type system\n      flags._beforeTailState._rawInputValue :\n      inputValue;\n    const tailValue = inputValue.slice(insertValue.length);\n    const prevMask = this.currentMask;\n    const details = new ChangeDetails();\n\n    const prevMaskState = prevMask?.state;\n\n    // clone flags to prevent overwriting `_beforeTailState`\n    this.currentMask = this.doDispatch(appended, { ...flags });\n\n    // restore state after dispatch\n    if (this.currentMask) {\n      if (this.currentMask !== prevMask) {\n        // if mask changed reapply input\n        this.currentMask.reset();\n\n        if (insertValue) {\n          // $FlowFixMe - it's ok, we don't change current mask above\n          const d = this.currentMask.append(insertValue, {raw: true});\n          details.tailShift = d.inserted.length - prevValueBeforeTail.length;\n        }\n\n        if (tailValue) {\n          // $FlowFixMe - it's ok, we don't change current mask above\n          details.tailShift += this.currentMask.append(tailValue, {raw: true, tail: true}).tailShift;\n        }\n      } else {\n        // Dispatch can do something bad with state, so\n        // restore prev mask state\n        this.currentMask.state = prevMaskState;\n      }\n    }\n\n    return details;\n  }\n\n  _appendPlaceholder (...args: *): ChangeDetails {\n    const details = this._applyDispatch(...args);\n\n    if (this.currentMask) {\n      details.aggregate(this.currentMask._appendPlaceholder());\n    }\n\n    return details;\n  }\n\n   /**\n    @override\n  */\n  _appendEager (...args: *): ChangeDetails {\n    const details = this._applyDispatch(...args);\n\n    if (this.currentMask) {\n      details.aggregate(this.currentMask._appendEager());\n    }\n\n    return details;\n  }\n\n  currentMaskFlags (flags: AppendFlags): AppendFlags {\n    return {\n      ...flags,\n      _beforeTailState: flags._beforeTailState?.currentMaskRef === this.currentMask && flags._beforeTailState?.currentMask ||\n        flags._beforeTailState,\n    };\n  }\n\n  /**\n    @override\n  */\n  doDispatch(appended: string, flags: AppendFlags={}): ?Masked<*> {\n    return this.dispatch(appended, this, flags);\n  }\n\n  /**\n    @override\n  */\n  doValidate (flags: AppendFlags): boolean {\n    return super.doValidate(flags) && (\n      !this.currentMask || this.currentMask.doValidate(this.currentMaskFlags(flags))\n    );\n  }\n\n  /**\n    @override\n  */\n  doPrepare (str: string, flags: AppendFlags={}): string | [string, ChangeDetails] {\n    let [s, details] = normalizePrepare(super.doPrepare(str, flags));\n\n    if (this.currentMask) {\n      let currentDetails;\n      ([s, currentDetails] = normalizePrepare(super.doPrepare(s, this.currentMaskFlags(flags))));\n      details = details.aggregate(currentDetails);\n    }\n\n    return [s, details];\n  }\n\n  /**\n    @override\n  */\n  reset () {\n    this.currentMask?.reset();\n    this.compiledMasks.forEach(m => m.reset());\n  }\n\n  /**\n    @override\n  */\n  get value (): string {\n    return this.currentMask ? this.currentMask.value : '';\n  }\n\n  set value (value: string) {\n    super.value = value;\n  }\n\n  /**\n    @override\n  */\n  get unmaskedValue (): string {\n    return this.currentMask ? this.currentMask.unmaskedValue : '';\n  }\n\n  set unmaskedValue (unmaskedValue: string) {\n    super.unmaskedValue = unmaskedValue;\n  }\n\n  /**\n    @override\n  */\n  get typedValue (): any {\n    return this.currentMask ? this.currentMask.typedValue : '';\n  }\n\n  // probably typedValue should not be used with dynamic\n  set typedValue (value: any) {\n    let unmaskedValue = String(value);\n\n    // double check it\n    if (this.currentMask) {\n      this.currentMask.typedValue = value;\n      unmaskedValue = this.currentMask.unmaskedValue;\n    }\n    this.unmaskedValue = unmaskedValue;\n  }\n\n  /**\n    @override\n  */\n  get isComplete (): boolean {\n    return Boolean(this.currentMask?.isComplete);\n  }\n\n  /**\n    @override\n  */\n  get isFilled (): boolean {\n    return Boolean(this.currentMask?.isFilled);\n  }\n\n  /**\n    @override\n  */\n  remove (...args: *): ChangeDetails {\n    const details: ChangeDetails = new ChangeDetails();\n    if (this.currentMask) {\n      details.aggregate(this.currentMask.remove(...args))\n        // update with dispatch\n        .aggregate(this._applyDispatch());\n    }\n\n    return details;\n  }\n\n  /**\n    @override\n  */\n  get state (): MaskedDynamicState {\n    return {\n      ...super.state,\n      _rawInputValue: this.rawInputValue,\n      compiledMasks: this.compiledMasks.map(m => m.state),\n      currentMaskRef: this.currentMask,\n      currentMask: this.currentMask?.state,\n    };\n  }\n\n  set state (state: MaskedDynamicState) {\n    const {compiledMasks, currentMaskRef, currentMask, ...maskedState} = state;\n    this.compiledMasks.forEach((m, mi) => m.state = compiledMasks[mi]);\n    if (currentMaskRef != null) {\n      this.currentMask = currentMaskRef;\n      this.currentMask.state = currentMask;\n    }\n    super.state = maskedState;\n  }\n\n  /**\n    @override\n  */\n  extractInput (...args: *): string {\n    return this.currentMask ?\n      this.currentMask.extractInput(...args) :\n      '';\n  }\n\n  /**\n    @override\n  */\n  extractTail (...args: *): TailDetails {\n    return this.currentMask ?\n      this.currentMask.extractTail(...args) :\n      super.extractTail(...args);\n  }\n\n  /**\n    @override\n  */\n  doCommit () {\n    if (this.currentMask) this.currentMask.doCommit();\n    super.doCommit();\n  }\n\n  /**\n    @override\n  */\n  nearestInputPos(...args: *): number {\n    return this.currentMask ?\n      this.currentMask.nearestInputPos(...args) :\n      super.nearestInputPos(...args);\n  }\n\n  get overwrite (): ?boolean | 'shift' {\n    return this.currentMask ?\n      this.currentMask.overwrite :\n      super.overwrite;\n  }\n\n  set overwrite (overwrite: *) {\n    console.warn('\"overwrite\" option is not available in dynamic mask, use this option in siblings');\n  }\n\n  get eager (): boolean | 'remove' | 'append' {\n    return this.currentMask ?\n      this.currentMask.eager :\n      super.eager;\n  }\n\n  set eager (eager: *) {\n    console.warn('\"eager\" option is not available in dynamic mask, use this option in siblings');\n  }\n\n  get skipInvalid (): boolean {\n    return this.currentMask ?\n      this.currentMask.skipInvalid :\n      super.skipInvalid;\n  }\n\n  set skipInvalid (skipInvalid: *) {\n    console.warn('\"skipInvalid\" option is not available in dynamic mask, use this option in siblings');\n  }\n\n  /**\n    @override\n  */\n  maskEquals (mask: any): boolean {\n    return Array.isArray(mask) &&\n      this.compiledMasks.every((m, mi) => {\n        if (!mask[mi]) return;\n\n        const { mask: oldMask, ...restOpts } = mask[mi];\n        return objectIncludes(m, restOpts) && m.maskEquals(oldMask);\n      });\n  }\n\n  /**\n    @override\n  */\n  typedValueEquals (value: any): boolean {\n    return Boolean(this.currentMask?.typedValueEquals(value));\n  }\n}\n\nMaskedDynamic.DEFAULTS = {\n  dispatch: (appended, masked, flags) => {\n    if (!masked.compiledMasks.length) return;\n\n    const inputValue = masked.rawInputValue;\n\n    // simulate input\n    const inputs = masked.compiledMasks.map((m, index) => {\n      m.reset();\n      m.append(inputValue, { raw: true });\n      m.append(appended, masked.currentMaskFlags(flags));\n      const weight = m.rawInputValue.length;\n\n      return {weight, index};\n    });\n\n    // pop masks with longer values first\n    inputs.sort((i1, i2) => i2.weight - i1.weight);\n\n    return masked.compiledMasks[inputs[0].index];\n  }\n};\n\n\nIMask.MaskedDynamic = MaskedDynamic;\n","import createMask from './factory';\nimport IMask from '../core/holder.js';\n\n\n/** Mask pipe source and destination types */\nexport\nconst PIPE_TYPE = {\n  MASKED: 'value',\n  UNMASKED: 'unmaskedValue',\n  TYPED: 'typedValue',\n};\n\n/** Creates new pipe function depending on mask type, source and destination options */\nexport\nfunction createPipe (mask, from=PIPE_TYPE.MASKED, to=PIPE_TYPE.MASKED) {\n  const masked = createMask(mask);\n  return (value) => masked.runIsolated(m => {\n    m[from] = value;\n    return m[to];\n  });\n}\n\n/** Pipes value through mask depending on mask type, source and destination options */\nexport\nfunction pipe (value, ...pipeArgs) {\n  return createPipe(...pipeArgs)(value);\n}\n\n\nIMask.PIPE_TYPE = PIPE_TYPE;\nIMask.createPipe = createPipe;\nIMask.pipe = pipe;\n","import IMask from './imask.js';\nexport { default as InputMask } from './controls/input.js';\n\nexport { default as Masked } from './masked/base.js';\nexport { default as MaskedPattern } from './masked/pattern.js';\nexport { default as MaskedEnum } from './masked/enum.js';\nexport { default as MaskedRange } from './masked/range.js';\nexport { default as MaskedNumber } from './masked/number.js';\nexport { default as MaskedDate } from './masked/date.js';\nexport { default as MaskedRegExp } from './masked/regexp.js';\nexport { default as MaskedFunction } from './masked/function.js';\nexport { default as MaskedDynamic } from './masked/dynamic.js';\nexport { default as createMask } from './masked/factory.js';\nexport { default as MaskElement } from './controls/mask-element.js';\nexport { default as HTMLMaskElement } from './controls/html-mask-element.js';\nexport { default as HTMLContenteditableMaskElement } from './controls/html-contenteditable-mask-element.js';\nexport { createPipe, pipe, PIPE_TYPE } from './masked/pipe.js';\n\nexport { default as ChangeDetails } from './core/change-details.js';\n\n\ntry {\n  globalThis.IMask = IMask;\n} catch(e) {}\nexport default IMask;\n"],"names":["ChangeDetails","constructor","details","Object","assign","this","inserted","rawInserted","skip","tailShift","aggregate","offset","length","isString","str","String","DIRECTION","NONE","LEFT","FORCE_LEFT","RIGHT","FORCE_RIGHT","escapeRegExp","replace","normalizePrepare","prep","Array","isArray","objectIncludes","b","a","i","arrA","arrB","dateA","Date","dateB","getTime","regexpA","RegExp","regexpB","toString","keys","prototype","hasOwnProperty","call","ActionDetails","value","cursorPos","oldValue","oldSelection","slice","startChangePos","start","Math","min","insertedCount","substr","removedCount","max","end","removed","head","substring","tail","removeDirection","ContinuousTailDetails","arguments","undefined","from","stop","extend","appendTo","masked","append","_appendPlaceholder","state","unshift","beforePos","shiftChar","shift","IMask","el","opts","InputMask","Masked","_value","_update","DEFAULTS","isInitialized","updateOptions","withValueRefresh","bind","reset","resolve","input","doCommit","unmaskedValue","typedValue","doParse","doFormat","rawInputValue","extractInput","raw","isComplete","isFilled","nearestInputPos","direction","fromPos","toPos","extractTail","appendTail","_appendCharRaw","ch","_appendChar","flags","checkTail","consistentState","doPrepare","consistentTail","appended","doValidate","beforeTailState","overwrite","tailDetails","_appendEager","Error","_beforeTailState","ci","d","doSkipInvalid","eager","remove","fn","_refreshing","rawInput","ret","indexOf","runIsolated","_isolated","skipInvalid","prepare","validate","parent","commit","format","parse","splice","deleteCount","tailPos","eagerRemove","oldRawValue","forceDirection","valLength","maskEquals","mask","typedValueEquals","tval","EMPTY_VALUES","includes","maskedClass","MaskedRegExp","MaskedPattern","MaskedDate","Number","MaskedNumber","MaskedDynamic","Function","MaskedFunction","console","warn","createMask","MaskedClass","v","DEFAULT_INPUT_DEFINITIONS","PatternInputDefinition","blockOpts","_objectWithoutPropertiesLoose","_excluded","isOptional","placeholderChar","Boolean","lazy","maxPos","boundPos","PatternFixedDefinition","isFixed","isUnmasking","_isRawInput","appendEager","isResolved","char","ChunksTailDetails","chunks","map","join","tailChunk","lastChunk","extendLast","push","firstTailChunk","blockIndex","chunk","lastBlockIter","_mapPosToBlock","chunkBlock","index","_stops","_blocks","remainChars","c","props","cstate","chunkShiftPos","PatternCursor","pos","_log","ok","block","_blockStartPos","s","pushState","popState","pop","bindBlock","_pushLeft","_this$block","_pushRight","pushLeftBeforeFilled","pushLeftBeforeInput","pushLeftBeforeRequired","pushRightBeforeFilled","pushRightBeforeInput","pushRightBeforeRequired","search","super","definitions","_rebuildMask","defs","_maskedBlocks","pattern","unmaskingBlock","optionalBlock","blocks","p","bNames","filter","bName","sort","maskedBlock","isInput","STOP_CHAR","ESCAPE_CHAR","def","maskedState","forEach","bi","every","reduce","_this$_mapPosToBlock","startBlockIndex","blockIter","_flags$_beforeTailSta","_flags$_beforeTailSta2","blockDetails","chunkTail","_forEachBlocksInRange","bFromPos","bToPos","blockChunk","_findStopBefore","_","stopBefore","si","toBlockIndex","startBlockIter","endBlockIndex","args","bDetails","accVal","blockStartPos","fromBlockIter","toBlockIter","isSameBlock","fromBlockStartPos","fromBlockEndPos","removeDetails","cursor","name","maskedBlocks","indices","gi","InputDefinition","FixedDefinition","MaskedRange","_matchFrom","maxLength","to","fromStr","padStart","toStr","sameCharsCount","repeat","boundaries","minstr","maxstr","placeholder","num","match","padEnd","autofix","nextVal","GET_DEFAULT_BLOCKS","Y","getFullYear","m","getMonth","getDate","bk","date","isDateExist","day","month","year","split","MaskElement","selectionStart","_unsafeSelectionStart","e","selectionEnd","_unsafeSelectionEnd","select","_unsafeSelect","isActive","bindEvents","handlers","unbindEvents","HTMLMaskElement","_handlers","rootElement","_this$input$getRootNo","_this$input$getRootNo2","_this$input","getRootNode","document","activeElement","setSelectionRange","event","_toggleEventHandler","EVENTS_MAP","handler","removeEventListener","addEventListener","selectionChange","drop","click","focus","HTMLContenteditableMaskElement","root","selection","getSelection","anchorOffset","focusOffset","createRange","range","setStart","firstChild","setEnd","lastChild","removeAllRanges","addRange","textContent","isContentEditable","tagName","_listeners","_unmaskedValue","_saveSelection","_onInput","_onChange","_onDrop","_onFocus","_onClick","alignCursor","alignCursorFriendly","_bindEvents","updateValue","_this$masked","updateControl","val","_unbindEvents","_fireEvent","ev","_len","_key","listeners","l","_cursorChanging","_changingCursorPos","_selection","newUnmaskedValue","newValue","isChanged","_fireChangeEvents","restOpts","updateMask","updateOpts","updateCursor","_delayUpdateCursor","_abortUpdateCursor","setTimeout","_inputEvent","clearTimeout","on","off","hIndex","preventDefault","stopPropagation","destroy","MaskedEnum","enum","some","_updateRegExps","allowNegative","scale","concat","radix","_numberRegExp","_mapToRadixRegExp","mapToRadix","_thousandsSeparatorRegExp","thousandsSeparator","_removeThousandsSeparators","_insertThousandsSeparators","parts","prepCh","_separatorsCount","extendOnSeparators","count","_separatorsCountFromSlice","_adjustRangeWithSeparators","prevBeforeTailValue","prevBeforeTailSeparatorsCount","appendDetails","beforeTailValue","beforeTailSeparatorsCount","_findSeparatorAround","searchFrom","separatorPos","separatorAroundFromPos","separatorAroundToPos","valueBeforePos","valueAfterPos","separatorAtLeftPos","separatorAtLeftEndPos","separatorAtRightPos","valid","number","isNaN","validnum","formatted","normalizeZeros","_normalizeZeros","padFractionalZeros","_padFractionalZeros","sign","zeros","test","dropFractional","UNMASKED_RADIX","n","signed","toLocaleString","useGrouping","maximumFractionDigits","currentMask","compiledMasks","_applyDispatch","currentMaskFlags","prevValueBeforeTail","inputValue","insertValue","_rawInputValue","tailValue","prevMask","prevMaskState","doDispatch","currentMaskRef","dispatch","currentDetails","_this$currentMask","_this$currentMask2","_this$currentMask3","_this$currentMask4","mi","_mask$mi","oldMask","_excluded2","_this$currentMask5","inputs","weight","i1","i2","PIPE_TYPE","MASKED","UNMASKED","TYPED","createPipe","pipe","pipeArgs","globalThis"],"mappings":"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"}